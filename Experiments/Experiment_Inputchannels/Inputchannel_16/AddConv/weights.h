#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {12, -63, -66, 14, 12, -7, 65, -23, 8, -28, 28, -3, -36, 64, -6, 8, 61, -51, 51, -36, -49, 42, -43, 6, -37, -44, -69, 51, 48, 37, -18, -73, -53, -16, -52, 65, 6, 72, -11, -70, 62, -25, 4, 0, -35, 59, -51, -67, 44, -39, -53, -22, -17, 9, 28, -56, 63, -60, 55, -57, 67, 37, -20, -28, 19, 45, 36, 25, 42, 10, 24, -63, 25, -69, 72, 44, -46, -36, -56, 42, 61, -20, -10, 10, -27, -18, -67, -46, -7, 36, 20, 50, 59, -36, 37, 0, -56, -43, 64, 68, 61, -58, 1, 8, 69, 5, -27, 6, -11, -41, 43, -5, -19, -30, 46, 10, -12, 36, 35, 45, 21, 44, 48, -12, 4, 12, 47, -18, -24, 55, 43, -18, -32, 26, 4, -68, 26, 69, 52, -17, -16, 24, -9, -45, -32, -11, 25, -35, 4, -20, 30, -7, 52, -21, -16, -2, -5, -8, -1, 44, -48, -26, 35, 67, 9, -8, 1, 56, 23, 9, -47, -62, -71, -47, -60, 12, 12, -37, 24, -62, 70, 55, 45, 14, -60, 27, -63, -26, 36, 30, -50, 37, -64, -4, 19, 29, -61, 15, -7, 70, -57, 19, -22, 42, -70, 19, -1, 28, -1, 73, -2, 29, 31, -3, -18, -25, 19, 44, -8, -31, 62, 51, -59, 0, 41, 40, -56, -29, -55, -51, 31, -9, 35, 47, -18, 1, 13, 64, -59, -18, -24, -51, -68, -4, -60, 64, 22, 9, -74, 2, 4, 9, 12, -16, 16, -73, -67, -46, -39, -34, -56, 46, 23, -37, -19, -2, -29, -66, 63, -28, 0, -73, -50, -33, -55, -23, 37, 33, 67, -22, 23, 20, -1, 4, 23, -2, -61, -41, 70, 45, 44, 37, -45, -16, -18, 58, -58, 73, -14, 19, -2, -57, 20, -15, -34, 16, -20, -54, 16, 3, -8, 22, -3, -18, -36, 58, -73, 72, -69, 39, -72, 12, 22, -69, -67, 64, 6, -71, -14, -48, -68, 49, -31, -64, 35, -44, -71, 53, -55, -6, 19, -15, -44, 46, -63, 50, -29, 43, -24, -73, 69, -38, -43, 44, 11, -65, -16, -42, -33, 72, 70, 25, -16, -65, -47, -71, 21, -71, -6, -55, -45, -66, 52, 65, -25, 7, 26, -50, 13, -2, -11, 73, -18, -61, -61, -37, 39, 61, 31, -8, -68, 10, -10, -6, 65, -16, -11, 44, 44, 44, 31, 58, 69, -30, -35, -73, 2, -13, 55, 2, 49, -17, -9, 19, -8, 6, 50, 64, 17, -22, 27, 69, -73, 70, 51, 36, 6, -70, 41, -20, 69, -26, 63, 51, -52, -39, -28, -7, -14, -64, -37, 65, 9, 66, -50, -21, -43, 69, 59, 54, 50, 24, 11, -8, 29, -14, 68, -18, 73, -6, 47, -54, -15, -20, 47, 57, 44, 66, -44, 59, -51, -27, 9, 70, -54, -5, -44, 34, -58, 25, -62, 50, 8, -30, -14, -10, 3, -48, -64, -18, -18, 20, 3, -30, 54, -19, -19, 66, 39, 24, 69, 22, -4, -54, -18, 16, -44, -72, -25, 45, -13, 37, -64, 66, -11, 20, -40, 6, -15, 7, -68, -63, -37, -32, -9, -37, 61, -17, 32, 20, 8, 2, -45, 10, -60, -61, -45, 7, 42, 22, 34, 33, 67, 73, -1, 44, 13, -43, 15, 4, -20, 56, 9, -51, -34, 66, 40, -38, 31, 70, -61, 8, -23, 18, -14, -56, 18, -25, -51, -45, -5, 7, 14, -41, -62, 1, -50, 49, 23, 12, 9, 4, -29, 44, -15, -33, -1, 59, -39, 24, 26, 45, 67, 15, -38, -12, -38, 36, 15, -13, 44, -17, -10, -69, 10, -35, 8, -39, -43, -52, -14, 20, 42, -9, 50, 33, -61, -60, 50, -40, 11, -64, 14, 53, 40, -65, -2, 35, -68, 33, 1, -56, 70, -4, -20, -23, 31, 52, -70, 25, -33, -23, -13, -6, -11, 56, 66, -40, -7, 31, 1, 39, -45, -26, 40, -36, -74, 25, 44, -63, -7, -37, 20, 2, -48, 4, -22, 9, -4, -7, 6, -11, 32, 2, 57, 67, -44, -59, -66, 25, 26, -66, 46, -27, -51, 9, 72, -33, 40, -63, 11, -63, -35, -49, -38, 5, 19, -29, 5, -11, -71, -22, -11, 28, 61, 31, -4, -3, 37, 21, 27, 72, -29, -61, -69, 17, -64, 27, 9, 4, -45, 3, 31, -64, 58, 50, 62, 0, -70, 51, -2, -55, -69, -31, -71, 45, 73, 44, -8, 64, 49, 62, -69, -62, 56, 53, -64, -30, -9, 65, 60, 13, -43, -58, -35, -39, -37, 14, 38, 53, 26, 72, -46, 4, 71, 11, 46, 31, 38, -57, -25, -73, 16, 40, -18, 54, 7, 64, 38, 70, 43, 68, 20, 58, -49, -5, -8, 10, -34, 25, -44, -15, -17, 23, 66, 63, 39, -53, -51, -25, 17, 9, -8, 24, 17, -38, 9, -70, -12, 49, 48, -64, -54, 56, -56, -54, 10, 31, -74, 14, -73, 66, 41, -40, -19, 57, -22, 41, -55, 17, 74, 42, 55, 23, -53, -57, 6, -52, 49, 65, 59, 29, 53, -35, -74, -33, -51, 34, 20, 13, 67, 46, 69, 40, 55, 28, -10, 55, -54, -13, 32, -19, -16, -9, 57, 65, 62, 3, 6, 66, 50, 53, 3, -15, 23, -70, 22, -54, 62, 54, -20, -39, 9, 41, 68, -65, 12, 47, 23, -33, -25, -19, 56, 1, 40, -58, 56, 62, 57, 49, 40, -53, -12, 36, 46, 72, -12, -19, 7, -64, 61, -30, -16, 29, -9, -33, 41, -29, 50, -20, -62, -65, -60, -67, -44, 63, 45, -10, 5, -9, 64, 35, -47, 7, 1, -48, 49, 72, 41, 45, -33, -14, -42, -38, -64, -17, -45, -56, 30, 41, -59, -38, 34, 62, -15, 9, 33, 19, 23, 63, 7, 30, -41, -61, -11, 61, -60, -32, 59, -36, 38, -41, 22, 23, 43, 56, 30, -68, -26, 14, -51, 35, 65, 17, -5, 30, 58, -28, 37, -29, -14, -60, -17, 17, 31, 50, -72, 61, 23, -71, 2, -70, 58, -26, 13, 61, -73, -27, -9, 11, -24, -10, 60, 41, 65, 53, -34, -2, -11, 20, 63, 0, -69, -12, -42, 58, -32, -54, 34, 35, -45, 1, 59, 38, -64, 36, -56, -14, -37, -22, 39, 72, -58, -73, -66, 60, -38, 67, 16, 64, 18, 30, -72, 33, 7, -50, 49, 40, -28, 36, -21, 33, -24, 27, 27, -47, -35, 13, 39, -45, -49, 11, 51, -73, -13, 18, 47, -51, 61, -49, -60, 18, 40, 2, 25, -17, -10, -44, 43, 60, 39, -14, 49, -1, -53, -7, -22, 8, -37, -60, -65, 7, 0, 45, 7, 3, 24, -53, 31, -73, -50, -23, -30, -56, 17, 40, 31, -49, 1, -18, 34, 19, 29, -73, 53, 7, -33, 41, 56, -1, 23, -26, 7, -26, -54, 6, -52, 48, -67, -16, -51, -58, -65, -19, 26, 8, -20, 73, 33, -31, -41, -31, 71, 29, 16, -34, -42, -19, 47, -39, 38, -7, 28, 38, -34, 74, -55, -15, -8, -74, -9, 35, -55, -32, -27, -53, -55, 56, 70, -50, 56, 18, -29, 55, 36, 17, 8, 35, -36, 67, -16, -19, -20, -6, -63, -9, 30, 59, -42, -23, 22, 21, 20, -47, 9, 30, -42, -38, -15, 20, -52, 70, 39, 46, -11, -7, -59, -29, -64, -57, -34, -10, -7, 42, -73, -52, 14, 13, -65, 44, -70, -47, 14, 22, 57, -34, 36, -73, -59, -51, -14, -15, -14, -65, -70, 65, -29, 59, -45, 73, -40, 31, 2, -73, 60, 47, 46, -36, 60, -62, -18, 32, 3, 27, -56, -40, -2, -55, 57, 31, 19, -39, 35, -67, -16, 9, 31, 52, -59, 38, 26, -13, 33, -73, -24, -62, -45, -58, -22, 13, -36, -35, 73, -57, -39, 50, 57, 31, 47, 55, -5, -65, -17, 33, 49, 1, 49, -30, -45, 70, -49, 47, 35, 37, 19, 26, -41, -59, -73, 63, -6, -2, -52, -21, -63, 73, 55, -28, 74, 47, 9, 25, 55, 69, 55, -34, 50, -2, -64, -44, 62, -49, -61, 9, -31, -53, -55, 16, -15, 23, -31, -44, 62, -62, 49, 55, -39, -33, 28, 35, 41, 20, -9, -68, -70, -51, -6, -27, -7, -60, -67, 47, 68, -60, -36, 51, 72, -65, 39, -16, -63, -30, -1, -49, -66, -10, -28, -52, -33, 30, 70, -9, 38, -59, 1, 32, -49, 24, -3, -15, 55, -57, 55, 17, 7, -2, 73, -57, -65, 32, 7, -65, -68, -69, 0, -50, -46, -29, 62, -46, 35, -48, 45, 52, 44, -45, 14, 17, 46, -33, -5, -2, 22, 1, -35, -46, -70, 63, 17, -9, 19, 69, 46, 7, 14, 2, -68, -12, -12, -29, 68, -71, -22, 34, 22, -1, 64, 11, 43, -50, -49, -55, -64, 15, -51, 61, -15, -26, 15, -18, 7, -49, 67, 10, -47, -12, 68, 4, 44, 31, -3, 28, 51, -13, -39, 25, 20, -40, 24, -72, -17, -18, 25, -46, -30, 27, 20, 29, -74, 8, 48, -20, 37, -53, -48, 0, 47, 31, -55, 25, 21, 38, 48, -69, 61, 23, -5, 6, -24, 36, 64, 38, -50, -58, -27, 2, -52, -40, 7, 22, -11, -51, 50, -26, 12, 20, -57, -21, 10, 45, 11, -42, -17, -37, 35, -55, 25, -62, 66, 47, 56, -70, 25, 50, -29, 48, 29, -45, 54, -50, 4, 40, -44, 25, -39, 12, 0, -38, -26, 53, -6, 73, -19, 23, -70, -66, 70, -2, -56, 46, -33, -52, 45, -68, 66, -21, -45, -22, -74, 24, 53, 43, -21, -41, -4, -11, -66, 24, 71, 36, 69, 53, -17, 22, 12, -46, 11, 64, -9, 67, -60, 30, 3, -25, -29, -18, -26, -12, -42, 40, 6, 62, 33, 58, -37, 10, 62, -19, -32, 69, 53, 16, -65, -15, 49, 42, 38, -23, 1, -36, 30, 66, 47, 18, -15, 54, -55, -48, 45, 62, 12, 41, 9, -31, 15, 52, -17, 1, 31, 34, -25, 64, -68, -23, -32, -54, 14, -44, -17, 35, -10, -25, -16, -5, -71, -13, -47, -61, 55, -60, 1, 32, -49, 58, 9, -30, 16, -4, -53, -47, -13, -2, 65, -61, -30, -13, -57, -61, -22, 50, -70, -47, 73, -27, -46, 30, 16, -36, -16, 31, 31, 27, -50, 35, -17, 58, 18, 68, -47, -72, -16, -36, 37, -34, -66, -12, -44, -34, -17, -52, -54, 40, 44, 57, -58, -8, 23, -13, 61, 67, -71, 46, -68, 61, -10, -38, 34, -36, -42, 65, 34, 2, -50, -48, 43, 60, -72, -3, 45, 55, 35, 35, 24, -46, 72, 5, 12, -21, -69, 26, -36, -8, 52, -45, 54, -62, 72, 22, -74, -59, 18, -10, 54, -50, -69, 0, 60, 64, 70, -29, -15, -45, 28, 71, -25, -18, -2, -62, -66, 33, 65, 44, -64, -66, 74, 17, 69, -49, -63, -34, 2, -29, 43, 68, -49, -52, 26, 34, 4, 24, -31, -16, -44, -43, -51, 67, -3, -44, -59, 64, 40, -2, -16, -39, 39, 46, 52, 52, 60, -28, 65, 5, -43, 56, 0, -68, 27, 4, 45, -3, 70, -48, -58, -4, 45, -44, 70, 58, 72, 22, 11, 25, 31, 15, 6, 5, -32, 46, -61, 25, -7, -13, 2, 11, -41, -22, -50, 45, 42, -7, -20, 72, -32, 25, -6, -40, 63, 54, 57, -37, 29, -26, -39, -45, -13, -46, 12, -64, -39, 67, 35, -73, 45, 27, -55, -59, -27, -13, -63, 9, -71, -51, -48, 50, 13, 14, 35, 46, -68, 8, 64, -46, 55, -34, 56, 44, 63, 59, -40, 39, -8, -1, -70, 50, -10, -1, -64, 30, 7, -20, 38, 36, -31, -13, 10, -27, -24, 42, 73, 33, -68, 54, 32, 18, 2, 70, -30, -8, -10, -9, -8, 60, -21, -2, -29, 31, 3, -66, 33, -35, -65, 5, -74, 50, -57, -7, -22, -8, -47, -48, 46, 60, -41, 9, -40, -62, -73, 67, 11, -24, -58, -72, 29, 51, 20, -71, -54, -3, -62, -40, 56, -64, 58, -61, 4, -49, -37, 58, 5, -58, -65, 63, -31, 6, -33, 7, 24, 37, -49, 28, -2, 45, 36, -62, 32, -2, -56, 28, 19, 3, 68, -24, 5, 8, -42, 36, -27, -16, -52, 43, 62, 39, 63, -16, -46, -52, 26, 47, 11, -67, -66, -7, 7, 27, -12, -17, -22, 27, 26, -33, -16, 66, 47, -2, -28, -33, 53, 8, -4, 69, 37, -57, 74, -48, 53, 67, -51, 27, 49, -54, -19, 6, 27, -43, -73, 38, 16, -57, 15, -3, -22, 26, -65, -59, -32, 7, -49, 49, -5, -20, -46, -1, -21, 59, 62, -46, -13, -46, -48, -62, -11, 72, 58, 49, 55, -9, 5, -2, -35, 72, 23, 57, 1, -35, 68, -53, 31, 40, -11, -69, -4, 52, 55, -44, -21, 3, 62, 22, -70, 43, -54, -13, 28, -33, -67, 28, 63, -25, -6, 46, 27, -59, 25, 47, 30, 14, -30, -29, 49, -27, -45, -5, -42, 31, -43, 14, -27, -60, 40, 40, 62, -53, 55, 8, -41, 32, 62, 29, 58, 2, 63, -55, 40, 58, 7, -34, 30, -31, -46, -16, 43, 69, -73, 18, -48, 51, -33, 61, 40, -72, 18, 31, -23, -16, -16, -19, -9, -16, -72, -55, -29, 62, -72, -25, -21, -19, -44, -46, 37, 17, -50, 31, -18, -62, 5, 7, -13, 0, 71, -12, 73, -70, 11, -36, -59, -17, -18, -42, 12, 57, 73, -66, 74, 64, -44, -50, 27, 18, -31, -70, 25, -16, -65, 52, 61, 66, 3, -3, 16, 4, -55, 23, -59, -63, -71, -18, 27, -44, 57, -8, 42, 55, -35, 5, 68, 66, 37, -70, -18, 63, 69, 47, -32, -8, 46, -54, 74, 11, -57, -61, 38, 55, -44, 13, 70, 28, -42, -52, 44, 59, -44, -14, 12, 60}

#define ADD_CONV2D_KERNEL_0_SHIFT (9)

#define ADD_CONV2D_BIAS_0 {65, -51, 83, 14, -37, -8, -28, 104, 18, -101, -58, -39, 21, -5, 84, -45}

#define ADD_CONV2D_BIAS_0_SHIFT (8)

#define BATCH_NORMALIZATION_KERNEL_0 {101, 100, 102, 101, 101, 103, 103, 101, 101, 102, 101, 101, 103, 101, 102, 102}

#define BATCH_NORMALIZATION_KERNEL_0_SHIFT (7)

#define BATCH_NORMALIZATION_BIAS_0 {83, 84, 84, 84, 84, 84, 84, 84, 85, 85, 84, 84, 84, 85, 83, 84}

#define BATCH_NORMALIZATION_BIAS_0_SHIFT (7)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0
#define BATCH_NORMALIZATION_OUTPUT_SHIFT 0

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif
#define BATCH_NORMALIZATION_OUTPUT_RSHIFT (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_OUTPUT_SHIFT)
#define BATCH_NORMALIZATION_BIAS_LSHIFT   (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_BIAS_0_SHIFT)
#if BATCH_NORMALIZATION_OUTPUT_RSHIFT < 0
#error BATCH_NORMALIZATION_OUTPUT_RSHIFT must be bigger than 0
#endif
#if BATCH_NORMALIZATION_BIAS_LSHIFT < 0
#error BATCH_NORMALIZATION_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};
static const int8_t batch_normalization_weights[] = BATCH_NORMALIZATION_KERNEL_0;
static const nnom_weight_t batch_normalization_w = { (const void*)batch_normalization_weights, BATCH_NORMALIZATION_OUTPUT_RSHIFT};
static const int8_t batch_normalization_bias[] = BATCH_NORMALIZATION_BIAS_0;
static const nnom_bias_t batch_normalization_b = { (const void*)batch_normalization_bias, BATCH_NORMALIZATION_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[16384];
static int8_t nnom_output_data[16384];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[4];

	new_model(&model);

	layer[0] = Input(shape(32, 32, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(BatchNormalization(16, &batch_normalization_w, &batch_normalization_b), layer[1]);
	layer[3] = model.hook(Output(shape(32, 32, 16), nnom_output_data), layer[2]);
	model_compile(&model, layer[0], layer[3]);
	return &model;
}
