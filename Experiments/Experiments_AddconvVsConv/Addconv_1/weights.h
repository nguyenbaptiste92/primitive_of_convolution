#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {71, 21, 4, 47, 15, 51, 8, 2, 66, 45, -12, 12, 20, -12, 23, 38, -21, 66, -59, 60, -16, -18, -33, -62, 13, -31, -46, -31, 18, 52, -23, 63, 57, -52, -19, -46, -13, -24, 16, 59, 7, -10, -33, 65, -72, 2, -27, 48, 22, 42, 3, 10, 54, 42, -54, 12, 40, -19, 72, -23, -24, 40, -50, 20, 0, -28, -59, 31, 71, 21, 19, 49, 46, 68, 36, -8, 67, -71, 11, -41, 16, -61, 12, -66, 70, -42, -8, 9, 26, -66, 13, -28, -43, -47, -67, 7, 57, -18, -24, 13, -41, 44, 38, 61, -40, -62, 19, -57, 55, -20, -20, 51, -56, 22, -16, 73, -12, 2, -8, -14, -12, -65, -34, 5, 63, -27, 29, 58, -59, -61, 46, -44, -22, -65, -4, 63, -29, -37, -27, 12, 72, 25, -28, -1, 0, -56, -43, 56, 39, -45, 32, 20, -29, -18, -66, 67, 7, -23, 70, 50, -70, -71, -65, 2, 60, 51, 46, 66, -53, -64, 59, -3, -69, -44, 20, 51, 12, -5, -18, -9, 40, 30, 32, 19, 51, 49, 11, 32, 19, -4, 28, 0, -44, -5, 49, 31, -67, -67, 50, -54, 40, -73, -16, -36, -16, -67, -30, 69, 36, 9, -35, -43, 15, -64, 28, 62, -50, -47, 39, -14, 1, -16, 58, -37, -23, -60, 1, 61, 49, -47, 35, -52, -51, 33, -5, -16, 61, 1, 16, 10, -33, -25, 0, 66, -66, -17, 72, 38, -1, 32, 20, 3, -35, 3, 64, -42, -18, -20, 26, 68, 31, -6, -27, 19, 45, 11, -38, 8, -49, 55, 21, -23, 48, 36, 47, 23, -30, -27, 17, 37, -58, 60, 30, 16, 17, 12, -39, -28, -64, -39, 13, -68, 1, 0, -26, 45, -61, 67, -5, 2, 23, -67, -45, -34, 69, 71, 0, 45, -12, 21, -71, -57, -47, -24, 53, 0, 49, -66, -36, -69, 55, 21, -3, -11, -50, -7, 2, 72, -22, 56, 29, 35, -2, 23, 22, -60, -45, 63, -67, -19, 60, 23, -57, -44, -8, -15, -30, 47, 46, -41, -28, -53, 2, -32, -7, 60, -63, -44, -21, -32, -5, -42, 7, -57, 29, -53, 68, -37, -56, 24, -37, 70, 0, 26, -63, -23, 52, 14, 12, 59, 25, 69, -68, 52, 65, -58, -54, 60, 36, -8, 58, 40, -51, -50, -59, -33, 50, 17, -55, 20, 55, -28, -16, 28, -34, -48, 19, -50, 51, -2, -4, 11, 1, -51, -20, -53, -39, 40, -36, 27, 13, -5, 14, -9, -20, -27, 31, -17, 40, 59, 65, 37, 65, -2, -70, 54, 22, 66, 7, -25, 55, 14, -42, -68, 16, 4, 49, -66, 40, 1, -5, -37, 34, 28, 35, -25, -24, 68, 45, -15, 69, 53, 49, -6, -15, 16, -20, -5, 43, -10, 49, -12, 39, -41, 28, -33, -42, 63, -62, -70, -58, 63, 6, -34, -40, 3, 26, 62, -32, -57, 53, 33, -48, 45, -16, 9, -49, 32, 13, -69, -11, -44, 34, -40, 42, 29, -69, 34, 45, -56, 66, -65, -6, 36, 3, 62, -57, -8, -60, -15, 36, -28, 72, -59, -68, -20, 60, -23, -53, 57, -8, 30, 33, 24, -20, 41, 65, -20, 44, -58, 16, -9, -50, -58, 45, 2, 4, -53, 53, 67, -25, -25, 33, -41, 20, -62, -2, -59, -60, 68, 60, 13, -57, -51, -21, 59, -56, 5, -55, 64, -60, 70, -73, 37, -72, -72, -65, -50, -71, 5, -68, -66, 69, -53, 48, -64, 9, 56, -49, 16, 14, 67, 5, -32, -69, -19, 54, -66, -47, -61, -4, -54, -10, -3, -67, 45, -55, -51, 51, -18, 17, 73, -23, 44, 11, 31, -70, -32, -14, -71, -50, 42, -25, -65, 72, -20, -67, 38, 36, -43, 51, -26, -28, -51, 61, -17, 37, 6, 73, 35, 65, -54, 69, 69, -47, -39, 19, 23, -52, -7, -4, -64, -29, -7, -11, 51, -35, 15, -38, -37, -67, 61, -36, -27, 42, -39, -29, 52, 45, -26, 9, 73, -68, -40, 24, -53, 52, 26, 25, 19, 37, 20, -9, 27, -48, -69, -30, 54, -40, -52, 27, 14, 44, -20, -31, -12, 68, -31, -65, 64, 70, 45, 54, 8, -34, 36, -38, 13, -39, 60, -7, 40, 8, 50, 52, -39, 30, 51, -62, 65, -11, 13, -70, -22, -50, -25, -61, -48, 36, 37, 68, -55, 0, -31, -56, 55, -46, -25, 70, 15, -74, -52, 69, 3, -18, -22, 48, -66, -57, 46, 59, 69, 49, -68, -16, -25, 56, -20, 13, -39, 22, -14, 21, -15, 73, -70, 55, -35, -28, 69, 40, 20, 45, 54, 49, 65, 33, 4, 55, -31, 40, 71, -41, -56, -67, 0, -55, -3, 15, -16, 26, 60, -22, 33, -56, -12, -25, -42, 69, 25, -50, 70, 67, 9, -41, -15, 41, -32, 43, -60, -42, 48, -37, 9, 58, 58, -26, -61, 62, 29, -16, -24, 20, -3, -61, -9, 25, -41, 64, 60, -7, -14, -20, 11, 20, -46, -45, -61, -16, 24, 26, -5, 50, 26, 40, -55, -59, 50, -63, -65, 17, -41, -11, 71, 51, 4, 25, 49, 47, -14, -27, -9, -25, 3, 68, -63, 33, 43, -58, 31, -27, 45, -71, -51, -34, -67, 24, -33, -16, -48, -47, 69, 32, 60, -67, -2, 12, 9, 27, 54, 29, -10, -23, 54, -67, -28, -5, -53, 36, 15, 62, 18, -34, 72, 61, 26, 8, 35, 48, -47, 68, -38, -45, -36, 74, 34, 64, -41, 34, -68, -13, 66, 37, 50, 65, 45, -55, -49, 46, 16, 65, 50, 59, 70, -15, 58, 57, 46, 16, 53, 44, 17, -2, -33, -1, -36, 26, 38, -65, -40, -49, -3, 8, -64, -30, -42, 18, -19, 20, 68, 50, 70, 2, 23, 15, 3, -21, 62, -33, -26, -59, -46, 21, -63, -47, -25, 41, -66, -9, -45, 11, 8, 14, -41, -18, 2, 27, 2, -28, 29, -19, 0, -11, 73, -4, -58, -2, 17, -18, -11, 31, 41, -1, 24, 44, -35, -64, -47, -66, -21, 15, 67, -57, -11, 62, -47, 54, -28, -30, 63, 10, 61, -55, 37, 54, -65, -27, 63, 6, -27, 68, -36, 71, 61, 0, 51, 60, -33, 68, -60, -4, 23, 7, 67, 5, -64, -44, -44, 59, 57, -62, -35, -33, -32, 50, 63, 48, 54, 55, -49, -51, -44, 37, 67, 43, -28, 3, 70, -67, 7, 19, 35, -70, 6, 9, -19, -39, -30, 62, -36, -55, -23, 47, -55, -23, -52, -43, -68, 38, 2, -71, 5, -6, 42, 63, -51, -44, -5, -1, 28, -52, -66, 21, -38, 37, 42, 61, 2, -12, 60, 51, 43, -28, 56, 69, 71, -25, 20, -28, -47, -46, 24, -8, 60, 33, 20, 0, -23, 38, -43, -69, -5, -27, -64, 37, -33, -39, 53, 18, -36, -50, -26, 8, 22, 10, 31, 20, -5, 73, -40, -22, 5, -49, -8, -39, -41, -28, -24, 41, 20, 8, -59, 66, 48, -38, 40, 60, -68, -41, 2, 4, -47, 72, -45, 21, -37, -42, -3, 45, -58, 29, 26, -69, 41, -60, 10, 38, 17, 60, 29, -11, 24, 53, -7, -67, -55, -43, -10, 57, 70, 25, 16, 68, -19, -53, 10, 29, -35, 32, 3, 18, -70, 4, 10, 58, 25, -65, 55, 67, -35, -57, 63, 23, 70, 34, -17, -35, -57, -21, -9, 47, 42, -38, -29, 17, -40, 19, 21, -41, -61, -5, -41, 0, -35, -63, -69, 50, -67, -20, -39, -43, -31, 5, 60, 46, 32, 18, -4, 25, 44, 0, 18, -16, 69, -8, 19, -70, -35, -32, 38, -57, -11, 19, -67, 8, -10, -34, 26, -71, 6, -65, 43, 24, 66, -6, -44, -53, -31, 14, 47, 48, -72, -29, -63, 30, -44, -24, 34, -29, -71, 34, 35, -73, -68, 32, -54, 30, -24, -45, 65, 67, -2, 12, -52, -8, -35, -41, 69, 44, 69, -59, -64, 5, 4, 49, -47, -26, 54, 70, -13, -71, 19, 34, 65, -46, 18, 40, -10, 49, -42, 24, -5, 65, 50, 25, 8, -10, 60, -58, 1, -56, -42, -4, 5, -47, 20, -44, -19, 12, -13, 55, 48, -55, -66, 27, 18, -12, 5, 71, 42, -73, 38, 15, 11, 42, 62, -10, -30, 10, -9, -6, -25, 33, 43, -15, -53, 19, -14, -5, 68, 58, 46, -8, -63, 24, -64, 32, -1, 53, -51, -36, 57, 52, 10, 10, -50, -36, -59, 61, -44, 56, 72, -42, -35, -67, -11, 9, 25, -45, 55, -2, 14, 62, -53, -41, -66, -27, 7, -17, -14, 47, 8, -24, -64, 38, 36, -68, 7, 34, 9, -59, -66, -56, -29, -54, -44, -61, -35, -58, -22, 20, -54, 53, -52, 47, 51, 24, -43, 61, -48, -70, -20, -34, 72, 73, 59, -46, -23, -57, -36, -73, 14, 68, 30, -56, 39, -43, -46, -9, -4, 11, -26, 54, 63, 40, 42, -42, 66, 48, 12, 28, 29, -41, 53, 59, -67, -33, -64, 22, -44, -51, -43, 6, -49, -56, -5, 62, -33, 35, -50, 36, 38, -49, -64, 46, 70, -29, -41, 38, -19, 53, 51, 45, -59, -40, 62, 3, -56, -9, 63, 31, -33, 21, 74, 17, -53, 65, 46, -46, -20, -63, 40, -33, 27, -50, -25, -20, 35, -22, 66, -44, -60, 19, 5, 9, 11, -15, 30, 29, 48, 68, 7, 9, 28, 41, 2, 21, 64, 37, -50, -17, -18, 51, -3, -23, -10, 11, -14, 57, 10, -55, 9, 11, 70, -46, 38, 0, 15, 12, -38, -20, -72, 13, -47, 31, 12, 6, 69, -42, 55, -59, -21, 28, 53, -59, -74, -40, 40, -18, 47, -33, -3, -14, -16, 18, 50, -25, 11, 41, 9, 35, 24, 29, 22, -26, 22, -71, -7, -31, -23, 30, 61, -63, -51, -17, 14, 29, -30, -12, 37, -5, -8, -20, -8, 26, 24, -53, 56, -25, -24, -60, -30, -35, 11, 16, -69, -35, 47, 45, 22, 74, -42, 0, -53, 17, 60, -58, 65, -53, 27, 56, 50, -63, -43, 13, -27, -10, 47, 13, 17, 50, -60, 38, 41, -41, -53, -73, 30, -11, -4, -11, 24, -64, 30, 3, -46, -71, -29, -15, -37, -65, -19, 32, 0, -17, -24, 0, -69, -27, -18, -12, 61, -19, -49, 59, -24, 19, -51, 53, -66, 58, 51, -19, 39, 55, 14, 71, 28, 40, -30, -12, 51, 71, -35, -51, 33, -28, 32, -55, 66, -34, 41, -28, -54, -3, -65, 46, -71, -38, 45, 12, 60, -32, 48, -14, 56, 4, -61, 8, -36, 55, -27, 20, -70, -36, 49, 68, -50, 73, 44, -15, 55, 38, 20, -59, 48, 70, -60, -26, -8, 38, -48, -54, -60, 55, 23, 67, 0, 16, -49, 56, -18, -48, -69, -65, -10, -51, 38, 64, 60, 49, -12, -25, 60, -17, 51, -32, 26, 52, -3, -35, -20, -22, -12, 57, 47, -63, 55, 36, -58, 21, -4, -26, 42, 51, 41, -3, 36, -46, 14, -39, -24, -44, 44, -17, 33, -27, 24, 33, -22, 54, 25, 16, 60, -4, -30, 59, -47, -59, 46, -11, -4, -10, -57, 63, -55, -65, -36, -13, -53, -46, 53, -54, -51, 23, 55, -31, 6, 13, -26, 27, 43, -39, 67, -53, -21, -53, -37, -69, -22, -22, 24, -20, 15, -55, 26, -74, -20, -41, -33, 28, -27, 72, -44, -65, 23, 29, 39, 9, 16, 42, 29, 23, 39, 10, -41, 10, -55, 38, -22, 25, -48, -7, 51, 69, 11, -73, -74, -38, 56, 69, 7, 21, 15, -17, 64, 5, 27, -46, 26, -36, -14, 48, 19, -69, 39, -19, -5, 47, 45, 69, -17, -25, -71, 57, -70, -28, 4, -38, 5, 73, 58, -10, 33, 2, 4, 27, 43, 15, -21, -48, 26, 70, 11, 53, -60, 28, -45, 0, -11, -44, 66, -7, 55, -38, -2, -46, -33, 12, -5, -62, 38, -41, 68, -73, 74, -5, -59, -16, 58, -73, 33, -10, 32, 39, -14, 15, -54, 7, 63, -44, -12, 34, 72, 25, 20, -5, 16, -33, 24, 41, 64, 53, -56, -32, 61, -49, 65, 5, -61, -17, -67, -13, 71, -73, -57, -45, -48, 71, 11, 72, 34, -62, -14, -25, 57, -43, 34, -14, -19, -60, 54, -32, -7, 62, 2, 70, -41, -22, -23, -65, -43, -15, 26, -60, -34, 20, 56, 9, 24, 38, -63, -34, -58, 40, -69, -45, 65, 3, -26, -32, 21, -4, 6, 1, 1, 38, 10, 29, 54, -71, -33, 18, -70, -35, -39, -62, -56, -64, -22, 33, -27, 52, -30, 23, -50, -71, 50, -6, -25, -46, 46, 43, 4, -29, -18, 53, 46, -39, -15, 54, 24, -14, -40, 51, 58, -9, -18, -17, 10, -22, 15, 63, -15, 25, 27, -24, 73, -44, -54, -45, -42, 32, -34, 12, -46, 46, -60, -26, -44, -14, 62, -39, -64, -54, -4, 66, 23, 51, 50, -57, 62, -5, 33, 33, -8, -8, -18, -71, 61, -14, -47, 68, -24, 0, -67, 35, -69, 3, 55, 36, -51, -47, -57, 10, 30, 7, 43, -63, 8, -9, -62, 22, -26, -3, 13, -20, -72, 27, 57, -65, 23, 56, 13, 55, -39, 64, 70, 63, 40, 48, 36, -27, -42, 34, 3, 64, 52, 34, 39, 40, -21, -22, -45, -14, 25, 39, 4, -58, 10, -45, -44, -69, 52, 73, 68, 60, 43, -53, -15, 47, -5, -49, -16, -46, -62, -29, -52, 23, -50, 8, -36, -1, -13, 16, -41, 5, -4, 10, -8, -28, 21, 9, 53, -43, 56, -66, -33, -69, 60, -70, -27, -16, -49, -50, -30, 65, 36, 56, 4, -48, 3, 55, -41, 27, 72, 53, -29, 49, 60, -14, -50, 57, 35, 32, -72, 17, -55, -66, -25, -73, 51, -14, -68, -70, -69, -71, 52, -20, 43, -72, 5, -67, -70}

#define ADD_CONV2D_KERNEL_0_SHIFT (9)

#define ADD_CONV2D_BIAS_0 {77, -35, -43, -43, 2, -62, -92, -76, 59, 39, 49, 67, -31, -93, 55, 59}

#define ADD_CONV2D_BIAS_0_SHIFT (8)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[4096];
static int8_t nnom_output_data[3136];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[3];

	new_model(&model);

	layer[0] = Input(shape(16, 16, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_VALID, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(Output(shape(14, 14, 16), nnom_output_data), layer[1]);
	model_compile(&model, layer[0], layer[2]);
	return &model;
}
