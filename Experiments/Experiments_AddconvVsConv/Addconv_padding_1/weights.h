#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {30, -21, 27, -33, 23, 8, 15, -1, -53, -73, 26, -63, 27, 62, 35, 45, -58, 4, -71, 44, -52, 43, 8, -43, -73, -29, 61, 49, -34, -19, 54, 63, -62, 15, 14, 31, 41, -30, 73, 25, 34, -35, -14, -26, -2, 39, 25, -60, -57, -3, -6, 51, 41, 60, 25, 14, -47, -72, -51, -8, -14, -27, -14, -33, -6, -1, 52, -38, 35, -36, 60, -3, -39, -47, 10, 41, -22, 74, -9, 37, 67, 30, 3, -64, 62, 38, 29, -48, 7, 52, 69, 40, -41, -35, -14, 46, -3, 47, 23, 31, 40, -59, 63, 23, 46, 38, -41, 64, -6, -28, -49, -10, -67, -68, 53, -24, -38, 2, 31, -34, -46, 51, 57, -40, 46, 9, -59, -50, 50, 34, 26, 55, 12, 27, 27, 12, -59, 12, -59, -33, -18, -3, -20, -70, 20, -17, -64, 45, -58, -47, 16, -51, -21, -2, -34, 17, 60, -72, 4, -6, 65, 44, -64, -43, -43, -15, 36, -64, 12, -8, 58, -36, 46, 22, -25, 15, -66, 46, -55, -66, -34, 2, 16, -29, 13, -2, -62, -24, 2, 64, -40, 71, 68, 4, -5, -2, -44, -11, -28, 21, 68, 28, 1, -39, -42, -63, 12, 47, -43, -29, -1, 73, -19, -73, -72, -42, 61, -30, 25, 36, 70, 14, -40, -12, -26, -33, 29, 47, 38, -49, 16, 35, 50, -25, -73, 72, -61, 12, 49, 67, 27, 32, -13, -15, 55, -49, -27, -36, 7, -36, -46, -2, 50, -33, -4, -52, -25, 44, -18, -2, 70, 52, -74, -19, -7, 26, -58, -6, -23, -29, 69, 2, -1, -9, 7, 12, -30, 38, 59, -66, 25, 40, 23, 64, 41, 37, 1, 34, 19, -11, -59, 70, -26, 49, 60, -48, -51, -33, -72, -12, -64, 21, 27, 18, 68, -47, -71, 8, -33, 35, 46, -68, -2, -38, -74, 48, -15, 23, -29, -52, 7, 73, -39, 1, -4, -73, -61, 29, 65, 18, -62, 24, 52, -24, 32, -44, 35, -20, -44, 27, -30, -8, 51, 11, -8, -29, 63, 55, -35, -42, -43, 2, 26, -15, -51, 29, 8, -3, -40, -31, -9, -26, 8, 18, 70, 50, -12, 39, 52, 25, 45, -21, -41, -26, 65, -6, -72, 44, -24, -21, 3, 46, 0, -12, 73, 26, -54, -72, -19, -26, -43, -58, -47, -41, 69, 35, 2, -1, 14, -70, 58, 26, 10, -62, -39, -9, -18, 42, 18, -41, -17, -34, 30, -14, 66, 61, -9, -21, 72, 54, -51, 11, 28, 21, -6, 14, -5, 18, 57, -70, -39, 8, 56, -56, -72, -65, -16, -53, -2, 62, 58, -4, 48, 73, -74, -5, 21, 46, -30, -68, 59, 20, -10, 36, 45, -43, 53, 60, -43, -65, -28, 49, -8, -74, 32, 66, -71, 66, -11, -6, 53, 32, 34, -67, -45, -44, 1, -7, 6, 9, 0, 15, 49, -32, 45, -26, -17, 10, -26, -73, -71, 11, -64, 66, 40, -39, -56, 18, 54, 23, 56, 61, -60, 71, 53, -37, 6, -50, -49, 57, 36, -58, -24, -31, -38, 71, -26, 43, 64, 31, -67, 55, -45, 29, -73, 64, -58, 11, -62, 61, -70, 43, -34, -51, 50, 24, -50, -73, -10, 34, 67, 7, 19, -24, 57, -3, 44, 41, 30, 31, -63, 55, 32, -29, -56, 23, 19, 23, -43, -28, 11, -36, -8, 55, -32, -22, -14, -67, 11, 8, 33, -48, 0, -1, -5, -53, 21, 34, 41, 35, -37, -7, -30, -42, -61, -2, 8, -59, -72, -64, 48, -31, -8, -69, -11, -66, 60, -50, -52, 4, -51, 11, 52, 20, -36, -32, -49, -52, 15, 1, 39, 48, -35, 68, 59, 58, -54, -50, 41, 72, -10, -46, 49, -28, 24, -19, 32, 57, -72, 69, -15, -44, -73, -27, -52, 8, 1, 42, 10, -7, -52, -72, 47, 73, 12, -12, 17, 32, -39, 38, 14, 4, -17, -11, 67, 16, 53, -46, -31, -47, 67, -71, -39, 46, 6, 4, -2, -70, 69, -45, -64, -57, 69, -55, 11, -51, -67, 54, 35, -42, 53, 29, -63, 10, -68, -68, -40, -73, 28, -12, -35, -23, 6, -23, -42, -3, -10, -67, 20, 63, 48, 1, 11, 52, 22, -20, 34, -37, 27, 67, -11, -14, -59, 20, -1, -49, -42, 26, -66, -29, 46, -48, 3, -61, 1, 64, 46, -19, 43, -46, -67, 15, 14, -67, -34, 63, 61, -17, -20, -69, -22, -48, -1, 70, -49, 4, -15, -13, -2, -28, 67, 21, 44, 36, 26, -16, 10, 3, -41, 18, 58, -57, 50, 11, -45, 35, -62, -32, 29, -19, 70, -28, -17, 38, -70, -47, 58, -25, -27, -3, 22, -55, 8, 3, -44, -72, -27, -27, -18, 31, 16, -53, -58, 3, 33, -55, 1, 41, -55, -58, 8, -47, -21, -71, 29, 71, -24, -30, -58, 35, 73, -18, 39, -68, -20, 43, 28, 31, 47, 24, -1, 52, 1, 42, -30, 31, 31, 48, 59, 30, 50, 62, -28, -19, 56, 55, 6, 14, -25, 46, -69, 30, -25, -9, -30, -10, 71, -73, 13, -43, -2, 34, -38, -32, 21, -52, 65, 5, 51, -23, 6, 16, 12, 17, -44, 53, -50, 7, 40, 18, -23, 7, 28, -34, 54, 51, 35, 2, 10, -67, -11, -55, -66, -10, 52, 47, 21, -70, 64, 47, 61, -65, 13, -3, -58, -65, 10, 63, -53, -64, 47, -5, 60, 71, 42, 52, -41, 15, -39, 18, -39, -16, -17, -3, -19, -32, 35, 1, -29, -49, 35, 35, -58, -17, -58, -26, -50, 41, 50, -20, -21, -71, 64, 51, 73, 6, 30, -73, -26, -63, 54, -39, 55, 52, -60, -47, -20, 51, 38, 21, 17, -57, -24, 64, 59, -26, -43, 24, 72, -56, 59, 66, -7, -45, 20, -4, -39, 63, -65, -16, -39, -54, 50, -10, 34, 36, 10, -2, 25, -70, -65, 39, -46, -35, -6, -66, -35, 70, 44, -70, -18, -40, -39, 29, 36, -37, 40, -70, -50, 28, 45, -69, 26, -15, -22, -53, 17, -63, -2, -10, 37, 71, 73, 18, -9, -58, -36, -43, 52, 37, 47, 35, -68, -30, 14, -8, 6, -14, -35, 58, -70, -56, 56, -64, 57, 27, 53, 11, 50, -38, -58, -50, -57, -12, 53, -74, 5, 71, -51, 9, 73, 5, -43, 39, 35, -7, -56, 29, -58, 2, 32, -18, -22, 56, -26, -72, -28, -51, 2, -51, -25, -46, -16, -44, -22, 45, 47, -51, 20, 46, 28, 35, -15, -40, -44, 30, 64, 45, 62, -26, -55, -37, -48, 53, -21, -22, 32, -19, 54, -58, -37, -63, 19, -39, -57, -28, 65, 69, -45, -53, -26, 43, -5, -52, 21, -65, 30, -60, 39, 49, 26, -35, 13, 44, -18, -4, 36, 30, 19, -57, 16, 44, -70, 50, 70, -32, 13, 8, 56, 9, 69, -32, 51, 10, 55, -63, 26, 15, -6, 63, 49, -39, -8, 67, -7, -63, -34, 17, -12, 45, -26, 53, -3, 40, -30, 15, 17, 70, 62, -3, 21, 68, -66, 48, 18, 8, 38, 6, -41, 64, 63, 16, -8, -13, -58, 46, 13, 3, -21, -60, -10, 59, -21, -15, -61, 16, 58, 57, -41, -48, -47, -27, 13, -48, -18, 21, -55, 10, -54, 14, 59, 52, 59, 67, 67, -64, 63, 36, 14, 32, 39, -9, 21, -52, -29, 26, 32, 59, -31, -49, -15, 53, 7, 53, -47, -24, 34, 50, -36, 15, 26, -33, 69, -30, 50, 19, 65, -45, -65, -37, 58, -63, -3, -18, 19, -19, -65, -11, -37, -35, 55, -10, -47, 40, -29, -53, -37, 26, 3, 59, 45, -53, -39, 68, -67, -32, 20, 16, 40, 27, -6, 42, 2, -46, 61, 56, 24, -37, 42, 40, 36, 6, -41, -30, 37, 59, 5, -61, 3, 40, 41, -52, -13, 65, 69, -14, 73, -52, 37, 11, 51, 55, -71, -39, -10, 46, 14, -70, 42, -69, 37, -47, -23, 61, -63, 44, -60, 48, -5, -12, -66, -35, -73, -24, 49, 53, 28, -69, 25, -30, -45, -15, 65, -3, -67, 50, 73, 20, -38, 56, 66, 61, 65, 30, -40, -59, -31, 16, -54, -5, -51, 8, -28, 45, 45, -35, -58, -45, 44, 27, 38, -6, 28, 23, -37, 19, -15, -16, 10, 3, 41, 14, -61, -18, 15, -18, 13, 4, 53, -63, 7, 16, 39, -2, 67, 21, 8, -43, -45, -32, 47, -36, 60, 23, -17, -1, 12, 30, -16, 51, 11, 46, -27, 3, 12, 61, -45, -16, 8, -61, -40, -39, -1, 68, -7, 11, -34, 28, 64, -59, 31, 1, -51, -1, 16, -27, -67, -32, 32, -11, 6, 61, -52, 22, -20, -60, -27, -57, -65, 29, -62, -12, -17, 45, -36, 49, 0, -52, 41, -39, -37, 23, -72, -7, 53, -55, -34, 29, 22, -71, 19, 71, -60, -72, -28, -48, -61, -53, 53, 46, -72, -12, 52, -62, 29, -22, 19, -52, -64, 56, -11, -37, 36, -25, 47, 60, 66, -6, -1, 55, 10, -66, 23, -9, 40, 32, 27, 65, -65, 38, -9, -60, -3, -22, 51, 8, -7, -15, -54, 37, -26, -24, -39, -54, 16, -70, -33, -52, 62, 36, 66, 56, -74, -62, 39, -38, -24, -67, -68, -38, -71, -60, -29, 2, 73, -54, -25, -32, 16, -23, 41, -63, -6, -50, 4, 19, -10, -62, -35, 68, 44, -5, 48, -61, 64, 70, -12, -29, 26, -58, 55, -74, 49, 27, -6, -7, -50, -22, -54, 2, 7, 53, 43, -49, 71, -63, 57, 65, 22, 71, -15, 57, -24, 11, -12, 4, -64, -22, 19, -35, -57, 26, -2, 58, -70, -20, 40, 57, 10, 54, -36, 3, -49, -36, 56, -61, -35, -46, -13, 57, -28, -46, -45, 70, -40, 65, -11, 2, -20, -43, 12, 6, 58, 25, 66, 3, 26, -14, 47, 3, -66, 18, 43, 43, 15, 2, 74, -65, -44, 11, -32, 31, 40, 31, 67, 54, -70, -3, 18, 71, 10, -63, 24, -43, 9, -67, 69, 31, 32, 41, -68, -57, 3, 50, -3, -62, -60, -11, 16, -39, 56, -4, 40, -13, -2, 8, 41, -9, -36, -11, 47, 39, 71, -74, 31, 9, -36, 57, -30, 64, -73, 53, -45, 72, -39, 20, 3, 55, -20, 14, 72, -12, -38, 38, -2, -6, -2, -41, -8, 69, 12, 4, -32, -48, -9, -39, -21, 12, -17, 38, -21, 61, -70, 18, 17, -70, -9, 16, 31, -13, 19, 13, 3, -53, 36, 38, 56, -28, -42, 55, -19, 11, -31, -34, -63, 47, 27, 72, 32, 16, 47, 13, -71, -34, 52, -31, 63, 25, -8, 65, 3, -28, 57, -39, -18, -8, -26, -26, 32, 60, -15, 32, -48, -65, -43, -5, -61, -41, -33, 8, 4, 64, -36, 21, 52, 31, -58, 16, 72, -2, 23, 40, -36, -16, -66, 42, 56, 20, 27, -34, 13, 34, 29, -64, -58, 69, 51, -70, -21, -46, 44, 33, 71, 72, 35, 23, 62, 33, -4, 25, 16, -74, -20, -28, -24, -12, -14, -56, -62, 39, -8, 58, -66, -42, 69, 3, -16, 50, 32, 54, -22, 0, -26, -7, -1, -10, 14, -31, 21, -56, -44, 68, 9, 37, 23, 51, -1, 5, -55, -6, -57, 16, 25, 52, -64, -60, -16, -17, 15, -6, 24, -36, -61, -49, -44, -7, 68, -67, 9, -46, 9, 33, -59, 2, 44, 42, 57, -4, -13, 73, 2, -41, 64, 69, -15, 72, -54, 71, -9, 45, 35, -58, 27, -29, -71, -73, -28, -24, -2, 41, -53, 38, -49, -8, -49, -44, -44, -39, 33, -50, -51, -48, 52, 52, 63, 11, -52, 4, -8, -31, 5, -2, 13, -56, -55, 6, -17, -56, 28, -8, -36, 40, 62, 42, 6, 20, -69, 2, -57, -2, -21, -53, -27, -28, 57, 23, -20, 49, 31, 16, 16, -35, -12, -34, -26, -65, 1, -13, 68, 62, -22, -11, 1, -47, -30, -66, 70, -22, 27, -6, 55, -7, 25, 22, 32, 33, -73, -58, -50, -69, 19, 8, -52, 12, -51, 42, 32, -12, -12, 69, -44, -7, 38, -69, -31, 24, -21, 0, 24, -64, -66, 38, -14, 67, -17, 34, -47, 56, 6, 40, 45, 0, 28, -8, 60, -1, -54, 11, 15, 6, 38, 67, 64, -56, 27, -6, 21, 30, 66, -32, -10, -10, 26, 64, 50, -43, -67, -1, -67, 46, -61, -15, -20, 60, -57, 47, 65, 35, 51, 16, -22, -14, -48, -25, -17, 53, 20, -63, 37, 27, 34, -49, -2, 25, -65, 25, -44, 17, -31, 40, -51, -7, 68, -50, -28, -42, -63, -64, -11, -7, 57, 36, 34, 28, -2, -60, -16, -43, -39, -61, 13, -52, -40, 19, -70, -29, -59, -22, -12, -25, -26, 20, -5, -61, -15, 66, -7, -18, -48, -43, 69, 34, 56, -51, 14, 19, 6, 53, -37, 41, 42, 56, 22, 11, -3, 16, 27, -59, 0, 27, 33, -11, 54, -19, 66, -2, -16, 19, -44, -4, -19, -7, 12, 32, -40, -45, 39, -28, -26, 53, -20, -21, -57, 68, 28, -36, -15, -71, 71, 24, 33, -55, 51, 17, 23, 0, 44, 17, 54, 34, -38, -71, 3, 59, -33, 17, -67, 28, 54, 54, -66, -27, -16, 26, -15, -3, -19, -54, 67, -68, -57, 74, 13, -69, 28, -9, 65, 67, -57, -60, -60, 25, -1, -57, -39, 41, -35, -48, 74, -1, -33, 51, 35, 25, 64, 39, -29, -11, 10, -23, 55, -2, 2, 10, -36, 37, 47, -13, 23, -25, 10, -42, 49, 66, -35, 27, 31, 48, 9, 29, -5, 64, -70, 13, -58, -15, 61, -37, -12, 19, 68, 34, -18, 56, 56, 54, -37, 68, 53, 68, -30, 26, -71, -16, -4, -38, 67, 70, -59, -40, 51, 47, 57, 72, -53, -66, 34, -2, 56, 21, 29, 51, 45, 3}

#define ADD_CONV2D_KERNEL_0_SHIFT (9)

#define ADD_CONV2D_BIAS_0 {61, -31, -84, -111, -66, 76, -14, 78, 71, -83, 24, -55, -35, -17, -24, -94}

#define ADD_CONV2D_BIAS_0_SHIFT (8)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[4096];
static int8_t nnom_output_data[4096];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[3];

	new_model(&model);

	layer[0] = Input(shape(16, 16, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(Output(shape(16, 16, 16), nnom_output_data), layer[1]);
	model_compile(&model, layer[0], layer[2]);
	return &model;
}
