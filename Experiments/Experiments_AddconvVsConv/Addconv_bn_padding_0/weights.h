#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {-71, -53, -51, 31, 39, 3, 3, -65, 30, -27, -56, -16, -33, -73, -32, -44, 14, 2, -37, 9, 28, -33, -72, -59, -50, 11, -36, -15, 8, 16, 55, 33, 68, 35, -62, -56, 53, -58, -43, -18, -51, 61, 44, -46, -58, 0, 31, -6, -41, -31, 65, -47, 47, -27, 8, -5, 31, 52, 22, 71, 63, 52, -42, -60, 61, -17, -8, -12, -5, 47, -53, -74, 46, 7, -37, 20, 48, -8, -23, 4, 58, 21, 72, 14, 11, 28, -37, 30, 14, 7, 58, -37, 19, -3, 54, -59, 72, -63, -7, -64, 25, 57, 10, 29, 68, 26, -65, -36, 15, 17, 53, -21, 13, 65, 61, -73, -52, -49, -44, -23, -2, 21, -36, -53, -18, 11, -10, -25, 60, 70, 29, -1, -5, -69, 10, 45, 68, -56, 26, -40, -62, 23, 51, -55, 3, 52, -20, 12, 46, 70, -68, 31, 44, -30, -21, 63, -58, -13, 48, 51, 32, -21, -36, -18, -41, 18, -44, 48, -28, -18, 29, 13, 4, -59, 63, -23, 42, -42, 34, 19, 0, 28, -42, 5, 48, -25, -21, -45, -45, -19, -59, -40, -40, 69, -60, 38, -50, -48, 54, -42, -73, -2, -65, 71, -41, -29, 18, 11, 36, 24, 42, -54, -38, 66, -45, -11, 16, 62, -67, -62, 5, -21, 20, 60, 46, -32, 11, -25, 49, 35, 47, 32, -14, 66, -36, -72, -59, -16, 12, -69, 16, -34, 11, -16, 15, -38, -37, -69, 16, 29, 5, 72, 16, -11, 17, 30, -15, -11, -35, 43, -71, 32, -41, -4, -71, 19, -58, 2, 46, -19, -27, -70, 46, -24, 73, -67, -46, 59, -23, 14, -45, -49, 17, 58, -23, 54, -28, 50, 60, -35, -41, 15, -18, 4, -52, -24, -9, 35, -38, 49, -62, -24, 36, 63, -48, 58, 46, 13, 0, -38, 49, -22, -60, -30, -19, 48, -25, 36, 15, 59, -3, 57, 21, -58, 4, -34, 37, -72, -22, 68, -13, 33, 34, -18, -32, -57, 24, 33, 31, 35, -60, -41, 11, 31, 14, 17, -22, -31, 67, -11, -57, 50, 3, -74, -11, 12, 45, 39, -47, 42, -34, -67, -2, -24, -42, 8, -2, -17, -2, -72, -40, -17, -37, 29, -24, 25, -6, -33, -48, 40, -69, 57, -38, -67, 67, 67, -19, -37, -7, -74, -5, 56, -28, 66, -21, 19, -50, -57, -69, 29, -41, 48, -52, 53, 24, 35, 8, 55, 34, -61, 3, 67, -45, 49, -1, 46, -59, -11, -32, 9, 22, -48, -62, -74, 11, -42, -11, -2, -54, -46, 3, -45, -44, -52, -65, 35, 17, -69, -35, -4, 14, 29, 20, 43, 40, 49, 17, 12, -10, -12, 56, -2, 20, -3, -29, 28, -44, 2, 3, -8, 59, 40, -64, 23, -19, -20, -57, 57, 30, 27, -34, -71, -8, -28, -55, 62, 32, -8, 61, -66, -38, 3, -49, -46, 34, 60, -18, 1, -61, 2, 20, 10, 44, -19, 58, 28, 44, 65, 28, 24, 50, -22, 38, 46, 17, -68, 49, -25, 11, 41, 40, -58, 32, 27, 50, 56, -28, 74, -68, 17, 51, 70, 72, 33, -49, 17, 3, 37, -10, -38, -17, -15, 60, 69, 74, 67, -44, -22, -51, 24, 10, 35, -51, -46, -30, 46, -38, -45, 60, 22, -57, 60, -72, -17, -49, -24, -44, -30, 21, 25, 43, -55, -68, -30, -28, -34, -45, -26, -1, 41, 71, -29, 61, 54, 17, -16, 11, -39, -22, -11, 10, -63, 45, -35, 8, 36, 60, -6, -19, -37, 20, -50, -15, -49, -46, 20, -27, -26, 25, -50, -42, 61, -41, 52, 1, 72, 4, 61, 13, 72, -56, 21, -51, -42, 40, 59, -34, 36, -7, 59, -47, 18, 62, 34, 19, -16, 73, -19, -65, -33, -9, -27, -64, -2, -43, 52, -49, -8, 61, -46, 17, 50, -59, 46, -23, 69, 37, 52, -36, 9, -33, 69, -39, 41, 49, -37, 11, -22, -45, -56, 52, -24, 56, 58, -5, -28, 48, 14, 35, 33, 24, -18, 47, 24, 21, 40, 51, 62, 6, 55, 22, 57, 67, 71, 28, -71, -14, 19, 48, 54, -65, -34, 5, -28, 20, -58, 27, -61, 20, 56, -2, 0, -8, -67, -66, 7, 70, 20, 42, -47, 9, 33, 23, 6, -37, 62, -21, 36, -65, -45, -5, -65, 62, -50, 40, 56, -17, 49, -54, -70, -18, -54, 24, 31, -35, -2, -51, -24, -45, -66, -38, -50, -43, 29, 61, -35, -21, -21, 53, -32, 73, -2, -36, 43, 23, 11, 54, -37, 6, -13, -50, -43, -1, -33, 35, -67, 41, 41, -1, -66, -73, -44, -6, 27, -3, -50, 31, 39, -33, 47, -60, -62, 40, 24, 0, -60, -30, 71, 72, -28, 71, 43, 39, 47, -68, -38, 21, 3, 9, -66, -73, -54, -26, 61, 65, 54, -59, -21, 7, 36, 0, -2, -63, -46, -44, 52, -67, -19, -54, 6, 8, 45, 32, 56, 4, 42, -39, -37, -74, 64, -13, -38, 60, 32, -15, 50, 70, -45, 62, -17, -69, 1, -67, 9, -6, 0, 26, -25, -12, -41, 47, 20, 45, 47, 69, 3, 59, 18, -70, -2, 23, 7, -36, -8, 33, 25, 74, -33, -33, 15, -68, -72, -31, -8, 57, 48, -59, 36, -52, -59, 2, -64, -59, -52, 71, 42, -27, 59, -34, 42, -9, -15, -4, 69, 57, 26, -31, 29, -43, -38, -40, 15, 45, -6, -70, 57, -69, -47, 40, 16, -46, 25, -73, 3, -6, 14, 15, -11, 56, -5, -36, -19, 38, 44, -68, -19, 24, 40, -47, -52, 40, 1, 31, -71, -28, 19, -28, -37, 39, -42, 32, 16, 36, 33, -19, 31, -13, -31, 14, 50, -5, -18, -26, 9, 56, 14, 27, -13, 73, 43, -21, 26, 64, -7, -58, -15, -8, 59, -6, 25, 19, -15, -23, 4, -37, 64, -14, 31, 65, -53, -22, -31, -30, 11, 10, -2, 69, -53, 42, -64, -1, 38, 31, -41, -17, -6, -18, 40, -13, -6, 65, 6, -34, -54, -73, -32, -25, -51, 10, -64, -42, 53, 22, 36, -49, 25, 15, 44, 36, -41, 70, 8, -19, -18, -14, -37, -46, 34, -54, 10, 28, -73, 31, -37, -14, 40, -25, -24, -55, 44, -36, 15, -70, 29, -73, -31, -73, 20, -35, -42, -73, 29, 58, -72, 0, 12, 61, -14, -1, -40, 0, 4, -74, -42, 3, 8, -19, -49, 58, -42, 8, 14, 66, 35, 62, 63, 39, 37, 40, 69, -71, 38, 45, 64, -62, -7, 29, 10, 40, -22, -66, -52, 65, 48, 13, 39, -43, -62, -35, 19, -23, 24, -36, -59, -7, 59, 21, 50, -6, 51, 33, -6, -26, 72, -71, 55, 9, 48, 45, -18, 35, -72, -68, -7, -19, 14, -33, 58, -7, -22, -34, -9, 32, 59, -54, 1, -2, 3, 15, -71, 60, -31, -20, -38, -48, 15, -18, 26, -29, -68, -65, -49, -19, 50, -37, 24, 40, 26, -14, -14, 32, -61, -63, -39, -24, 66, -68, 62, -22, -48, 24, 3, -71, 64, -4, 51, 14, -35, -61, -5, 59, -61, -14, -62, -2, -35, -43, 54, -26, -3, -50, 49, 15, 24, 41, -22, -61, 24, 8, 11, 26, 68, -16, -44, -54, 23, -8, 2, -56, 57, -56, 37, 30, 66, 34, -46, 46, 40, -68, 48, 60, -31, -57, -9, -27, -21, 50, 35, -6, -56, 10, 23, 29, -48, -40, -54, 13, 51, -49, -29, -32, 44, 6, 16, 43, -39, -6, 19, 1, -9, -64, -35, -43, -72, -6, -3, 10, -24, -56, 22, -28, -61, -44, -44, 61, -56, -32, 69, -65, -64, -53, 69, 46, 12, 65, -2, -10, -59, 23, -54, -56, -62, 72, -30, -25, -64, -51, 46, -54, 10, 60, -50, 70, -10, -26, -19, 40, -71, 2, 5, -15, 28, 17, 30, 7, 12, -58, -11, -69, 58, -25, 41, -71, 64, -47, -58, -74, 23, -56, -73, 19, -49, 32, -24, 43, 8, -38, -40, 52, 26, -67, -31, -27, 70, 38, -42, -1, 6, 38, -53, -16, -33, -47, 62, -12, -61, 43, -64, -71, 10, -18, -7, -37, -40, 66, -26, -70, 29, 67, -4, 51, -18, -35, 62, -3, 50, -70, 52, -15, 3, 43, 35, 15, -14, -68, 21, 1, -27, -54, 64, -21, -50, -58, 34, -56, 29, -29, -60, -25, 41, -25, -73, -50, -11, -40, 52, -22, 35, -46, -5, 60, 63, -7, -62, -24, -1, -22, 18, -51, -37, -29, 9, 41, 36, -28, 58, 40, -8, -40, -72, 53, 27, 21, -54, -62, 51, -63, -63, -69, -44, -36, -26, -7, 23, 22, 55, 6, -73, -31, -70, -39, 49, -57, -39, -1, 7, 51, 20, -39, -62, -48, -61, 31, 23, 24, -59, -3, 3, 62, 15, -8, -51, 62, -12, -11, -67, -29, 0, 58, 20, -38, 39, -31, 24, -65, 70, -29, 43, 2, 44, 14, -11, 6, 5, 54, 55, -53, -38, 60, -50, 44, -22, 4, 23, 6, 54, -5, 14, -17, -39, -47, 34, 61, -68, 39, 72, -53, 66, 15, -35, 47, 8, -53, 14, 0, -11, -40, -1, -3, -20, 11, -25, 33, -53, 34, 21, -68, 57, -22, -65, 38, 56, 56, 61, -31, -52, -46, 73, -34, -6, -43, -69, -48, -55, -64, 37, 18, 71, 28, 61, -43, 1, 15, 17, -49, 44, 40, 40, 63, -3, -18, 32, -55, -58, -2, 45, -65, 28, -40, -41, 44, 23, -47, 4, -71, 53, 61, -42, 16, -10, 32, -63, 3, -50, -22, 28, 51, 57, 20, 15, -24, -67, 0, 16, 59, -8, 25, 56, 35, 58, 44, -29, 66, -9, 47, -21, 49, 55, 46, -32, -36, -72, -31, 1, -15, 60, -51, -12, -13, -29, -32, 20, -26, 60, -11, 3, -48, 53, 60, 37, -15, -22, 49, 5, 9, -69, -66, -8, 42, -21, 10, 1, -30, 67, 54, -46, 59, -54, -34, 64, 54, 68, -34, 45, 48, 29, 29, 52, 37, 48, -11, 8, -10, 62, -17, 72, 61, -33, -72, 66, 42, -22, -34, 2, -33, -6, -42, 33, -39, -12, 58, 69, -14, 66, 32, -6, -40, -11, 56, -19, 62, -54, 17, -46, 52, -16, 65, -73, -74, 44, 65, 61, 20, -19, -6, 58, -69, -66, -39, 64, 67, 36, 4, 52, 62, -2, -1, -32, -46, -72, -54, -66, -17, -24, -69, 44, 47, 48, -66, -27, 41, -43, 12, -30, 42, 55, -1, 16, 23, -24, -57, -70, 59, -34, -64, 56, -59, -11, 37, 34, -64, -20, -8, -10, -2, 53, 70, 44, 2, 60, -46, -50, 49, 13, 35, -34, -74, -9, 48, -39, 73, -34, -6, -38, -21, -39, -24, 15, 18, -29, -40, -48, 69, -51, 14, -16, -11, -64, 65, -45, -54, -11, -65, 7, -51, -4, -37, -43, -62, 61, 6, 62, -68, 66, -73, -34, -46, 73, -23, 67, 35, -40, -63, -63, -56, -4, -6, 24, 3, 24, -22, -23, -31, 32, -27, -7, -43, 58, 39, -27, -38, -31, 36, -8, -19, -29, 25, 47, 74, 51, 54, 26, -59, 73, 8, -64, 46, 4, 12, -27, -51, -70, 8, -67, -44, -52, -53, -54, 53, -58, 32, 23, 9, -71, -11, -45, -62, -27, 7, -65, -39, 67, -14, 48, -36, -44, -19, -74, 64, -60, -6, 63, -18, 3, 4, 26, 64, 5, -49, 0, -61, 46, -65, 55, -22, 65, 22, 25, -10, 21, 69, -58, -7, -64, 53, 19, 73, -41, -1, -15, 53, 42, 52, -6, 45, -26, 57, 32, 19, 6, 12, -70, -69, -70, -21, 4, 19, -48, -45, 50, -32, 65, 74, -35, -53, 41, -30, 28, 64, -48, -67, -64, 64, -65, -43, 3, 1, 38, -62, 3, 56, 73, 5, -8, 10, 54, -16, 70, -41, -40, 1, -57, 0, -12, 16, 15, -25, -21, -20, -10, 33, -16, -54, 49, -25, -41, 24, 47, -57, -38, 36, -39, -25, -69, -50, 53, -34, -34, 24, 56, 29, -37, 42, -47, 9, 3, 5, -38, -23, 65, 64, -45, -20, 60, -8, 5, -19, 74, -23, 46, -36, 63, 29, -62, 9, 24, 53, -3, -3, -7, 74, 4, 60, 35, -74, -10, -30, 9, -36, 14, 17, -68, -39, -61, -1, -55, 23, 4, -49, 64, 61, -8, -49, -39, -56, 22, -15, 3, 48, -21, -18, -27, -32, 1, 3, -24, 53, -57, 67, 20, 51, 49, 7, 40, -9, -47, 13, -51, 8, -48, 55, -55, 37, 44, 9, 30, -35, 12, -62, -35, 10, -54, -58, -47, 53, 42, -16, 22, 22, -42, -36, 67, -37, -55, -65, -53, 53, 28, -73, -3, -65, -40, 8, 4, 71, 43, 66, -45, -16, 19, -54, -13, -56, -20, -14, 19, 72, -12, -36, -20, 8, 38, -1, -28, 31, 49, -8, -45, 0, 66, 59, 55, -62, 17, 50, -35, 10, -12, 44, -22, 66, 66, -43, 41, -40, -9, 24, -36, 11, 62, -45, -51, -22, -62, -15, -47, -68, 72, 3, -23, 42, -55, -10, -67, -73, 2, -10, -6, -23, -47, -20, -28, 14, 37, 12, 41, 17, 68, 35, -36, -59, -47, 25, 60, 56, -1, -22, -61, -8, -37, -69, 13, -8, -21, 1, -17, 28, 46, 73, 67, -37, -69, 5, 53, -56, 3, 8, -4, -50, -28, -17, 65, -64, 19, -4, 56, 1, 71, 27, -4, 38, 66, 2, -7, 40, 47, 67, 2, 8, -52, 45, 41, -56, -67, 7, 32, 8, -74, 13, 25, -13, -17, -44, -5, 67, -47, 49, 28, -15, -40, 48, -8, 38, 12, -9, -57, -53, 22, -42, -33, 26, 31, 47, -58, -59, -55, -35, 4, 46, -29, -4, -4, -43, 8, 32, -62, 39, -40, -33, -69, 28, 44, 1, -8, -69, 40, -50, -53, 73, 49, -46, -68, 72, 7, 64, 55, 60, -56, -19, 25, 67, -65, -21, -50}

#define ADD_CONV2D_KERNEL_0_SHIFT (7)

#define ADD_CONV2D_BIAS_0 {18, -25, 111, 49, -102, -56, -66, -70, -2, -101, -65, -79, 66, 7, -64, -9}

#define ADD_CONV2D_BIAS_0_SHIFT (6)

#define BATCH_NORMALIZATION_KERNEL_0 {91, 91, 90, 91, 92, 91, 90, 90, 90, 90, 91, 92, 90, 91, 91, 91}

#define BATCH_NORMALIZATION_KERNEL_0_SHIFT (7)

#define BATCH_NORMALIZATION_BIAS_0 {75, 75, 74, 73, 74, 75, 74, 74, 75, 76, 75, 74, 75, 74, 75, 74}

#define BATCH_NORMALIZATION_BIAS_0_SHIFT (7)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0
#define BATCH_NORMALIZATION_OUTPUT_SHIFT 1

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif
#define BATCH_NORMALIZATION_OUTPUT_RSHIFT (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_OUTPUT_SHIFT)
#define BATCH_NORMALIZATION_BIAS_LSHIFT   (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_BIAS_0_SHIFT)
#if BATCH_NORMALIZATION_OUTPUT_RSHIFT < 0
#error BATCH_NORMALIZATION_OUTPUT_RSHIFT must be bigger than 0
#endif
#if BATCH_NORMALIZATION_BIAS_LSHIFT < 0
#error BATCH_NORMALIZATION_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};
static const int8_t batch_normalization_weights[] = BATCH_NORMALIZATION_KERNEL_0;
static const nnom_weight_t batch_normalization_w = { (const void*)batch_normalization_weights, BATCH_NORMALIZATION_OUTPUT_RSHIFT};
static const int8_t batch_normalization_bias[] = BATCH_NORMALIZATION_BIAS_0;
static const nnom_bias_t batch_normalization_b = { (const void*)batch_normalization_bias, BATCH_NORMALIZATION_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[4096];
static int8_t nnom_output_data[4096];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[4];

	new_model(&model);

	layer[0] = Input(shape(16, 16, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(BatchNormalization(16, &batch_normalization_w, &batch_normalization_b), layer[1]);
	layer[3] = model.hook(Output(shape(16, 16, 16), nnom_output_data), layer[2]);
	model_compile(&model, layer[0], layer[3]);
	return &model;
}
