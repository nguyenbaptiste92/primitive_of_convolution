#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {0, 17, 44, -42, 14, -73, -62, -26, -70, -13, 73, -60, -19, 28, -7, -62, 11, 63, 15, 22, 52, -43, 58, -7, 33, 8, -51, 21, -72, 71, 29, -25, 8, -34, 70, -9, 57, 11, -64, 28, -54, -18, -46, 2, -27, -56, -15, 53, 7, 16, 7, 11, 30, 64, -23, -73, -30, -41, -8, -5, -13, -54, 16, -54, 57, 40, 16, 46, 12, -43, 33, -11, 11, -17, 42, -53, 8, 70, -66, 14, -34, 46, -13, 43, -49, -65, 12, -61, 19, -40, -55, 5, -8, -58, 70, -26, 50, -59, 33, 59, -16, 19, 39, -18, 51, -65, 50, -73, -53, 40, -60, 33, -40, -42, 68, 28, 73, -23, -28, 61, 19, 53, 58, -26, -23, 43, -26, -58, 1, 9, -49, 32, 66, 59, -11, 67, 2, 2, 23, 31, 35, -65, 53, -25, -10, 26, -25, 34, 26, 24, 8, 7, -36, -54, 52, 55, 42, 37, 11, 46, -14, -43, -14, 0, 52, 3, 10, -16, -14, 56, 40, 30, 36, -51, -39, -61, 13, 40, -44, 21, -36, 45, -60, -54, 15, -3, 11, 60, 0, -43, 14, -49, -37, -33, -42, -64, 29, 44, 72, -28, -45, 33, 9, 19, 9, -7, 1, 25, 12, 11, 45, -32, -30, -53, -53, 31, -11, -27, 22, 67, -61, 8, -39, 46, 21, 21, 45, -44, -39, -36, 65, 25, -33, 40, 74, 61, 43, -71, 73, 12, 37, 18, 52, 59, -15, 15, 61, 9, 10, -55, -36, -60, 69, 72, -39, -2, -54, 36, -42, 4, 16, 15, 37, 3, -74, -12, 73, 38, 73, 23, 18, 26, 54, -6, 46, 65, -57, -26, 63, 25, 71, 73, -11, -22, 35, -41, -69, -29, -36, 29, 54, 67, 37, 12, 54, 1, -45, 27, -41, -7, -33, 42, 71, -31, -74, -1, 52, 17, -3, -59, 13, -25, -13, -20, -27, 49, 59, -38, 17, 29, -51, 39, -44, -23, -37, -14, 16, -27, -67, 15, -24, -48, -49, -9, 64, 0, 23, 65, -16, -50, -66, -72, -36, 12, 60, -39, 59, -51, 54, 8, -7, -53, -67, -16, -43, 3, -68, 53, 22, 9, -69, 17, -3, 41, 16, 42, 39, 34, -42, -51, -52, -11, 12, 18, 33, 43, -58, -42, -26, -11, -8, 2, 65, 43, 37, -16, 2, -17, -65, -26, -31, 39, 44, 23, 69, -41, 40, -22, 6, -12, -59, -51, -45, -67, -58, 69, 37, -41, -3, 27, 21, 3, 3, 21, -54, -69, -60, -52, 37, -30, -46, -51, 21, 32, -57, -21, 10, 44, -53, -20, -33, 11, 36, -11, 17, -54, -31, 49, -36, -5, -57, -47, -2, 33, 3, -15, -60, 24, 20, -3, 34, -63, 8, -21, 53, 42, 60, -55, -38, 10, 0, -43, -34, -6, 6, 47, -14, -18, 44, 72, 72, 23, 23, 23, -54, 2, 64, -25, -23, 12, 16, 71, 73, -9, -31, 18, 58, -72, -31, 4, -35, -8, 53, 42, -34, 11, 6, 50, -56, -49, -73, 4, -22, 31, 10, 52, -15, 33, -7, 43, -40, 70, 61, 0, -66, -74, 50, -67, -59, 15, -1, 50, -46, -24, 66, -24, -58, -43, -35, -4, 58, 69, -59, -42, -18, -72, 49, 9, -67, 33, -55, -42, 27, -73, 62, -3, 8, -48, -12, 45, 39, -16, 74, 72, -44, 52, 25, 24, 37, 26, -32, 63, 64, 60, 17, 33, -38, -12, -34, 42, 61, 6, -34, 46, -33, -55, -32, 50, -11, 47, 52, -34, 60, -72, -15, -11, -68, 68, 42, -31, 19, -22, 29, 64, -49, 17, 42, -23, -11, -66, -58, -24, 14, -67, -5, -13, -44, 70, -14, -57, -53, 29, -48, -53, 65, 66, 53, 35, 74, 56, 52, 50, 41, 9, -44, 46, 40, 46, -62, 48, -58, 62, 19, -11, -52, 13, -10, 28, 63, 39, 15, -50, -23, -10, 39, -40, -8, -61, 52, -7, -41, -46, -63, -50, 9, 68, 53, -65, -42, 40, -37, -7, -70, 55, 42, -31, -20, 51, 68, 46, -59, -14, 38, -38, -64, 64, 62, 14, -47, 31, 34, 17, 24, -70, -14, -9, -59, -49, 63, 55, 47, 65, -8, -61, -72, 2, 6, 49, 8, -11, 9, 23, -62, 64, 7, 13, 42, 23, 64, 17, 55, 10, -2, 43, 16, -19, -46, 8, 35, -13, -49, 5, 17, 14, 2, -73, 62, -26, -10, 23, 24, 45, 12, -41, 55, -71, -2, -72, -20, 42, 38, 38, 70, 51, 9, -60, 12, -59, -61, -62, 59, -15, 55, 61, 70, -27, -62, 25, -47, -41, 45, -42, 11, -5, 40, -52, -17, 2, -39, 41, -33, 47, 34, 28, 53, 9, 38, -33, -28, 70, -14, 63, -18, 47, -11, -50, 70, 2, -44, 53, 36, -68, 63, -27, 66, 11, 16, -30, -17, -5, 39, -1, -71, -67, -28, 71, -24, 60, -60, -63, -51, -17, -24, -54, 61, -21, 15, -41, 14, 33, -52, -36, 59, 31, 17, -40, 17, -43, -15, -62, 41, -18, 31, 14, 3, 1, -19, -39, -44, -17, -28, 28, 7, -2, -50, -32, 35, 23, -52, -54, -46, 10, 70, 44, 42, 49, 36, -8, -74, 2, 53, -27, -4, -38, -21, 25, -9, -47, -1, -21, -18, -21, 50, -38, 59, 37, 33, 18, 60, -42, 24, -7, 46, 37, -9, 39, 47, 44, -60, -13, -67, -43, 66, -19, -25, -7, -60, 69, -64, 64, -47, 10, 10, -53, 45, 13, -46, 26, 20, -24, -49, -13, -18, -73, -6, 62, -44, -10, -8, 19, -18, -31, -66, -36, 56, -71, -46, 66, -63, -6, -56, 51, 29, 23, 53, -29, 56, -38, 47, 72, 2, -11, -60, 58, -56, -9, 24, -48, 64, -72, -55, -20, 60, 36, 57, 47, 43, 68, -22, -63, 69, 30, 23, -37, -9, -25, -33, 34, -69, -65, -22, -5, -53, -40, -71, -69, -52, -49, -65, -72, 11, -23, -52, 0, -53, -16, 22, 56, 67, 38, -31, -44, 13, 15, -42, -64, -25, 37, 29, -67, 71, -45, 52, -43, -26, 63, 7, -48, 3, -24, -66, 31, 17, 25, -15, 5, -63, -62, -56, 14, 58, -23, -46, 19, 2, -38, -8, -72, 71, 9, 36, 35, 2, 4, -63, 49, 34, -24, -39, 26, 73, 21, -61, -18, 1, 20, -1, 55, 21, -27, -35, 64, 24, -45, 58, 9, 47, 18, -6, -47, -59, -60, -32, 70, -73, 67, -26, 38, 15, -69, 39, 28, 26, -62, -73, 66, 15, -68, 11, 38, 53, -27, 61, -19, 73, -45, -40, 51, -34, -45, -38, -29, 1, 34, 5, -51, -48, -8, 0, 59, 40, -52, -53, -32, -31, -5, 51, -57, -28, -71, 32, 66, -35, 44, -39, 9, -25, 43, 27, 8, -31, 63, -16, 74, -62, -30, -61, -14, 71, -38, 50, 19, -42, -53, -33, -14, -1, 14, 43, -50, 36, 34, -58, 33, -27, 11, 22, 54, 12, -64, -46, 32, -14, -30, -48, 52, -36, 0, -41, 65, -8, -45, -38, -59, -31, 68, -28, -19, -50, -12, -24, 3, -65, 51, 11, 13, -69, -70, 35, 26, 22, 30, -32, -39, -7, -26, -70, 61, -46, 58, 41, -39, 17, 8, 67, 37, 4, -10, 21, 66, -48, -25, -43, -27, -2, 19, 6, 21, -46, -47, 34, 55, 48, 2, -19, 35, -16, 1, 58, -62, -66, -9, -47, 7, -60, 47, -70, -21, 73, -14, 4, -43, -31, 44, -72, -25, 17, 30, -68, -27, -71, -33, 29, 20, 20, 61, -40, 33, -25, 49, -53, -16, 35, -15, -74, 43, 5, -61, 66, -23, -54, -54, 3, -40, 41, -63, 31, 57, 14, 53, 40, -7, 67, -71, -29, -21, 60, 47, 33, 37, 68, 63, 23, -58, -13, -33, 41, -61, 8, 65, 7, 73, -51, 20, -34, 7, 44, 65, 65, 34, -41, -41, 2, -48, 29, -33, 59, 64, -37, 7, -9, 52, -41, -69, 63, 70, -41, 64, 69, -3, -19, 65, -68, 32, -37, 64, 7, -52, -63, -59, -7, -26, -50, 49, -58, -63, 3, -66, -13, -51, 63, 50, 69, -55, 29, 44, 5, -28, 44, 10, -28, -73, 57, -51, -46, 13, 29, 65, 27, 3, 73, -38, 23, 9, -55, 25, 64, -48, -55, -13, -71, -29, -70, -62, -8, -9, -27, -17, -4, 17, 53, 73, 52, -16, 41, 52, -3, -57, 48, -25, -52, 25, -58, 25, -34, 27, 18, 12, -48, -16, -8, -50, 18, 43, 38, 1, -53, 10, 49, -52, 14, -6, 57, 37, -4, 52, -56, -60, -48, 3, -54, -50, 44, -55, 57, -53, 5, -1, -55, 22, -38, -14, -61, 1, 25, -52, 64, 28, -29, 9, -4, 41, 37, -64, 21, -27, -64, -16, 32, 21, 35, -55, 59, 14, 11, 3, 68, -9, -38, 73, 33, 46, 50, 14, -72, -38, -49, -22, -14, 47, 66, -9, -4, 40, -45, -74, -38, 19, 72, 21, -12, 20, -51, 53, -45, -21, -10, 35, -65, 50, 63, -41, 10, 48, -56, -40, -62, -55, -58, -31, 5, 48, -4, 46, 41, -64, -61, 51, 73, 15, 12, 28, 65, 58, -40, 61, -70, 18, 25, 19, -53, -51, 19, -36, 44, -40, -25, 18, -29, 49, -19, 24, -68, 35, 48, -41, -34, 19, 53, 29, -44, 56, -25, 56, 18, -16, -23, 12, -23, 42, 37, -56, 25, 58, -24, -43, -43, 20, -49, -9, -59, 47, 22, 40, 32, 71, -15, 30, 53, 15, -22, -25, -32, -14, 52, 56, -7, 2, 23, -52, -41, -44, 41, -38, -23, 20, 6, -31, 53, -60, -44, 36, -15, 16, 31, 1, 15, -68, -67, -62, -66, -25, 55, 67, 48, -45, 64, 6, 20, -53, -26, -34, 42, -32, -34, 22, 69, 22, 31, 26, -48, -48, 73, 70, 31, 48, -38, -44, 18, -25, -8, 45, 34, 57, -67, 5, -31, -6, 67, 57, -31, 39, 57, 66, -52, -20, 36, -48, 8, 13, -40, 16, -34, 65, 33, 2, -42, -2, -13, -29, -16, -26, 31, 29, 52, 13, -38, 49, 13, 20, 56, 59, -5, 49, -49, -24, -30, 65, 2, 60, -73, -38, -63, 64, 52, -34, 31, 67, 37, -49, 61, -36, 41, -59, 47, -44, -13, -53, -71, -18, 7, 56, -3, -69, 7, 49, -42, 1, -29, -20, 51, -58, -54, -42, 25, -8, -32, -49, 6, -59, 0, -61, -10, 55, 63, 35, -67, -45, -58, -63, 10, -55, 53, 1, 6, -2, 1, -43, 19, 48, -43, 63, -13, 22, -53, -49, -4, 63, -15, -15, -49, 67, -25, -20, 58, 43, 11, -26, 26, -62, 8, -6, 44, -26, -24, 56, 73, 55, 69, -33, 44, -53, 58, -72, -25, -13, 3, 38, 45, -37, -22, 55, 58, -61, 65, 36, -51, 69, -57, -37, 15, 42, -7, -26, 48, -40, -52, 65, 8, -39, 25, -10, 11, 54, -60, 40, 62, 61, 51, 40, 49, 25, 57, 7, -27, 45, 36, 1, -11, -10, -3, 32, -52, -46, -1, 67, -2, 38, -21, -60, -43, 31, -32, -66, -13, 49, 7, 25, -12, -11, -56, 12, 12, 36, -16, -7, -57, 29, 28, 47, -32, -3, -20, 25, 27, -16, -2, -8, 59, -42, -54, 14, 23, 1, 40, -16, -40, -62, -50, -48, -50, 2, -43, 41, -48, 29, 24, -54, -51, 33, 46, -37, 35, -32, 18, 19, 30, 70, 20, -23, 34, 19, -36, -17, 67, 64, 13, -52, 27, 48, -37, 23, 65, -22, -18, 19, -9, 41, -37, 14, -9, 1, 50, -33, -41, 46, 32, -67, 39, -47, -24, 3, -63, -47, 9, -23, -6, 26, 10, 61, 26, 34, -41, 61, -26, 37, 62, -13, 53, -60, -18, -30, -30, 0, 5, 47, 56, 64, -39, -35, 73, 40, 4, -39, -33, 72, 53, 26, -12, 27, -48, 14, -63, 34, 1, 1, -39, 62, 5, 52, 28, -13, -39, -24, 51, -61, -42, -24, -19, -74, -54, 16, -24, -3, 62, -56, 60, -37, -62, -9, 15, -5, 12, -21, -24, -7, -28, -31, -41, -52, -28, 70, -25, 31, 16, -43, -42, 44, -43, 40, 9, -62, -46, -65, 9, 33, -57, -24, -61, -71, -56, 24, 13, -74, 31, 6, 38, 67, -32, -16, 5, 65, 62, -62, 20, -32, -53, -50, 66, 29, -53, 60, -55, 19, 3, -26, -9, 3, 48, -55, 18, -41, 1, -40, 15, 63, -10, 32, 63, -47, -22, -74, -32, -20, 71, -47, -48, -53, -58, 58, -32, -19, 64, 8, 7, 0, -12, -2, -34, 52, -19, -28, 69, 57, 32, 0, 4, 46, 67, -51, -19, -3, 40, -33, -66, 62, 13, -5, -43, -62, -27, -60, -9, 44, -38, -5, 17, 56, -18, -18, 22, -29, 62, 3, 66, 28, 19, -27, -13, -36, -73, -23, -20, 43, -61, -26, 13, -49, -73, -71, 0, -72, 44, 34, -40, 48, -57, -57, 59, -17, -20, 9, -66, -64, -69, 18, 5, -46, 34, -4, -66, -59, 1, -3, 73, -15, 40, 49, 32, -38, 16, 42, -40, 47, -64, 25, 43, 54, -69, 5, 56, 3, 26, 70, -30, 70, -38, -53, -54, -42, -8, 59, -45, 38, 45, -59, 11, -15, -43, 43, -69, -39, 47, -43, -1, -35, -56, -49, 18, -11, -45, 60, 42, -39, -46, 7, 17, 12, 13, -17, -58, -73, 26, 71, 26, -36, 34, -64, -69, -66, 24, 1, 51, -9, 15, -20, 70, -41, 8, 41, -43, 56, 14, 27, -15, 15, 10, -31, 6, 28, 70, 51, 64, -66, 33, 47, 73, -22, 23, 45, 27, -19, 71, 66, 40, 36, 72, -55, -59, 18, 34, -40, -28, 2, -66, -44, 47, 56, 22, 52, 68, 25, -13, 34, 62, -72, 56, -49, 29, -6, -10, -73, 59, 45, 20, 33, 1, -39, 63, -27, 60, 57, 24, -2, 9, 69, 51, -7, -10, -73, -37, 10, -52, -23}

#define ADD_CONV2D_KERNEL_0_SHIFT (9)

#define ADD_CONV2D_BIAS_0 {-97, 62, 40, 76, -64, 110, -43, -92, 31, 101, -77, -37, 75, -45, 54, -6}

#define ADD_CONV2D_BIAS_0_SHIFT (8)

#define BATCH_NORMALIZATION_KERNEL_0 {122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122}

#define BATCH_NORMALIZATION_KERNEL_0_SHIFT (7)

#define BATCH_NORMALIZATION_BIAS_0 {101, 99, 102, 100, 100, 101, 103, 102, 102, 101, 101, 101, 100, 101, 103, 100}

#define BATCH_NORMALIZATION_BIAS_0_SHIFT (7)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0
#define BATCH_NORMALIZATION_OUTPUT_SHIFT 0

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif
#define BATCH_NORMALIZATION_OUTPUT_RSHIFT (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_OUTPUT_SHIFT)
#define BATCH_NORMALIZATION_BIAS_LSHIFT   (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_BIAS_0_SHIFT)
#if BATCH_NORMALIZATION_OUTPUT_RSHIFT < 0
#error BATCH_NORMALIZATION_OUTPUT_RSHIFT must be bigger than 0
#endif
#if BATCH_NORMALIZATION_BIAS_LSHIFT < 0
#error BATCH_NORMALIZATION_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};
static const int8_t batch_normalization_weights[] = BATCH_NORMALIZATION_KERNEL_0;
static const nnom_weight_t batch_normalization_w = { (const void*)batch_normalization_weights, BATCH_NORMALIZATION_OUTPUT_RSHIFT};
static const int8_t batch_normalization_bias[] = BATCH_NORMALIZATION_BIAS_0;
static const nnom_bias_t batch_normalization_b = { (const void*)batch_normalization_bias, BATCH_NORMALIZATION_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[4096];
static int8_t nnom_output_data[3136];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[4];

	new_model(&model);

	layer[0] = Input(shape(16, 16, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_VALID, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(BatchNormalization(16, &batch_normalization_w, &batch_normalization_b), layer[1]);
	layer[3] = model.hook(Output(shape(14, 14, 16), nnom_output_data), layer[2]);
	model_compile(&model, layer[0], layer[3]);
	return &model;
}
