#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {60, -9, 3, -42, -68, 69, -61, -36, 3, -3, 73, 5, 62, 54, 52, -52, -38, 73, -63, 2, -73, 36, -37, 48, -29, -35, 48, -57, 40, -67, 2, 49, 55, 57, 6, -12, 66, 34, 39, -34, 20, -6, 4, -57, 23, -45, -40, 28, -21, -54, -23, -52, 46, 27, 71, -73, 69, -33, -13, 2, 34, 68, 73, 62, -22, 4, -48, -20, 44, -36, 56, 41, 53, -28, -69, 16, -52, 73, -32, 15, -27, -46, -46, 44, 45, -14, 43, 25, -5, 61, -41, 55, 56, -18, 1, 29, -36, 63, -5, 61, -13, -16, 65, -52, -2, -31, -29, -71, 27, 2, -31, 41, 73, 11, -52, 73, 27, -52, 43, 2, 38, 67, 15, -19, 72, -15, 55, -19, -42, 47, -49, 36, 0, 71, -6, 42, -5, -62, 46, 61, -4, -70, -50, 49, -50, 48, 57, -28, 14, 30, -18, 11, -54, -49, 57, 9, -4, 0, -46, 54, 27, -57, 20, -9, 6, -58, 19, 11, -45, 12, 25, -64, -50, -43, -38, -46, -39, -65, -34, -25, -57, 25, 12, 60, 37, 15, 6, 65, 65, 37, -40, -61, -11, -15, 51, -57, -27, -57, -67, 57, -72, 19, -54, -57, 56, -54, -56, 71, 45, -3, -26, -30, -38, -5, 54, -55, 17, 43, -2, -22, -6, 37, 21, 73, -56, 22, -63, -17, -4, -65, -42, 66, 19, -72, -53, 24, -22, 36, -61, 54, -5, 41, -4, -40, -37, -58, -15, -50, 17, 73, -18, 0, -55, -27, 21, 23, 12, -70, -73, -63, 12, -42, 50, -66, 10, 46, -35, 42, -61, -22, 13, -2, 69, 8, 38, -51, -44, 14, 16, -46, 66, -31, 11, 1, -33, 71, 68, 36, -26, 53, -13, -66, 71, 45, 48, 1, 70, -11, 3, -30, 4, 5, 67, -18, 46, -11, 23, 12, 54, -8, 60, 27, 0, 51, 41, -2, -40, -70, 69, 2, 38, 8, 61, -13, 39, 45, 5, 2, -63, 60, 11, 68, -73, 7, 67, 2, 40, 52, -59, -70, 28, 69, 39, -62, 18, 64, 25, 39, 42, 1, -51, 66, 67, 1, 60, -44, -66, 2, -58, -23, -49, -69, -12, 43, -5, 66, 68, -45, 18, 35, 38, 25, 67, -44, 49, 65, -56, -61, -11, 33, 32, -44, 7, -58, -63, -59, -26, -11, -5, -60, 17, 69, -18, -59, 69, -72, 27, 7, -44, -21, -55, -49, -72, -46, 54, -52, -4, 33, -60, -33, 47, -60, -43, -17, -9, -61, -14, 58, -52, -73, -13, -62, 49, 11, -53, -7, -34, 63, -19, 28, 8, -65, -21, -5, 63, 55, -73, 32, 61, -62, 27, -47, -37, 24, 14, 52, -46, -32, -35, 71, 34, 33, -46, -20, 27, -71, -10, -6, 27, -16, 23, 24, 66, 58, -58, 60, -69, -28, -20, 45, 50, -48, -14, 33, -69, 57, -2, 7, -21, 54, 40, 30, 46, 46, -28, -46, 1, 18, -58, 2, 64, 68, 63, 4, -51, 63, 13, -54, 6, -65, -25, 5, 29, 30, -70, 52, -31, 5, 9, 63, 25, -15, 17, -17, -44, 26, -23, 17, -50, 67, -64, 37, 8, -54, -17, 16, 17, 2, 74, 64, 14, -8, -65, 17, -6, -47, 35, -6, 3, 36, 41, 39, 37, 32, -24, -62, 5, 58, -59, 12, -11, 12, -16, 67, -10, -37, -22, -45, -8, 40, -64, 11, -9, -48, 5, 35, -65, 65, -31, 9, -34, -60, 6, -22, 22, 41, -37, -64, 52, 51, -63, 68, -7, 34, 55, 49, -28, -66, -68, 72, -31, -17, 39, -18, 61, -3, -50, -73, -36, 36, -63, -26, -43, 71, 2, 33, -20, -19, 7, 9, -33, 27, 42, -63, -26, 32, -41, 18, 73, 24, -60, -48, -46, 66, 45, 48, 14, -41, -15, 22, -15, -38, -32, -20, -44, -55, 30, -60, -19, 56, -55, -20, -61, -28, 1, -7, 53, 58, -26, -32, 63, 67, -69, 64, 12, -24, -16, -34, 33, 30, -7, -72, 55, -16, 1, -26, -38, 16, 14, -65, 46, -26, -28, -33, 63, -8, -36, 50, 4, 16, 26, -65, -11, 35, 56, 33, -51, 32, 10, 54, 10, 29, 73, 54, -21, 55, -12, -67, -15, -22, -53, 69, -9, -30, 13, -70, -3, -28, 22, -24, -19, 33, 13, 49, 14, 9, -41, -29, 34, -11, 60, 62, -6, -45, 63, 31, 38, 13, -46, 65, -68, -22, -31, 42, -48, 2, -52, -43, -28, 1, 64, 24, -62, 4, -23, 61, 45, 20, 65, -5, 24, 58, 43, -21, 53, -24, -29, 17, 25, 34, -29, 69, -51, -70, 71, -68, 0, -69, 64, -12, 15, -56, 61, 69, -19, -38, -21, -48, 32, -22, -68, 51, 49, 44, 25, 34, 65, 40, -13, 68, 20, -49, 24, -20, -20, -6, -63, 24, -23, -70, 65, 48, -43, 35, -42, 53, -69, -54, -36, -70, 37, 27, -49, 30, -40, -70, -10, 6, 41, -64, -71, -27, -66, 73, -16, 55, 1, 22, -4, 56, 65, 50, 6, 25, 0, -48, 38, 14, 41, 1, -40, 64, 42, 74, -11, -35, -63, 6, 3, -47, 5, -3, 5, -47, -39, 15, -41, 8, -50, 31, -18, -13, -22, 29, 33, -21, 1, -49, 34, -71, -67, 14, 16, -16, -66, 50, -74, 68, -73, -49, 16, -51, 21, -61, -59, 48, -20, 0, 52, -32, 43, 21, 0, 57, -35, 32, -62, 45, -47, 45, -5, -18, -10, -52, -25, -30, -31, 6, 8, 21, 35, -18, -21, 69, 36, 73, 53, -40, -14, 29, -46, 54, 71, 33, -39, -5, 30, -17, -8, -34, -2, 49, 32, -21, 68, -22, 61, -5, 6, 24, -68, -39, -32, 3, 74, 33, 14, 65, -9, -30, -53, -13, 17, -51, -42, -60, 33, -31, -28, -38, -71, -26, -67, -12, -5, -20, -71, -20, 13, 39, -32, 4, -3, -36, 43, 50, -41, 0, 37, 20, 30, 1, -73, -59, 5, 53, -62, -62, -3, -35, 31, 14, 11, -42, -23, 16, 20, 69, 48, -43, 20, 43, 43, -49, -70, -49, -58, 11, 10, -23, -70, 29, -62, 24, 36, 5, -64, 0, 73, 53, 5, -24, 37, -19, -26, 43, -32, 29, 43, 10, -28, -18, 4, 62, 24, 44, -63, 11, -16, 19, -44, 70, -54, 12, 69, 36, 7, 55, 62, 62, -31, 11, -52, -47, -33, -31, -7, 56, 21, -48, -40, 37, -64, -42, -46, -42, 65, 73, 4, -35, 57, 56, 15, -20, -37, 12, 44, 53, 38, -13, -50, -58, -42, -26, 47, 64, -9, 9, -10, -14, 7, -70, 21, 59, -35, -10, -2, 8, 50, -5, -63, -10, 59, 18, 74, 67, 46, -11, -7, 54, -27, -12, -68, 16, 25, -31, 58, 9, -51, -62, -36, 66, 18, -4, 62, -46, -16, 66, 73, 69, 30, -5, 68, -37, 38, -28, -23, -30, 50, 52, 52, 64, -7, 26, -46, 67, -52, 39, 40, 34, 5, -5, -23, 70, -2, 72, -23, 48, 18, -21, 38, -56, -63, 58, 45, 16, 52, 51, -49, -23, 29, -34, -15, 37, -55, 20, -59, 35, 50, -59, 23, -64, -1, -61, -54, 69, -61, -24, 32, -11, 59, 11, -39, -33, -70, -58, -71, -28, -62, 16, -62, 37, -50, 8, -68, -68, -57, -66, -69, -10, 34, -14, -29, 69, 40, -29, 29, -65, 38, -73, -58, -64, -4, -23, 34, 35, 29, -53, 34, -62, 10, 63, -22, 12, 56, -64, 61, -37, -59, 3, -19, 16, -22, 64, 64, -72, 19, -51, -37, -62, 62, 6, -69, 17, 31, 21, -48, -7, 1, -42, -36, -55, -20, -70, -52, -35, 38, 43, -69, 68, 40, 1, 62, -28, -21, -48, 2, 66, 50, 55, 34, 43, 36, -12, -62, -16, -30, -11, -61, -55, -39, -61, 17, -7, 68, 65, 45, -50, 7, -57, -57, 1, -66, 27, -16, -73, -46, 34, 69, 38, 22, -9, -34, -10, -14, 55, 58, 39, -9, -14, 42, -48, 63, -73, 17, -22, 23, 38, -4, 63, -17, 49, -47, 62, 62, -66, -5, -50, -15, -31, 51, 38, -44, 17, -73, 52, 64, -22, 65, -4, 38, -11, 18, -37, 66, 6, -47, 48, -52, 65, 13, -55, 21, -5, 1, 67, -38, 71, 59, -57, 50, -5, -61, -7, 57, 10, -17, 66, 59, 50, 44, 2, 73, 36, 21, 12, 31, 5, 55, 48, -51, 47, 36, 51, -11, 51, -63, -7, 13, -21, 68, -12, 38, -37, -5, 9, -16, -29, 26, -72, -27, -28, 5, 64, 46, -73, 55, -53, -10, 33, -31, -10, 10, -23, 46, -72, -4, 53, 55, -41, 24, 3, -3, -17, 72, -7, 27, 57, -16, -67, 71, 17, 34, -20, 36, -39, 11, 14, -39, -73, 65, 2, -6, 62, -39, 4, -22, -47, 35, -9, 8, 25, 52, -16, 34, 52, -44, 19, -25, 57, 57, -6, -60, -34, -67, 42, -30, 68, 48, -40, 34, 56, 44, 53, -54, 48, -37, -73, 12, 42, -45, 51, -49, -57, -45, -31, -53, 20, 21, 61, 0, -48, 14, -43, 59, 25, -20, 46, 22, 15, -66, 23, 64, 14, -50, 44, -62, 63, -37, 73, -31, 52, 37, -15, -69, 5, 0, 65, 19, -6, -3, -63, 36, -26, 44, -28, 18, 68, 2, -41, -3, 61, -38, 39, 3, -28, 2, 65, -31, 49, -48, -51, -37, -66, 0, -59, 43, -5, 19, 46, -49, -36, -2, -34, 11, 38, 36, -31, -21, -69, 23, -10, 42, -49, -47, -10, -11, 51, 63, 40, -8, -5, 10, 50, 16, -70, 66, -8, -32, -31, 48, 63, -57, 30, -30, -21, 68, -33, 10, -27, -42, -47, 25, 58, -26, -43, -58, -40, -48, 68, 2, 2, 31, 7, -4, 4, -9, 17, -36, 64, 52, 4, -25, -6, 36, 2, -16, -13, 39, 70, 38, 53, -47, -17, 56, -40, 50, 58, -12, 24, -14, 32, -24, -52, 36, 5, -34, -39, 62, 18, 11, 11, 63, 57, 16, -33, 73, -46, 13, 19, -29, 39, 38, -44, -1, -5, -62, -37, 17, -42, -27, 65, 41, 56, 27, 23, -20, -64, 55, -52, -41, -45, 18, -30, -18, 40, -37, -40, 53, -53, 8, 7, 69, -53, -47, 0, 15, -47, -61, 45, -66, 60, -54, 71, 73, 24, 3, -29, 2, 24, 59, 22, 1, 72, -37, 48, -10, 44, 54, 7, -26, 31, 10, 69, 66, -16, -36, -23, 38, 33, -7, 19, -64, 9, 65, -64, -25, 41, -23, 45, -6, 9, 50, 74, 12, 9, -42, 16, -71, -25, 14, 48, 7, 25, -33, -19, -5, 2, 48, -33, -74, -43, 31, -7, 35, -12, -68, -19, -31, -25, 40, -69, 16, -23, -74, 10, 11, -36, 56, -31, 12, -49, -46, 9, -59, 69, -72, 38, -39, 70, 9, -56, 62, -23, 13, 54, 32, 4, -1, -37, -60, -42, 48, -23, -28, 62, 45, -1, -6, -15, 12, 4, -73, 7, 31, 71, 27, -1, 32, -30, 44, 73, 20, -15, 31, 30, -11, -59, 60, -36, 72, -23, -14, 49, -29, 8, -19, 5, 11, -48, 41, 55, -39, -52, -62, -17, 66, -22, -31, 8, 71, -73, 40, -39, -64, 56, -59, -52, 2, -71, 60, 62, -70, 12, 38, -72, -58, 15, -53, -6, -70, 26, 69, 53, -13, 66, -14, 45, -35, -58, 45, -34, -69, 30, 67, -73, -64, 71, 3, 38, -18, -22, -72, -23, -73, 55, 55, 55, 69, 65, 20, -72, -54, 19, -65, 10, 69, -59, -54, -52, 51, -28, -11, 3, -34, 19, 58, 68, 52, 34, 10, 6, -53, -28, 70, 47, 32, 74, -14, -54, 26, -38, -21, 72, 50, 69, 59, 51, -38, -2, -32, -61, 17, 56, 52, -25, -73, 56, 19, 37, -20, 17, 11, -43, -44, 0, -19, -33, -57, -60, -73, 42, 72, 34, -13, 22, 24, -2, -71, -59, 9, 3, 30, -14, 8, -34, 37, -40, 46, -70, 67, 69, 50, -59, 21, -57, -57, 43, -51, -22, 12, -74, 30, 45, -46, 68, -4, 72, 34, -45, 32, 70, 66, -73, -6, 54, 23, -44, 30, -56, -21, -2, -40, 46, 66, 33, -10, 34, -4, 13, 44, -10, 65, 4, 49, 67, 56, 7, -35, -66, 47, 7, -60, 52, -62, -52, -62, 53, 13, -59, -63, 0, 30, 41, 21, -34, 23, 50, 53, -32, 58, 33, -13, 17, -18, 4, 5, 28, 55, 57, 33, -61, -25, 42, -8, 69, -2, -65, -2, 73, 43, -48, 41, -48, 16, 26, 71, 13, 14, -22, 61, -71, -73, -47, 60, -28, 68, -66, 53, -72, 69, -10, -4, -22, 70, -32, -55, -61, 65, -73, -26, 70, 11, -72, 52, 25, 56, -41, 60, -45, 49, -16, -14, 27, -39, 50, -4, 5, -10, -47, -46, -47, -54, 24, -16, 4, -37, -55, 50, 33, -23, 43, 66, -22, 36, 14, -24, -16, -70, -23, -32, 36, 29, -24, -52, -7, 18, 35, 58, -15, -66, 18, 6, -5, -25, -6, 4, -55, 63, 4, -51, 27, -54, 63, 17, 16, -24, -18, 6, 14, 51, 6, 69, -14, 21, 30, -21, 61, 21, 53, 63, 29, -41, 25, 32, -38, -3, -70, -25, 36, 32, -50, 48, -2, 59, 36, 50, -22, -69, -27, -41, 53, 16, -17, 17, 19, 21, 52, 8, 33, 54, -70, -42, -37, 57, -6, 70, 56, 21, -68, 7, -71, 68, -35, -17, -1, -24, 52, 57, -41, -20, -55, -8, -48, -16, 32, 7, -34, -55, -4, -10, 30, 60, -8, 26, -67, 58, -2, -48, 13, 55, -45, 42, 36, 7, 26, -43, -12, 63, 21, 33, 20, -40, -40, 4, -73, -20, -33, -34, 31, -61, -30, -62, -68, -59, -61, 24, 24, 40, 8, 13, 64, 20, -5, -26, -67, 59, 11, -15, 21, -74, -72, -71, -14, 4, -4, -63, -41, 51, -23, 43, 57, 7, -71}

#define ADD_CONV2D_KERNEL_0_SHIFT (9)

#define ADD_CONV2D_BIAS_0 {-5, -77, -73, -83, 62, -27, -62, -80, 46, 90, 62, 92, 96, 37, 19, -91}

#define ADD_CONV2D_BIAS_0_SHIFT (8)

#define BATCH_NORMALIZATION_KERNEL_0 {103, 101, 102, 102, 101, 102, 101, 103, 101, 102, 102, 102, 101, 103, 102, 101}

#define BATCH_NORMALIZATION_KERNEL_0_SHIFT (7)

#define BATCH_NORMALIZATION_BIAS_0 {83, 85, 84, 84, 84, 84, 84, 83, 85, 82, 83, 83, 84, 84, 83, 84}

#define BATCH_NORMALIZATION_BIAS_0_SHIFT (7)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0
#define BATCH_NORMALIZATION_OUTPUT_SHIFT 0

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif
#define BATCH_NORMALIZATION_OUTPUT_RSHIFT (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_OUTPUT_SHIFT)
#define BATCH_NORMALIZATION_BIAS_LSHIFT   (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_BIAS_0_SHIFT)
#if BATCH_NORMALIZATION_OUTPUT_RSHIFT < 0
#error BATCH_NORMALIZATION_OUTPUT_RSHIFT must be bigger than 0
#endif
#if BATCH_NORMALIZATION_BIAS_LSHIFT < 0
#error BATCH_NORMALIZATION_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};
static const int8_t batch_normalization_weights[] = BATCH_NORMALIZATION_KERNEL_0;
static const nnom_weight_t batch_normalization_w = { (const void*)batch_normalization_weights, BATCH_NORMALIZATION_OUTPUT_RSHIFT};
static const int8_t batch_normalization_bias[] = BATCH_NORMALIZATION_BIAS_0;
static const nnom_bias_t batch_normalization_b = { (const void*)batch_normalization_bias, BATCH_NORMALIZATION_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[16384];
static int8_t nnom_output_data[16384];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[4];

	new_model(&model);

	layer[0] = Input(shape(32, 32, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(BatchNormalization(16, &batch_normalization_w, &batch_normalization_b), layer[1]);
	layer[3] = model.hook(Output(shape(32, 32, 16), nnom_output_data), layer[2]);
	model_compile(&model, layer[0], layer[3]);
	return &model;
}
