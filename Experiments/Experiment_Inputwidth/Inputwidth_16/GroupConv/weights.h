#include "nnom.h"

#define GROUP_CONV2D_KERNEL_0 {-54, 25, -37, 57, 49, 13, 40, -85, 63, 83, 2, -47, -64, -35, -45, 82, 28, -60, 52, -79, 45, -12, 26, 32, -56, 43, 39, -25, 3, 9, 39, 83, -35, -30, 26, 63, -18, -82, -71, -24, 75, -45, -29, -68, 31, 43, 29, 83, -71, -62, 23, 76, -13, -26, -68, 39, -50, -15, 35, 53, -68, -51, -85, 14, 66, -7, 3, 27, -10, 16, -51, -37, -53, -58, -41, 54, -68, 39, 22, -59, 71, -58, 50, 4, 49, -40, 33, 79, -11, -72, -23, 0, 26, 77, 22, -84, 73, -81, -81, 7, 45, 65, -28, 73, -48, -19, -15, -50, 62, 68, 77, -80, 37, -76, 40, 10, -32, 23, -56, -27, -80, 24, 52, 45, 11, 16, 23, 43, -23, -39, 49, 4, -41, 5, -43, 43, -60, -16, -4, -18, -15, -32, 69, 33, 44, 6, 20, 62, -61, -5, -52, -43, -37, 7, -83, 27, 60, -36, -4, -76, 33, -48, -75, 17, -85, -70, -7, 46, -46, 1, 60, 10, -13, -65, -81, 81, 42, -38, 15, 51, 6, -85, 33, -36, -13, -2, 55, -33, 78, 70, -5, -53, 5, -66, -31, 40, -55, -70, 29, -35, -21, 3, 41, -65, 72, 73, 4, 46, -20, -31, -71, 32, -80, 37, -49, -77, 62, 63, 17, -21, -46, 28, 26, -74, -38, -24, -62, 67, 23, -53, -68, -19, 51, -77, 34, 59, -6, 42, 81, -71, 49, -26, -44, 41, 3, -83, -17, -76, 48, -84, 37, -10, 76, 53, -28, -72, 72, 19, -56, -66, 80, 21, -40, 83, -64, -42, -71, 85, -77, -75, 81, -7, -61, -30, -74, 20, 38, 23, -54, -34, -39, -39, -73, -15, 18, -55, 70, -11, -30, 76, -22, -46, 23, -1, -17, 69, 23, -75, 70, -79, -1, 1, 34, 54, -5, -13, -69, -29, 51, 67, -27, 73, -34, -18, 84, 18, 78, 83, 34, 43, 41, 18, -69, 77, 27, -14, 40, -78, -79, -73, 19, -10, 80, 9, 42, -43, -10, 61, 61, 44, -73, 56, 20, 37, -67, 39, -4, -52, 40, -29, -19, -13, 29, 69, 25, 33, 1, -3, -13, -80, 0, 51, -57, 41, 10, 13, -40, 45, -58, -60, 74, 11, 45, -11, -57, -30, 49, -15, 39, -50, 43, -56, 84, 64, -50, -10, -31, 23, 5, -4, -42, -39, 70, -64, -37, -15, 53, 16, 31, -26, -79, 47, 18, 2, 82, 56, 30, 20, 74, 27, -12, 52, 61, -17, -78, -30, -58, 56, 10, 62, -55, 43, -34, -65, -45, 30, -1, -18, -17, 41, -46, -3, 24, 61, -9, -45, -39, 83, -3, -34, 43, -51, 42, 40, 8, -31, -77, -26, 32, 85, 27, 11, 21, -47, -74, 18, -67, -82, -15, -33, -50, 18, -51, 1, -23, 26, 16, 31, 74, 51, -78, 37, 36, -67, 22, -50, 18, -30, -38, 28, 16, -1, -58, -75, 73, -54, 58, 5, 0, 50, -32, -15, -4, -42, -69, -28, -32, 74, -60, -74, -64, -46, 71, 21, 33, 69, -62, 9, 59, -12, -24, 6, 3, 33, -55, -44, -59, -60, 1, -15, -45, -38, 38, 62, 79, 7, -75, 71, 62, 51, 11, 0, 22, -36, 17, 21, 70, 35, -19, 6, 53, -14, 25, 9, -28, 27, -21, 24, 75, 69, -1, 77, 58, -5, 28, 14, 69, -4, 3, -57, 61, -58, -46, 50, 57, 27, 30, -84, -9, -66, -49, -50, -30, -27, -40, 40, 33, -58, 22, 79, -28, -58, -5, 19, 6, -32, 69, 72, 73, 45, -73, 3, -3, 68, -57, 14, 0, 0, 38, 65, -14, 30, -22, -71, -8, 11, -14, -70, 75, 56, 44, 31, 59, 52, -15, -21, -37, -29, -62, -39, 23, 77, -21, 62, -47, 79, -66, 9, 9, -38, -51, 31, -73, -63, -72, -11, -84, -39, 41, -49, -23, 21, -26, 44, -18, -62, -70, -16, 31, -73, -36, 77, 63, -40, -24, 13, 49, -9, -57, -37, -47, -18, -49, -31, -63, 46, 7, -66, -57, -1, 43, -23, 19, -81, -20, 5, -24, -27, -78, -7, -53, -74, -28, -19, 12, 47, 51, -76, -22, 0, 74, 45, 46, -25, 80, 8, 31, -45, -55, 63, -19, 51, 14, -25, 61, 19, 35, -1, 85, 24, 83, 10, 79, -31, -4, 64, -77, 85, -63, -28, -33, -29, -2, 45, 70, -67, 64, -49, 53, -73, -60, 65, 54, -3, -18, -5, 84, -13, -84, 85, 21, 13, -11, -10, -8, -21, 63, -69, -9, 59, 79, -53, 63, -55, 7, -13, -3, -81, -27, -11, -37, -46, 63, 38, 12, -29, -28, -25, -71, 67, 70, -14, 54, -71, 14, -81, -8, 1, 23, 27, 60, 35, 60, 62, 10, -85, 71, 9, -3, 46, -34, 62, -68, 32, -3, -46, -29, 60, -80, 48, -60, -82, 27, -70, 6, -32, -17, 23, -31, -63, -2, 70, -80, 15, -7, -30, 22, 61, -17, 51, 81, -4, -72, -77, 24, 18, -58, 83, 52, -66, 17, -71, -61, -11, 12, -52, -69, 39, 62, 42, 18, 40, -6, 27, 65, 40, 81, 72, -18, 78, -32, -62, -76, -42, -32, -56, 62, -44, 85, 3, -52, -45, -13, 67, -49, 27, -18, 13, -75, -48, -50, 68, -44, 74, -6, 60, -17, 74, -15, 72, -57, -47, -39, -8, -48, -33, -10, 44, -23, -47, 66, -35, -68, -65, 58, -57, 66, 54, 61, -27, 39, -21, -50, -58, 56, 21, -82, -30, -34, 43, 48, -16, 31, 51, 60, -73, -67, 18, -41, -16, 59, -42, 69, 7, -49, -60, 73, -9, 13, -51, -81, -7, -46, 68, -60, -33, 15, -8, -6, 60, -4, -35, 50, 33, 27, 6, -47, -11, -52, -48, 38, -28, -56, 54, -5, 56, 20, -56, 34, 60, -29, -25, 43, 39, -72, 11, 5, -23, -66, 64, -7, -46, -25, -62, -82, -12, -61, -60, -78, -66, -45, 28, 6, 45, 71, 69, 47, 75, -80, -52, -32, 19, -84, -50, -8, 15, 39, 27, -20, -28, -10, -73, 21, 12, -15, 79, 26, -85, -74, 29, -16, -50, 13, -32, -34, 47, 63, 15, 62, 17, -31, 66, 50, -82, -51, 5, 60, -13, -9, 6, -6, 23, 42, -51, -9, 73, 69, -85, 39, 82, 38, 50, 12, 5, 55, 24, -16, 39, 72, 61, -35, 6, -61, 33, -36, 59, -69, -45, 66, 19, 79, 76, 83, -32, 41, 33, -46, 39, -39, -10, -80, -55, -74, 44, -49, -80, -9, -55, 11, -82, -54, 77, 78, -65, 61, 78, -38, 33, -56, -51, -63, 3, -49, -43, 61, -55, -51, -34, -22, 18, 24, 6, 6, 64, 27, -17, 84, 49, -9, 47, -36, 56, 40, -50, 51, 65, -5, 28, 67, 21, 37, 39, -82, 15, 56, 71, -3, -18, 41, 82, -59, 60, 27, 42, 63, -50, 39, 63, -38, 29, -59, 52, -23, -31, -42, -5, -55, 76, 4, 9, 82, -14}

#define GROUP_CONV2D_KERNEL_0_SHIFT (9)

#define GROUP_CONV2D_BIAS_0 {-46, -46, 104, 47, -56, 62, -85, -77, 90, -34, 34, 110, 7, -92, 74, 46}

#define GROUP_CONV2D_BIAS_0_SHIFT (8)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define GROUP_CONV2D_OUTPUT_SHIFT 5

/* bias shift and output shift for each layer */
#define GROUP_CONV2D_OUTPUT_RSHIFT (INPUT_1_OUTPUT_SHIFT+GROUP_CONV2D_KERNEL_0_SHIFT-GROUP_CONV2D_OUTPUT_SHIFT)
#define GROUP_CONV2D_BIAS_LSHIFT   (INPUT_1_OUTPUT_SHIFT+GROUP_CONV2D_KERNEL_0_SHIFT-GROUP_CONV2D_BIAS_0_SHIFT)
#if GROUP_CONV2D_OUTPUT_RSHIFT < 0
#error GROUP_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if GROUP_CONV2D_BIAS_LSHIFT < 0
#error GROUP_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t group_conv2d_weights[] = GROUP_CONV2D_KERNEL_0;
static const nnom_weight_t group_conv2d_w = { (const void*)group_conv2d_weights, GROUP_CONV2D_OUTPUT_RSHIFT};
static const int8_t group_conv2d_bias[] = GROUP_CONV2D_BIAS_0;
static const nnom_bias_t group_conv2d_b = { (const void*)group_conv2d_bias, GROUP_CONV2D_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[4096];
static int8_t nnom_output_data[4096];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[3];

	new_model(&model);

	layer[0] = Input(shape(16, 16, 16), nnom_input_data);
	layer[1] = model.hook(GroupConv2D(16, 2, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &group_conv2d_w, &group_conv2d_b), layer[0]);
	layer[2] = model.hook(Output(shape(16, 16, 16), nnom_output_data), layer[1]);
	model_compile(&model, layer[0], layer[2]);
	return &model;
}
