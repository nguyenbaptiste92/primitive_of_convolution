#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {49, 13, 73, 35, 69, 53, 55, -47, -50, -27, 21, 29, 10, 25, -25, 45, 36, 31, -61, 8, -24, -12, 73, 71, -7, 12, -46, 57, -12, 11, 21, 27, 7, 10, -67, 18, -37, 69, -44, 7, -29, 18, 3, 41, 63, -32, 31, -6, -21, -10, -31, 55, 57, 62, 54, 1, 13, 21, -65, 49, 66, 25, 3, 12, 22, 33, 59, 53, -55, -33, 12, 23, -71, 70, -47, 28, 57, 37, 21, -57, -55, -3, -62, -19, -31, -19, -45, 26, -59, -62, -57, 40, 47, 57, -23, 55, 5, 24, 44, 25, 34, 9, 37, -70, 28, 45, -67, 68, 29, 61, -33, 21, 45, 64, 4, 71, 67, 46, 7, 31, 33, -21, 66, -51, 0, 0, -34, -51, 64, 45, 49, 9, 46, 60, 74, 16, -58, -21, 66, -59, -57, 21, 49, 48, 46, 25, -25, 45, 42, 39, 73, -27, -36, -21, 16, -8, 20, 58, 22, -68, 20, -30, 19, 67, 38, 27, -54, -1, 60, -8, 43, -41, -16, 3, -44, -71, 46, 28, -16, -38, 64, 67, -39, -49, 55, -69, -20, 51, -17, 22, -27, -69, 68, 3, -7, -71, -51, 36, -52, 65, -48, 9, 61, -60, -45, 47, 73, -47, -37, -38, 53, 67, 30, -45, -12, -70, -37, -33, -61, 48, 38, 48, -49, -73, -10, -36, 23, -35, 11, -62, 14, 24, -15, -27, -68, -63, -72, -74, -15, 72, -70, -19, 11, 38, 42, 63, 4, -64, 8, 14, 11, -10, -40, 26, -10, -25, 33, -13, 49, 38, -67, -40, 62, -15, -45, -69, 26, 30, 6, 3, -66, -4, -73, 49, 35, 17, -59, -39, 22, 29, -39, -18, 31, -68, 24, 70, -2, 15, 44, 73, -57, 57, -41, -14, 13, -70, -72, -51, -52, 4, 35, -66, 69, 26, -71, -29, -24, -38, 53, -49, 50, -46, 9, 18, -32, 10, 2, -52, 30, -23, -12, 42, 10, -29, -15, -1, -5, 7, 73, -5, 17, -1, -32, -70, 33, -1, -28, -58, 60, 22, -24, 61, -29, 17, -41, 8, -7, 8, -41, 53, -42, -64, 63, 12, 57, -6, -59, -65, 47, 21, 17, 22, -29, 19, 35, -30, -42, -70, 38, 71, -2, 55, 29, -56, 21, 71, -21, 8, -9, 9, 55, 72, 55, 64, 29, 15, -45, -7, 41, 7, -24, -40, -72, -23, 35, -10, -23, 71, -42, -36, 69, 44, -55, -66, -33, 47, 2, -24, -9, 6, 5, 25, -46, -13, -44, 53, -27, -54, -17, -38, -13, 14, 32, 23, -46, -62, 68, -39, 9, 65, -4, 27, 2, 51, -11, -31, -26, -52, -47, -38, 5, 50, -48, 33, -42, 29, 73, -18, 53, 63, 9, 74, 8, 17, -56, 43, 68, 24, 71, -61, -48, 64, -53, -67, 65, -41, 10, -11, 0, -59, -58, -71, -20, 7, 67, 62, -39, -41, -51, -60, -54, 18, -70, 25, 0, -68, -51, 29, -25, 20, 40, 0, -1, -46, 64, -1, 21, -31, 54, -11, 31, 34, -17, -63, 26, -58, 58, 17, -66, 2, 42, 17, -65, -63, -55, 32, -10, 42, 40, 73, 27, -4, 32, 17, 55, -36, -61, -20, 62, -40, -60, 34, 27, 41, 62, -60, 6, -54, -22, 59, -19, -18, -47, 22, 51, 52, 52, 53, 45, -62, -50, -42, 8, 38, 50, -2, 36, 24, 62, -66, -73, -60, -65, -34, 72, -23, -61, -71, 13, -8, 55, 36, 51, 61, -7, 67, 45, 51, 16, 17, 2, 31, 27, 60, -42, -48, 70, 34, 72, 29, -47, -71, -25, -58, -4, 63, -19, -54, -44, 30, 43, 36, -50, -12, -2, -39, 55, -9, -31, 37, 42, -23, 73, -60, -34, 3, -6, -34, -5, 35, -66, -65, 40, 13, -56, 46, 53, -15, -2, -34, -66, 7, -20, 39, 17, 52, 14, 11, 14, -2, 59, -67, 13, 56, 68, -11, 30, -40, 32, 73, 19, -72, -71, 30, -45, 14, 65, 26, -72, -7, 21, -62, 66, 45, 44, -46, -67, 8, 59, -73, -11, -49, -70, 66, -11, 62, -50, 23, 14, -71, 11, -39, -56, 70, 34, 72, -66, 72, 15, 59, -69, -36, -15, 44, -61, 60, -50, 25, -24, 64, -39, -38, 70, -59, -45, 48, 20, -8, 50, -44, 36, 51, 38, 47, -9, -66, 46, -66, 4, -27, -74, 7, -2, -8, 51, -66, -67, -11, -44, 21, -68, -52, -38, -4, -28, 27, 56, -19, -11, 41, -36, 67, 62, 19, 22, 17, -27, -13, -63, 43, 5, -45, 29, -1, -43, 69, -15, -39, -44, 37, -71, 58, -12, -11, 3, -5, 58, 34, 43, 68, -14, -37, -9, 36, -12, -4, -36, 64, -43, 5, 14, -7, 6, 71, -64, 52, 19, 45, -45, 57, -17, 53, 31, 0, -70, 18, -40, 15, 10, -59, -8, 5, -44, -11, 70, 71, 0, 45, -35, -2, -54, 28, 58, -57, 25, 25, 41, -2, 49, -34, 7, 38, -6, -3, -24, 70, -64, 22, -5, -6, 13, 17, -13, -37, -38, 53, -64, 33, 66, 41, -53, -54, 8, -14, 40, -65, -41, -15, -45, -52, 14, -71, 72, -34, 67, -56, 64, -61, 73, 48, 65, 64, 0, 66, 24, 70, -50, -62, 51, 38, -2, 21, -31, 54, 61, -69, -34, 28, 40, 41, 62, 29, 40, -1, 25, -13, -24, 14, -37, -31, 2, -67, 41, -7, -47, 9, 23, -49, 16, -17, 27, -6, -16, -45, 65, 45, -8, -48, -61, -58, 8, 37, 41, -36, 42, -56, -15, -6, 4, 69, 72, 4, 12, 0, -63, -38, 60, -67, 36, 65, -42, 25, -15, -72, 13, 71, 0, -51, 27, 70, 30, 6, 68, -40, -51, 55, 30, 51, 23, 35, -32, 59, 72, 58, 48, 44, -59, -2, 26, -43, 40, 45, 25, 57, -16, -73, -37, -48, 1, 25, -27, -2, -18, 72, 52, 72, -32, -17, 63, -37, 66, -51, -31, 4, 7, -60, 12, 30, -5, 8, 11, -63, -62, -46, 26, 24, 3, -54, 33, 67, -20, 65, -43, -61, 48, 35, -70, 53, -1, -3, -28, -25, 7, 1, -6, -68, 53, 38, -67, 52, -24, -44, -10, 60, -20, -34, 26, -8, -48, -22, 26, 6, -41, 69, 20, -53, 28, 39, -34, 8, 72, -43, -26, -19, -40, -27, 6, 55, 51, -21, -10, -71, -36, -18, -55, -19, -41, -27, -16, 67, -44, -70, -72, -62, -15, 65, 64, -5, -64, -6, 45, 20, -63, -46, 20, -38, -57, 71, -51, -22, 22, 44, -11, 7, 32, 4, -59, -61, 68, -31, -40, -29, 51, 48, 23, 23, -57, 57, -11, -68, 20, -38, -65, -60, 2, 5, -70, 46, 15, -31, -65, 44, -45, 47, -31, -6, 29, 50, 49, -2, 69, 57, 13, 69, -35, 21, 72, -61, -2, 48, -33, -1, 60, -68, 0, 58, -60, 53, 63, -7, -35, 44, 2, -13, -8, 31, 31, 70, -49, 53, -6, -33, 5, -48, -69, 14, -45, 13, -68, -9, 30, 19, 38, 23, -39, 21, 46, 29, -38, 48, -45, 31, 9, 71, 41, 33, -39, 51, 66, -49, 5, -25, 37, -12, 40, 5, -51, 69, -57, -13, 68, 63, 57, 32, -52, 17, -58, -2, -51, -21, 17, 65, -9, 74, -58, 72, -32, 33, 3, -16, -53, 15, 8, 6, -23, 35, 68, -30, 17, 53, 4, 24, 67, -63, 34, 20, -59, 27, -10, 30, 18, 72, -59, 11, 11, -53, -61, -16, 61, -51, -58, -14, -60, -28, 46, 19, 72, -3, 17, 31, 7, -58, -35, 74, 36, 22, 64, -63, -30, -47, -61, 2, 2, 59, -65, 11, 10, -41, -26, 44, -25, -13, -59, 32, 34, 54, 49, -1, -60, -47, 18, -63, 36, 30, 16, 33, 55, -17, -4, -41, 61, -56, 70, -52, 23, 5, -23, -51, 10, 23, 1, 5, -7, -57, -3, 60, 13, -35, -47, -30, -5, 15, 54, 68, -64, -26, -11, -70, 31, 16, -26, -62, -14, 30, -52, -72, -18, 22, 51, -10, -3, -19, -12, -8, 20, 39, 32, 52, -6, -3, -59, 21, 19, 28, -34, 11, -9, 9, -5, 69, -17, 15, 57, 3, -64, 26, 4, 17, -14, 47, -65, 62, 64, -26, 57, 27, 44, 68, 25, -64, -70, -64, 63, 63, -8, -34, 38, 42, -16, -27, 1, 21, -37, 57, 6, -62, 60, -17, 45, 53, 35, 22, 70, 1, 70, 2, -64, -68, -28, 13, -29, -25, -2, -3, -67, 63, 17, 56, -64, -64, 66, 70, 33, 38, -56, 61, 68, 40, 70, 33, -32, 34, 49, -62, 45, -56, -15, 69, -48, 16, 48, 0, -41, -26, -53, 31, 60, 34, 73, -7, -59, -14, -48, 7, 52, 30, 53, 4, -19, -58, 46, -66, -53, -71, -54, -8, 21, 65, 23, -37, -72, 20, 11, 52, 34, 37, -11, -9, 59, -23, 65, 46, 61, 47, 39, -35, 0, -73, -38, 31, -62, 6, -67, 32, 14, -8, -69, -30, -55, -32, 22, 53, 30, 28, 38, -65, -38, -5, -18, 25, -36, -41, 64, -4, -67, 7, 32, 26, -67, -44, -41, -71, 20, -13, -28, 29, -60, -38, 62, -63, 38, -6, -31, 27, -25, -27, 55, -3, 62, 61, -48, 60, 5, 23, 72, 35, 21, 54, 48, -39, -64, 63, -33, -30, 7, -8, -48, -70, -12, -47, 47, -13, 14, 28, -38, -13, 29, -38, 69, 67, -74, 71, 15, 5, 55, 41, -69, -65, 65, 17, -54, -31, 11, -21, -39, 50, -66, 28, -24, 59, -67, -74, 17, -3, -40, 51, 33, 29, -46, 67, -59, 43, 71, -42, -6, 24, -17, 0, -64, 67, 24, -32, 50, -47, 46, 5, 31, 63, 14, -34, -10, 33, 45, 30, -57, 53, -27, 19, 11, -13, -38, 24, 18, -63, 60, 6, -64, -3, 17, 9, -62, 37, -53, -59, -40, 57, 42, 10, 54, -1, -20, -19, 13, -20, 15, -8, 6, 44, -73, -28, -63, 54, -5, 69, -70, -41, -3, -2, 10, 55, -28, 59, -64, -61, -59, -48, 28, 9, -17, -29, -44, 2, 39, -42, -19, 36, -12, 8, -56, 4, -41, -68, -23, -60, 35, 68, -37, 67, -56, 51, 43, 55, 20, -21, -43, 69, -4, 9, -54, 71, -58, 61, 56, -19, 9, 11, -43, 58, 3, 29, -10, 62, 25, 27, -57, -60, -63, 68, 36, -46, -43, -19, -25, 51, -59, 59, -63, -73, -38, 61, 59, -25, -39, 18, -9, -42, -2, 23, 71, 31, 54, 30, -28, 52, 50, -53, 1, 55, -67, 4, -61, 53, 28, -44, 28, -72, 25, 54, -38, -52, 72, 52, -35, 50, -48, -63, -43, -18, -6, 63, 37, 14, -14, -15, -44, -61, -57, 21, 22, -32, 23, 6, -74, -9, 51, 53, -31, 54, -15, -40, 72, -20, -53, -56, 45, 19, 24, 22, -35, 47, 19, 8, -17, -3, 58, -8, 19, 21, 69, 64, -62, 48, -47, -23, 1, -54, -31, 51, 25, -59, 39, 7, -20, -8, -72, 11, 41, -48, 65, -22, -21, 34, -46, -19, -43, -63, 28, -70, 6, 0, 18, -43, -28, -42, 60, -47, -27, -44, 56, -11, 26, -47, -59, -51, 12, 17, -50, -71, -36, -45, 29, -54, 59, -16, -48, -71, 70, -2, 8, -27, 37, -31, 69, 73, -61, 56, 16, 10, 36, -65, 39, -14, 30, 28, 4, 74, 35, 14, 57, -44, -42, 54, 7, -28, -32, -27, 48, -43, 38, -70, -11, -11, -25, 23, -34, -23, -31, 18, -27, 25, 4, -64, 74, -35, 31, -70, -43, 17, 2, -20, 26, -21, 12, 73, 61, 36, 55, -73, -59, 65, -46, 36, 74, -65, 15, -26, -20, 46, 49, 20, -71, 61, -55, -14, -33, -19, 35, 37, 29, -60, 3, 17, 60, -50, -19, -36, 68, 12, 11, -46, 62, -57, -38, 74, -36, -32, 41, -44, -68, -31, -16, 72, -41, -69, -54, 40, -61, -53, -36, 70, 55, -16, -17, 46, -67, 59, 24, -73, 42, -63, 1, -70, -27, -32, -39, -24, 63, -64, -29, -63, -30, 11, 71, -1, 8, 72, -30, 3, 51, 2, 46, 58, 15, -15, 12, -17, 16, -38, -65, 54, 51, 26, -26, -52, 1, 61, 59, 51, 59, 72, -55, -26, 38, -2, 24, -30, 7, 67, 66, -8, -65, 8, -4, 50, -12, -62, -5, -42, -16, 39, 37, -21, -50, -73, 27, 49, 69, -32, -66, 54, 7, -21, 0, 43, -60, -34, 49, 48, 21, 5, -7, 40, 45, -20, -72, 47, 57, 28, 27, 31, -43, -33, 52, 60, -52, 65, 67, 51, -41, -46, 8, -29, 23, -6, -42, -46, -23, 58, -48, 11, 71, 46, -14, -54, 42, -43, 21, 51, 41, 64, 20, 26, 67, 6, -67, -49, 62, 32, 54, -68, -15, 68, 72, -65, -11, 23, 18, -20, 6, 57, -15, -72, 64, 6, 56, -70, -22, -13, -48, 30, -33, 45, -28, -7, 19, 38, -19, -54, -65, -20, 50, 62, 65, 62, 36, -66, -53, 57, -56, -63, 1, 9, -43, -8, 17, 71, 33, 63, 73, 30, 22, -38, -27, 54, 24, 35, 38, 43, -56, 9, -67, -16, -5, -29, 69, 39, -42, 55, 70, -60, -16, 12, -40, 32, 57, -11, 51, 65, 7, -45, -44, -16, -39, -19, 4, -64, -20, -6, -29, -57, 51, 6, 71, -40, 34, -52, 0, -26, 11, 26, 43, 4, -61, 9, -16, 23, -19, 45, -13, -63, 48, -58, -43, -61, -52, -2, -14, -16, 25, -44, -36, -66, 53, -6, -70, 19, 59, 4, 51, 61, 16, 67, 2, 2, -67, 49, 24, -68, -65, -64, -43, -64, -58, -45, 52, -38, 34, 27, -5, 1, 13, 43, -5, 22, -62, -70, 30, -49, -35, -18, -30, -54, 65, 5, 6, -12, -37, 21, -23, 40, 8, 11, -46, 45, -54, 1, 9, 22, 22, -35, -36, -72, -20, 58}

#define ADD_CONV2D_KERNEL_0_SHIFT (9)

#define ADD_CONV2D_BIAS_0 {44, -96, -82, 56, -52, 24, 76, -34, 62, 99, 73, 16, -60, 23, -81, -85}

#define ADD_CONV2D_BIAS_0_SHIFT (8)

#define BATCH_NORMALIZATION_KERNEL_0 {94, 91, 90, 92, 92, 91, 92, 91, 91, 91, 91, 91, 91, 92, 93, 91}

#define BATCH_NORMALIZATION_KERNEL_0_SHIFT (7)

#define BATCH_NORMALIZATION_BIAS_0 {73, 75, 74, 74, 75, 74, 74, 75, 74, 73, 74, 75, 75, 75, 75, 75}

#define BATCH_NORMALIZATION_BIAS_0_SHIFT (7)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0
#define BATCH_NORMALIZATION_OUTPUT_SHIFT 1

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif
#define BATCH_NORMALIZATION_OUTPUT_RSHIFT (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_OUTPUT_SHIFT)
#define BATCH_NORMALIZATION_BIAS_LSHIFT   (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_BIAS_0_SHIFT)
#if BATCH_NORMALIZATION_OUTPUT_RSHIFT < 0
#error BATCH_NORMALIZATION_OUTPUT_RSHIFT must be bigger than 0
#endif
#if BATCH_NORMALIZATION_BIAS_LSHIFT < 0
#error BATCH_NORMALIZATION_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};
static const int8_t batch_normalization_weights[] = BATCH_NORMALIZATION_KERNEL_0;
static const nnom_weight_t batch_normalization_w = { (const void*)batch_normalization_weights, BATCH_NORMALIZATION_OUTPUT_RSHIFT};
static const int8_t batch_normalization_bias[] = BATCH_NORMALIZATION_BIAS_0;
static const nnom_bias_t batch_normalization_b = { (const void*)batch_normalization_bias, BATCH_NORMALIZATION_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[4096];
static int8_t nnom_output_data[4096];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[4];

	new_model(&model);

	layer[0] = Input(shape(16, 16, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(BatchNormalization(16, &batch_normalization_w, &batch_normalization_b), layer[1]);
	layer[3] = model.hook(Output(shape(16, 16, 16), nnom_output_data), layer[2]);
	model_compile(&model, layer[0], layer[3]);
	return &model;
}
