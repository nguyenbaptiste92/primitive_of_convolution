#include "nnom.h"

#define GROUP_CONV2D_KERNEL_0 {-38, 73, 51, 80, 32, -56, 5, -35, -57, -43, -56, 82, -85, -82, -14, 35, -75, -62, 39, -43, 56, -13, 16, 49, 20, -80, 12, 81, -17, -32, -8, 47, -48, -84, 30, -33, -46, -26, -60, 60, 21, -70, -41, -39, 45, -64, -56, -63, -76, 66, 9, 85, 15, 46, 17, -7, -1, 6, -25, -45, 34, 5, -33, -61, -3, -16, -7, -4, -9, -59, -50, -34, 15, -53, 73, -80, 34, 23, -6, -36, 6, -48, -16, 73, -20, 49, 39, -56, -11, -57, 2, 67, 36, -31, -35, 61, 69, 26, -21, -71, 3, 39, 72, -30, -10, 21, -57, 8, -69, 2, 62, 66, 4, 9, 54, -73, -67, 39, -81, 18, -45, -8, 7, 68, 42, 41, 77, 56, -75, 62, -19, -48, 12, 76, -71, -7, 79, 73, 28, -76, 31, 54, -57, -62, 22, -65, 2, -61, -16, -9, -53, -32, -54, 5, 11, 28, -27, -65, -49, -71, -47, 7, 83, -70, -3, -28, 59, 25, -68, 83, 17, -10, -12, -82, 44, 16, -12, 12, -84, -29, -53, 76, 30, -9, -45, 34, 27, -50, -56, 85, -26, 83, -12, 22, 65, -19, -50, -35, 44, -51, -5, 84, -51, -38, 16, 27, 69, -82, -22, 77, 57, -17, 69, 61, -16, -5, -81, 13, -42, -28, -14, 34, 57, -62, 62, -14, 50, 31, 26, 84, 61, 11, -6, 48, -82, 30, 7, -14, 52, 36, 16, 74, -78, 49, -24, -77, 26, -22, 41, -42, 45, 17, 40, 67, 14, -2, 27, 35, -68, 48, 55, -62, -21, -58, 59, -76, 40, 5, 56, -38, -28, 69, -71, -13, -20, -53, -44, -51, -51, -13, 20, 73, 66, 52, 59, 0, 15, 4, 28, 27, 66, 84, -34, -4, 2, -78, -74, 55, 14, 53, -10, 4, 23, -18, -55, -25, 36, -84, -74, -31, -11, -72, -38, -32, -54, 21, 21, 54, 17, 45, -4, -19, 51, 72, -3, -30, -24, 35, 48, -63, 69, 20, 35, 26, -36, -66, -42, 40, 13, -52, -66, 73, 70, 74, -83, 19, 50, -85, 52, -6, 75, 58, -33, 13, -66, -33, 4, 11, -20, 76, -44, 46, -64, 28, -63, 52, 17, -72, -18, 13, 33, 8, 82, 71, 51, 13, 21, -78, -46, -18, -84, -4, 80, -68, 16, 30, 36, -41, -24, -74, -18, 31, 8, 48, -20, 81, 2, 17, 41, -20, 59, 39, -18, 47, -61, -84, 9, -26, -22, 57, -80, 41, -4, 76, 12, -69, 34, 4, 30, 59, 9, -37, -32, 41, -63, 50, -44, 6, 45, 55, -77, -77, 69, -4, 81, -9, -38, -56, 61, -35, -17, 5, -49, 11, -31, -14, 0, -50, 40, -61, -57, 59, 36, 2, 31, -4, 48, -20, -34, 29, -1, 34, -35, -34, 23, 38, -66, 40, 83, -61, -56, 66, -1, 12, 25, 48, 26, 14, 6, -8, -24, -32, -56, -21, 4, -81, -51, 57, -19, 78, 7, -39, -8, 85, 15, -50, -37, 68, -63, -29, -71, -1, -84, -37, 44, 14, 31, -8, 81, -81, -20, -72, -6, 7, 65, -19, -53, 46, 5, -76, 46, 26, 20, 2, 64, -12, 5, 24, 1, 40, 7, 68, -3, 72, -3, -39, 66, -17, 78, -14, 3, -21, -74, 15, 77, 7, -70, -62, -23, -43, -42, -48, -57, -8, -30, -35, 72, -18, 70, 72, -10, 42, 56, 13, -4, 51, -67, -47, -77, 37, -34, -37, -50, -36, -39, 1, 59, 20, -72, 48, 48, 85, -28, 67, 64, -65, 39, 35, -41, -25, -64, 49, -54, 79, -29, 51, -19, -44, -32, 57, -80, -41, 4, 50, 21, 43, 28, -22, -63, 49, 44, -27, 64, -8, 68, -14, 58, -7, 0, -81, -22, -32, 21, 8, 79, 60, 9, 82, 66, -73, -65, 23, 56, 39, 60, -60, -69, 35, 24, -74, -24, 52, -66, -66, -57, -70, 33, 67, 73, -60, -83, -73, -2, 49, -5, -2, -74, 5, -3, -32, -62, 84, 55, 58, -52, 18, 76, 9, -7, 6, 79, 47, -40, 60, -71, -38, 14, -18, -58, -25, 54, -57, -18, -61, 8, 59, -66, -85, 72, 33, -36, 70, 40, 37, 22, -34, -29, -81, -9, 82, -41, 68, -64, 2, -4, -81, -63, 5, 22, 44, 16, 4, -64, 3, -48, -12, -47, 46, 28, 80, 83, -28, -14, 3, -72, 73, 26, 78, -74, -78, 7, 75, -15, 5, -66, 57, 24, -10, 31, 1, 81, 78, 40, 45, 7, 69, 48, -67, -47, 53, 8, -7, 36, 26, -83, -76, -32, 2, 39, 44, -8, 57, -16, 26, -15, 28, 70, -55, 79, 1, -63, -25, 75, 65, 6, 77, 50, -19, 27, 24, -69, -34, -32, -4, 60, -25, -34, 29, -66, -39, -78, 38, 35, -41, -83, -38, 45, -67, 48, -4, -27, 23, -3, 74, 17, 50, 35, -18, 61, -66, -20, 74, 12, 31, -16, 60, -51, 11, -1, 9, -34, 31, -1, 28, 85, -55, -27, 75, -25, 11, 30, -45, -40, -71, -17, 58, -62, -54, -39, 8, -81, 20, 81, 63, 40, 19, -71, -5, 35, 3, 80, 0, -5, -12, 30, -58, 64, -43, -19, 41, -70, -3, -8, -62, -30, 1, -68, -23, 19, 50, -9, 78, -77, 11, 80, 41, 35, 23, -41, 30, -21, -44, -72, -30, 0, -83, 53, -2, -6, -50, -68, -80, -27, 83, 78, 20, 68, 81, -3, -63, -76, -30, 85, -39, 70, 21, 37, 22, -50, 59, 50, -40, -5, -24, 16, 59, -23, 38, -63, 71, 51, -22, 38, -64, 80, 34, -58, -72, -60, 17, 34, -21, 56, 73, -31, 18, -57, 13, 70, -59, -7, -70, -36, -15, 46, 84, -20, -84, -82, -50, 69, -48, -43, 80, 11, 75, -49, 26, -22, 66, 13, 62, -73, -66, -35, -18, 73, -43, 13, 13, 57, -48, 61, 48, 44, -9, -47, -67, -85, 53, -71, 18, 84, 32, 64, -70, -55, -85, -78, -85, -2, -16, -56, -58, -37, 60, 6, 37, 80, 52, -21, 17, -28, 36, 76, -70, 72, 69, -52, -29, -36, -62, 53, 31, 80, 62, 48, -83, -7, -19, -69, -42, 52, -47, -2, 74, -1, -30, -49, 30, -10, -77, -55, -9, 20, 1, 73, 41, -62, -48, -27, -8, 74, 43, -39, -71, 40, 45, -6, -70, -21, 10, 25, 79, 4, 78, 84, 23, -21, 37, -10, -18, 40, -21, -23, -84, 60, 50, 11, -54, 18, 43, 80, -25, 8, 72, -56, -79, 40, -55, -4, -19, -44, 67, 30, 66, 6, -2, 65, 56, -43, -85, -29, 59, -17, 77, 73, 12, -6, 53, -62, -36, 71, 18, -75, 39, 45, -44, 39, -81, 53, 3, 32, 72, -66, 18, 77, 47, 34, 29, 15, -36, 47, 23, -43, 15, 76, 41, 81, 69, -17, -75, -18, -41, -19, 64, 5, -10, -71, -53, -66, -8, -56, -21, 47, -81, 71, -68, 31, -59, 30, -22}

#define GROUP_CONV2D_KERNEL_0_SHIFT (9)

#define GROUP_CONV2D_BIAS_0 {-40, 94, 67, -28, 78, 90, 19, -74, 32, -33, -94, 69, 26, -85, 67, 78}

#define GROUP_CONV2D_BIAS_0_SHIFT (8)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define GROUP_CONV2D_OUTPUT_SHIFT 6

/* bias shift and output shift for each layer */
#define GROUP_CONV2D_OUTPUT_RSHIFT (INPUT_1_OUTPUT_SHIFT+GROUP_CONV2D_KERNEL_0_SHIFT-GROUP_CONV2D_OUTPUT_SHIFT)
#define GROUP_CONV2D_BIAS_LSHIFT   (INPUT_1_OUTPUT_SHIFT+GROUP_CONV2D_KERNEL_0_SHIFT-GROUP_CONV2D_BIAS_0_SHIFT)
#if GROUP_CONV2D_OUTPUT_RSHIFT < 0
#error GROUP_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if GROUP_CONV2D_BIAS_LSHIFT < 0
#error GROUP_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t group_conv2d_weights[] = GROUP_CONV2D_KERNEL_0;
static const nnom_weight_t group_conv2d_w = { (const void*)group_conv2d_weights, GROUP_CONV2D_OUTPUT_RSHIFT};
static const int8_t group_conv2d_bias[] = GROUP_CONV2D_BIAS_0;
static const nnom_bias_t group_conv2d_b = { (const void*)group_conv2d_bias, GROUP_CONV2D_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[1024];
static int8_t nnom_output_data[1024];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[3];

	new_model(&model);

	layer[0] = Input(shape(8, 8, 16), nnom_input_data);
	layer[1] = model.hook(GroupConv2D(16, 2, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &group_conv2d_w, &group_conv2d_b), layer[0]);
	layer[2] = model.hook(Output(shape(8, 8, 16), nnom_output_data), layer[1]);
	model_compile(&model, layer[0], layer[2]);
	return &model;
}
