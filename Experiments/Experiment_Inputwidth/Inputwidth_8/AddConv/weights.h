#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {-59, 33, -26, 52, 72, -20, -50, 22, -11, 10, -13, 72, 66, -67, 10, -2, -5, -38, -49, 64, -57, -31, 5, 9, 14, 21, 50, -54, 69, 59, 34, 25, -37, -17, 9, 42, -55, 21, -17, -68, 2, -1, 4, 68, 70, 54, -11, -32, -16, 11, -55, 8, -72, 49, 32, 21, 70, 16, -17, -9, 28, -39, 25, -23, 72, -8, 11, 22, -44, -33, 12, 43, -16, 56, -50, 26, 60, 26, 52, -29, -35, -49, -52, -22, 65, -29, -63, 33, 69, 64, -58, -46, 19, 73, -3, -47, 33, -48, 8, 8, 66, 19, -45, -10, 8, -57, 53, 27, 14, 0, 28, -16, 57, -52, 36, 19, 2, -17, 17, 60, -7, -47, 21, 11, 71, 63, 19, -5, -44, 4, -40, 69, 51, 57, 13, -11, 53, -25, -60, 36, -56, -43, -34, 8, -9, -39, -34, 63, -6, -55, -49, -5, 50, -63, 45, 45, -59, -43, 29, -8, 50, 37, 46, -1, -64, -15, -46, -50, -68, 14, -74, 3, -22, -59, 58, -62, -56, -55, 24, 21, -45, -22, 70, -15, -22, 43, 7, -53, -48, -65, -65, 34, 68, -3, 29, 5, 5, 1, 65, 40, -59, -67, -38, -74, -27, -5, -13, 72, 9, 9, 25, 18, -38, 64, 2, -8, 9, 38, 45, -37, -47, -66, 47, 71, -42, -58, 57, 69, -24, -71, 10, 67, 33, 49, 64, 14, -50, 29, -35, -61, -10, 23, -4, -53, 3, -44, -32, 17, 70, 68, 66, -34, 29, 18, -4, -50, -17, 26, -32, -26, -60, 36, 30, -32, -29, 11, 46, -48, -58, -14, -16, 73, 52, -54, 58, 3, -29, 15, -41, 22, 14, -13, 47, 7, -8, -2, -51, -39, -38, 39, 32, 38, 23, -67, -18, 45, 44, -1, -49, -51, 37, -29, 45, -53, 13, 37, 55, -47, 56, 68, 63, 42, 40, 10, -27, 35, 25, -67, 73, 35, 36, -53, -53, -21, 13, 37, -30, 13, -7, 24, 21, -73, 51, 37, -3, 62, 54, -40, 70, 59, 34, 53, -66, -60, 57, 17, -40, -43, 68, 39, 51, -35, -29, 28, 0, -9, 52, -19, 38, 8, -15, -42, 45, 51, -41, 40, 6, -70, 2, -33, -54, 29, -22, 67, -72, -2, -45, -14, 33, -5, 50, -22, -48, -65, -66, -74, 66, 17, -46, 33, 64, 23, 39, -4, -37, 50, 12, 70, -32, -24, -55, 3, 59, -27, 34, -36, -14, -66, -63, -71, 10, -37, -4, -27, 49, -13, -52, -26, 36, -66, -4, 54, 72, -51, 24, 73, 44, -6, 67, 27, -28, -1, -62, 26, -29, -10, -60, -2, 61, 18, 10, 8, 30, 33, 29, 54, -45, 7, -21, 72, 53, -38, 29, 53, -29, -1, -17, 31, 68, -71, 54, -55, 35, 43, -36, 23, 67, 71, -72, -63, 64, 19, -8, -9, 38, 20, -17, 48, -32, -53, 25, -37, 67, 34, -66, -40, 45, -7, -18, 36, -62, 40, 39, 48, -51, -6, 73, -55, -16, 47, 22, -29, 46, 67, -55, -19, 45, 24, 0, 41, -56, -32, 67, 25, -69, -50, -33, 17, 45, -57, 73, -37, -71, 42, -29, -18, 56, -50, 72, 70, 61, 56, 34, -13, 18, -1, 1, -39, 9, -73, -6, 17, -54, -15, -18, -40, -50, 71, 62, 26, 4, 13, 28, 3, 29, 24, 55, 60, 38, -53, -67, 28, -64, -39, 65, 62, -9, 24, 19, 72, 19, 21, 46, 2, -45, -47, -7, -53, 47, -4, 49, 63, -17, 21, -67, -34, -1, -3, 70, 6, 31, -48, -25, -43, 17, -3, -8, 73, -59, -30, -68, 5, -69, 58, -32, 40, 40, -10, -39, -33, -24, 60, -48, 20, -7, -30, -23, 9, -11, -19, 38, -64, -13, 13, 57, 39, 0, -22, 9, -36, 56, -35, 45, -57, -38, -67, -11, -5, 18, -35, 59, -14, -36, -12, -12, 8, 53, -36, 34, -19, -63, 22, 65, -71, -21, 67, 71, 58, -50, -8, 39, -55, 44, -32, -35, 17, 60, 43, 68, -67, 7, -51, 72, -47, -69, -8, 15, -56, 72, 50, 29, 31, -45, 55, 62, 73, 21, -67, 40, 32, -16, -62, -10, -3, -56, -37, -49, -34, -74, 22, -69, 47, -37, -65, 33, -22, -16, -45, -41, -10, 30, 59, 4, 36, 5, -41, 62, 55, 15, -33, -25, -35, -73, -54, -43, 53, -71, 47, 61, 55, -40, 57, 12, 21, 54, -63, 29, -58, 8, 64, 24, 54, -14, 30, 61, -49, 22, -64, -34, 54, 38, -13, -2, 7, 48, -66, -44, 47, 40, 46, 40, -18, 31, 41, 50, 20, 17, -40, 52, 46, -10, -33, -34, 66, -48, -41, 69, -9, -58, -52, -54, 47, 54, 68, -21, 40, -69, 16, -12, 19, -41, 51, -24, -63, 42, -45, -49, 66, -17, 35, -20, -51, 72, 62, -15, -56, 48, 60, -64, -19, 45, 13, 4, 49, 2, -35, -70, -6, -50, -72, 9, -39, 64, 68, 52, -58, -26, 55, -26, 21, 4, -18, 68, -11, 44, -9, -5, -19, -15, -37, -65, -60, 60, -46, -68, -44, -13, 33, -54, 20, -74, -59, -66, 12, 48, -58, -28, 4, 45, 56, 73, -73, -18, -59, 38, -25, -15, -67, -2, -62, -52, 7, -51, -2, -45, 8, -28, -68, -8, 72, -4, 14, 5, -50, 28, -71, -29, 24, 28, -2, -10, -8, 47, -70, -71, -68, -43, -43, 12, 8, 11, -46, 6, -61, -43, 1, 28, -37, -13, -46, -7, 56, 55, 11, 44, -12, -27, -34, -66, 3, 62, 72, -48, -33, 63, -6, 1, 17, 0, -12, -25, -28, 57, 72, -21, 8, -15, -46, 23, 16, -22, 51, -32, 38, 3, 63, 25, 58, -16, -69, 19, -48, -73, -17, 34, -15, 52, 30, 21, -26, 50, 58, 15, -27, -59, -12, 11, -23, 28, -27, 70, 35, 8, -51, 50, 62, -70, -30, -66, 57, -2, 47, 8, -69, 16, 1, -58, -15, -35, 32, 18, 7, -29, -25, 16, -53, -49, 60, -30, -37, 23, -73, 34, -46, 33, -16, -14, 32, 33, -71, -2, -72, -51, 26, 8, 63, -12, 42, 4, -64, -66, 42, 60, 46, -70, -59, -66, 65, 36, -49, 48, 64, -57, -26, 65, -8, -6, 40, 73, 65, -8, -45, 20, -33, 5, 4, 5, -38, -45, 25, 46, 62, -53, -58, 67, -6, 53, -11, -20, 32, 27, -25, -46, -11, 19, -6, -34, 12, 37, 32, -41, -38, -3, 28, -22, -33, 4, 19, 14, 49, -66, 43, 67, -48, 48, -3, 44, 3, -37, -1, -62, 46, 8, 73, -71, 4, 23, -73, -15, -21, -74, 66, -12, 50, -40, 63, 72, 67, -50, -20, 6, 64, 32, 52, 19, 46, 34, 58, -30, 49, 57, -10, 60, 32, -3, 26, 22, 14, 69, -20, 32, 63, -71, -9, 72, -69, 71, -63, -43, 52, -67, 37, 28, 33, 62, 55, -36, -49, 21, -73, -71, -40, 59, -72, -65, 1, 64, -24, -67, -32, 4, -58, 22, -69, 69, 39, 19, 53, 28, -13, 5, -57, 60, -37, 64, -72, 40, 36, -41, 5, -16, 61, -70, -25, -39, -58, 66, 33, 29, -39, -30, 26, -30, -73, -7, -62, 24, 22, -21, 34, -72, 6, 59, -47, -34, -69, -25, -44, -69, -14, 45, 10, -69, -38, 14, -74, -60, 40, 27, -10, -65, 39, 63, 23, -30, 60, 36, -22, -68, 55, -52, 33, 19, 45, -17, -36, 68, -33, 7, 16, -9, 28, -24, -19, -58, -72, 27, -28, -58, 11, 73, -49, -11, -5, -19, -15, 72, -37, -21, 15, -53, -65, 6, 50, -52, 49, -12, 28, 30, -30, -26, -41, 19, -63, -38, -13, 63, 51, 22, 38, 18, -31, 12, 26, -48, -25, -72, 51, 25, -2, 4, 18, 34, -34, 72, -1, 71, 20, -20, -12, 72, -13, 30, -35, -3, 21, -13, 28, 66, -16, 49, 8, -51, -38, -12, 73, -41, 50, -32, 6, 32, -42, -1, -9, -60, -42, 18, 40, -49, -61, 22, -32, -63, 42, -12, -74, 72, -60, -44, 36, 33, -15, 48, -37, -28, 13, -43, 41, 20, -17, 63, 47, 69, 69, -35, 35, -73, 46, 32, -53, 61, -4, 54, -12, 56, 64, -13, 45, 36, 60, 72, -20, 66, -20, -69, 28, -23, -44, 69, 29, 45, 38, -64, 61, -68, 73, -54, 56, 29, -18, -50, 9, -65, 51, -40, 73, -9, -16, -23, 38, 28, 43, 13, 46, 7, 66, -42, 58, 55, 66, 38, -9, -66, 41, 28, 66, -55, -71, -58, -8, 42, -45, 66, -19, 2, -22, -22, -51, 25, 45, -63, 67, 27, 42, 15, 20, 63, -31, 53, 73, -55, 25, 24, -14, -27, 31, -5, -13, -46, 58, -72, 32, 42, -21, -29, 51, 62, -27, -44, 3, 45, 37, -33, -60, -49, 37, 21, -43, -25, 29, 19, 28, 1, -23, -46, -46, 25, 6, 35, 6, -10, 49, 57, -45, -68, 61, 50, -52, 34, -2, 19, -53, 23, -11, -1, -42, 11, -54, -50, -48, 5, 41, 55, -68, 45, -73, -15, 12, 47, 11, -51, -69, -31, 48, -66, 6, 8, -50, -36, -56, -50, -74, -28, -8, -40, 46, -38, -51, 5, 43, -47, 39, 51, -39, 25, -69, -57, 53, -73, 61, 70, 55, 13, -74, -61, 50, 54, 46, -40, -12, 30, 47, -1, -47, 47, 0, 65, 13, -29, -20, -19, -16, 8, -7, 10, 41, 11, 11, 9, -13, -53, 54, -56, 19, -21, -29, 58, 44, -16, 41, -72, 42, -15, -51, 44, -18, 45, 9, -43, -27, -36, -9, 31, 59, -14, 17, 58, 28, 21, 31, 42, 24, -29, 5, -28, 27, -37, -49, -73, -46, 16, 68, -31, 21, -63, 15, -37, 35, 10, 9, 56, -68, -40, 44, -13, 38, -19, 17, -32, -20, -64, -49, -5, 47, -21, 63, -67, -51, 36, 37, -2, -60, -21, 40, 72, -17, 67, 15, 46, 11, 63, 42, 16, -38, 7, -31, -2, 30, 53, 24, -20, -49, -40, -56, -31, 25, -21, -56, 10, -41, 48, 70, -48, -5, -18, -63, -6, -34, 50, 38, -43, -56, -72, -9, 55, -65, -11, 30, -6, -68, -60, 39, -1, 51, 28, -9, 17, 3, -56, 21, -19, -45, 16, -6, -23, -53, -26, -15, 57, -12, -24, -52, 47, 44, 36, -35, 2, 58, -13, -68, -69, 7, -7, -23, 63, 10, 3, -15, -36, -72, 27, -54, -52, -57, -69, 44, -66, 7, 17, -18, 53, 70, 53, 30, -50, -66, 49, 5, -1, 64, 50, -2, 40, 1, 62, -11, 17, -24, 43, 12, 43, 74, -73, -44, 61, 7, -56, 41, -3, 28, 39, -5, 36, 44, 58, -14, 16, -45, 44, 30, 59, 5, -27, -26, 69, 66, -47, -21, -43, 12, 62, -73, 20, -40, -14, -1, -20, 16, -14, 12, -58, 37, 34, 62, -19, 65, 13, 66, 12, -10, 8, 49, 22, -16, -9, -34, -33, -18, 27, -66, 61, -21, -23, 32, -44, -5, -19, 60, -32, -26, -61, -49, 50, -28, -8, 35, 73, -18, -3, 49, -16, -7, -61, -49, -51, 47, -29, -63, -6, 28, -40, 55, -12, 51, -19, 27, 33, 34, 52, -43, -8, 2, 68, -35, -73, -58, -30, 46, -50, -56, -32, 26, 40, 8, -28, 57, -70, -26, 60, -71, 63, 21, -69, -6, -10, 56, -34, 73, 70, -14, -45, -34, -22, 45, -23, -44, -59, 60, 36, 57, -65, -2, 27, 42, 37, -56, -4, 6, -63, -46, 36, -67, -59, 44, 54, -12, -62, 32, 50, -70, 38, 70, -7, 9, 67, 71, 6, -68, 39, 43, -71, -41, -14, -27, -27, -28, 12, -54, 17, 54, -10, -46, -12, -67, -12, -69, 8, -6, 5, 17, -34, 40, 6, 56, -27, 66, -39, 31, -26, -5, 29, 13, 38, -46, -73, 11, 24, 66, 44, 3, 36, -74, 51, -18, 10, -20, 36, 36, 68, -7, 38, -31, -28, -45, -64, -11, -27, 6, -31, 10, -34, 61, -16, -23, -21, -57, -17, -38, -52, 63, 6, 57, 16, 23, 35, -55, 27, 2, 24, -65, -54, 14, 40, 16, -52, 14, -63, -49, 66, -8, 50, -59, 26, 33, -38, -53, -69, 21, -57, -38, -44, -43, -39, 19, 73, -11, 48, 67, 12, -32, -23, 34, 67, -22, -59, -22, -40, -17, -62, 30, -32, -8, -13, -24, 32, 53, -12, -62, -51, -24, 44, -71, 55, 16, -38, 61, -70, -53, -70, 73, -56, 12, 26, 13, -5, -7, -68, -50, -7, 57, 20, 52, 22, 23, 4, -63, -23, 11, 14, -48, 73, 53, -9, 11, -39, -23, -69, -39, 33, -35, 56, -14, 49, 17, -54, -37, 36, 34, 31, -7, -46, -53, -19, -28, 44, 34, -48, 42, -2, -23, 11, 14, 51, -72, 45, 56, -35, -33, 64, 38, 72, -73, 15, -4, -31, 62, -55, -47, 34, 65, -22, 63, -37, 18, 73, -36, -42, -29, 43, -37, -37, -7, -17, -13, 33, -29, -24, -33, 6, -35, -18, 70, -58, -1, 45, 32, -49, -38, 5, -30, -54, 3, 12, -15, 27, -10, 56, -22, -38, 14, -7, 13, -20, -57, -28, 60, -16, -20, -27, -51, 64, 22, 44, -10, 73, -17, -60, 48, 42, -73, 59, 68, 72, -66, -9, -60, 39, -25, 23, -59, -21, -68, -31, -6, -56, 37, 51, -55, 54, -36, 42, 29, -27, 22, -5, -27, -72, -34, 35, -58, 6, -9, -55, -65, 3, -5, -29, 30, -6, 66, -24, -11, -22, -1, 48, 60, -3, 19, -73, -38, -38, 63, -29, 60, 9, -44, 53, 17, 39, -13, 24, 26, -11, -51, 53, 10, 52, 10, 40, 48, 19, -41, 20, -31, 24, 8, 72, -10, -49, 47, -6, -20, 6, -15, 1, -51, -15, -63, -62, 2, 64, 37, 6, 45, -5, 25, -27, 59, -55, -73, 35, 15, -26, -32}

#define ADD_CONV2D_KERNEL_0_SHIFT (9)

#define ADD_CONV2D_BIAS_0 {-90, -6, -60, -15, 73, 60, -80, 13, -26, -14, 10, -110, -78, -111, -104, -19}

#define ADD_CONV2D_BIAS_0_SHIFT (8)

#define BATCH_NORMALIZATION_KERNEL_0 {82, 81, 83, 83, 82, 83, 80, 83, 81, 84, 82, 81, 82, 82, 81, 82}

#define BATCH_NORMALIZATION_KERNEL_0_SHIFT (7)

#define BATCH_NORMALIZATION_BIAS_0 {63, 64, 64, 64, 64, 65, 64, 64, 64, 64, 65, 64, 64, 65, 64, 64}

#define BATCH_NORMALIZATION_BIAS_0_SHIFT (7)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0
#define BATCH_NORMALIZATION_OUTPUT_SHIFT 1

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif
#define BATCH_NORMALIZATION_OUTPUT_RSHIFT (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_OUTPUT_SHIFT)
#define BATCH_NORMALIZATION_BIAS_LSHIFT   (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_BIAS_0_SHIFT)
#if BATCH_NORMALIZATION_OUTPUT_RSHIFT < 0
#error BATCH_NORMALIZATION_OUTPUT_RSHIFT must be bigger than 0
#endif
#if BATCH_NORMALIZATION_BIAS_LSHIFT < 0
#error BATCH_NORMALIZATION_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};
static const int8_t batch_normalization_weights[] = BATCH_NORMALIZATION_KERNEL_0;
static const nnom_weight_t batch_normalization_w = { (const void*)batch_normalization_weights, BATCH_NORMALIZATION_OUTPUT_RSHIFT};
static const int8_t batch_normalization_bias[] = BATCH_NORMALIZATION_BIAS_0;
static const nnom_bias_t batch_normalization_b = { (const void*)batch_normalization_bias, BATCH_NORMALIZATION_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[1024];
static int8_t nnom_output_data[1024];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[4];

	new_model(&model);

	layer[0] = Input(shape(8, 8, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(BatchNormalization(16, &batch_normalization_w, &batch_normalization_b), layer[1]);
	layer[3] = model.hook(Output(shape(8, 8, 16), nnom_output_data), layer[2]);
	model_compile(&model, layer[0], layer[3]);
	return &model;
}
