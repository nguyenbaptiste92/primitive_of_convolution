#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {50, -56, -43, -39, -71, 64, 50, 23, 17, 49, -1, 38, 32, 22, -58, -73, -2, 36, -44, -50, -39, -71, -48, -24, 45, 70, -61, 58, -21, -30, -30, 24, -59, 34, 13, -61, 47, 37, -61, 0, 21, -19, -12, -23, 5, -64, -46, -55, 1, 53, -31, 29, -43, -34, -42, 72, 15, -17, 54, -57, -25, 18, -39, -16, -43, -37, -52, -72, -50, 53, 63, -53, 29, -19, 26, 25, -17, -3, 58, -21, 42, -9, 43, -67, -23, 56, 53, 8, -45, -63, -49, 0, 15, 26, -53, -23, -43, -32, 9, 34, 34, -70, 15, 30, -29, -24, -60, -31, -44, 56, 50, 16, -22, -27, -54, 68, -48, 3, -63, 11, 53, -55, 3, 15, -28, 10, 29, -13, -22, 26, 73, -52, 28, -32, -56, -49, 64, -6, -6, 2, 66, 64, 2, 30, 39, 22, -74, -49, 32, 18, 62, -2, -45, 38, -65, 55, -54, -59, -12, -51, -26, -7, -13, 30, 13, 60, -57, -40, 11, 55, -57, -18, -13, 42, -61, 29, 0, -45, -20, -49, -51, 47, -37, 48, -40, -40, 46, -15, -65, 24, 67, -15, 35, 61, 7, -19, 35, 59, 33, 49, -15, -53, 26, 15, 10, 58, 10, 56, 0, -18, 29, 15, -27, -70, 8, -14, -6, 6, -10, 23, -24, -60, 39, 9, 60, -68, 50, -14, 10, -69, 61, 64, 12, 12, -67, 64, 37, -18, -7, -9, 20, 28, 26, 42, -66, 7, 8, 21, -9, -53, 35, -67, 23, 61, 0, 19, -35, 60, -68, 18, 32, -46, -63, -65, -57, -38, -54, 3, 2, 38, -10, -21, -29, 53, -45, -42, 47, -32, -16, -40, -46, 71, -67, -29, 46, 52, 0, 36, -64, -67, -32, -58, 2, -35, -14, -42, 69, -20, -17, -71, -5, -64, -32, 33, 61, 18, -24, -9, -53, -61, 68, -14, 50, 71, 66, 47, -61, -43, -58, 32, -30, 9, 63, -68, -35, 29, 58, -48, 65, 29, -33, -44, -21, -62, 53, -65, -72, -34, -54, 53, 64, -54, 24, 57, 69, -64, -52, -51, -25, -24, -53, 66, 66, -11, 30, -2, 5, -39, -35, 34, -31, 44, -59, -52, -11, -5, 6, -70, -60, 65, 72, 16, 26, 35, 10, -16, 64, 59, -42, -10, 11, -37, -9, -5, 23, 65, 3, -40, 0, 40, 69, 31, 15, 15, 7, -73, 33, 47, 20, -28, 15, 36, 13, -14, -3, 6, -10, 55, -68, -72, 53, -43, 5, 56, -28, -57, 9, -60, 7, -22, -44, -54, 55, -3, 6, -55, -68, 63, -49, -30, -31, 4, 14, -65, 62, -37, 71, 56, -30, 72, -58, -35, 70, 38, -56, -46, 52, 17, -18, -5, 16, 12, 73, 66, 66, -44, -44, 68, -38, -10, 24, 56, 10, -45, 22, -19, 70, 38, -1, -30, 44, 55, -60, -48, -71, 15, -67, 23, -50, 40, 34, 8, 51, 28, -48, -4, 58, -36, -44, 48, 15, -1, 11, -6, 33, -51, -17, -10, 6, -70, -19, 39, -68, -71, -46, 6, -12, 41, -36, 24, -42, -56, 21, 36, 49, -23, -64, -50, -72, -54, -42, -8, 59, -64, 24, 67, 60, 40, 36, -7, 62, -6, 71, 17, 14, 43, 6, -57, -49, -68, 40, -25, -27, -52, -58, -46, 45, -5, -15, 9, -43, 45, -42, -67, -39, 35, 72, 26, 67, 64, 50, -57, 33, 64, 34, 25, -59, -74, 6, -12, 43, -31, -24, 63, 68, 54, 47, -9, 72, -37, -10, -58, 6, -6, 4, -1, 13, -53, -38, 1, 63, 67, 30, -9, 5, -43, 56, 56, -23, -41, 15, -19, 24, -62, 52, 29, 11, -26, -50, 51, -22, 36, 71, 33, 48, -1, -10, -15, -26, 23, 65, -4, 42, -37, 33, 60, -27, 2, 70, -7, -29, 48, 45, -10, -57, -50, 23, 4, -67, 10, 30, 70, 30, 57, 30, 9, -5, -10, -45, 54, 63, 16, -12, 6, 12, 46, 62, 54, 2, -70, -45, 26, 5, -68, 36, -49, -26, 54, 21, -15, 73, -23, -67, -72, -60, -19, 49, -42, -44, 3, -32, -20, 47, -19, -8, 9, -46, 12, -26, -6, -64, -50, 26, -64, -72, -23, -17, 20, -70, -54, 10, 35, -20, -56, -72, -46, -19, -63, -45, 37, -31, 59, -42, -36, -68, 56, -31, 23, 58, 49, -65, 64, 2, 58, -70, 59, 28, 67, 15, -24, -73, 45, 57, -62, -64, -5, 40, -15, 16, 3, -62, -59, 2, 64, 20, 50, -7, 39, -24, -40, 61, -11, 57, 4, 72, -22, 51, 36, -47, -73, 63, 7, -27, 46, -30, 66, 57, -46, 13, -24, 33, 70, -16, 60, -45, -52, 48, 4, 59, 73, 9, 38, -59, 10, -29, -10, 26, -31, -9, -61, 36, -70, 73, -60, -13, 30, 16, 6, 54, -45, 11, -2, -62, 45, 13, 31, -67, -24, 52, 31, 58, -42, -12, -40, -63, -3, 60, 1, -41, 59, 10, 20, -50, -72, 25, 27, 55, -69, 68, -2, 23, -16, 20, 6, -35, 19, 23, 29, -74, 17, -13, -25, -48, 48, -22, 54, -73, -51, -18, -66, -71, 66, -4, -16, -32, -18, 65, 69, 70, 34, 7, -66, 53, -19, -7, -59, 70, 26, -3, 9, 55, 20, 57, -22, 3, -22, 3, -36, -7, -3, 44, 53, 63, 52, 68, 13, 34, 62, -38, 61, 32, 63, -33, 7, -19, 52, -31, 25, -43, 68, -1, 68, -52, 52, -36, 15, 50, -8, 0, 18, -28, -13, -58, 55, 54, 50, -30, -57, -25, 64, -64, 54, 55, -49, 61, -63, 65, -49, 70, -12, 53, -3, -2, 10, 51, 29, -63, 45, -15, -59, -18, 60, -17, -15, 72, 65, -29, 67, 7, -15, -25, 62, -39, 1, -23, 20, -2, -40, 47, -47, -63, -56, -29, -12, 28, -50, 27, -43, 56, -19, -49, -1, 70, 40, 14, 5, -8, -13, -72, 42, -9, 9, 22, -4, -73, 55, 14, 58, -29, 13, 43, -7, -26, 58, -11, -51, -40, -33, -48, 30, 21, 41, 43, -8, 62, -7, 8, 6, -36, 39, -60, -66, 7, -43, 16, 61, -64, 26, -58, -51, -71, 48, -21, -64, -31, 16, 43, 38, 42, 26, -36, -68, 29, -37, -4, 42, 31, 5, 22, 6, 18, -55, -11, 9, -27, -58, -10, -16, -18, -50, -2, -60, 45, -8, -12, -13, 20, -34, -36, 29, -40, -29, 5, 8, -68, 26, 47, 11, 51, -5, -14, -72, 58, -38, 14, -12, -49, 4, -40, 20, -59, 5, -40, 27, 9, -73, 57, -35, -56, 34, -29, 42, 65, 3, -45, -55, 24, -56, -42, -8, 17, -54, -17, -51, 24, -1, 11, -69, 22, -61, -61, 11, 44, 66, -13, 61, 39, 64, 57, -29, 23, -44, 73, 19, -17, -10, -53, -63, 61, -50, -36, 21, 68, -1, -71, -5, 35, 16, 57, 50, -47, 33, 28, 17, 45, -10, 59, -18, 19, -43, -2, 44, -57, 21, -68, -49, -66, -32, 34, 19, 47, 51, 43, -18, 56, 44, -41, -30, 3, -43, -57, -49, 65, 29, 53, 57, 14, 39, 2, 56, -39, -19, -69, -8, 69, -19, -71, -39, -9, 59, 62, 26, 54, -71, -1, 35, 4, -36, -63, -62, -63, -18, -8, 2, 16, -61, -61, -11, -57, -50, -28, 2, 12, 21, 1, -32, -9, -29, -56, -33, 24, 68, -25, 18, -72, 38, 12, -38, -71, -8, 47, 71, 34, -27, -59, 64, -21, 54, 44, 70, -63, 12, -66, 44, -45, 43, 39, -43, 32, -70, 42, -72, 51, 65, 23, 47, 7, -37, 14, 42, -54, 38, -34, 42, 47, -36, 21, 52, 44, 5, 41, -69, -23, -49, 8, 8, 17, -67, -56, 12, 6, 66, 52, 59, -72, 24, -43, -6, 57, 50, 55, -48, 51, -55, -73, -43, 41, -45, -38, -55, 44, -35, -25, -29, 73, -31, -46, -13, -40, -48, -47, -16, -29, -13, -30, -64, 11, -28, -25, -16, -67, 24, -71, 56, 28, 1, 27, -21, 64, -54, -42, -53, -15, 38, 27, 56, 9, 45, -53, -53, -73, -51, -61, -17, -56, 47, 20, -13, 64, -61, 38, 45, -35, -41, 47, -1, -48, -6, 51, -54, -10, 34, 16, -43, 62, -67, -66, 13, -71, 43, -32, 20, 61, 23, 30, 64, 19, -57, -43, -60, 11, -19, 38, -8, -36, 43, 50, 61, 68, -29, -14, 59, -42, -60, -59, 4, 33, 60, -32, 13, 21, 8, 5, -25, -74, 41, -58, 71, 56, 45, -72, 4, 0, 54, -65, 27, -26, 68, 21, 32, 51, -26, 56, -54, -62, 56, 35, -13, 38, 70, 43, -62, 50, 44, -37, 57, -20, -22, 23, -34, 29, -68, -73, 33, -68, 43, 6, -17, -28, 55, 60, -61, 30, 7, -14, 48, -5, 68, 58, -68, 43, 57, 41, 16, 62, -15, -6, 71, -12, -26, -24, -8, -32, 17, -4, -25, 4, 28, 39, -17, 37, 33, 29, 67, -65, -30, -68, 32, -69, 55, 16, -8, -51, -24, 52, -27, 5, 61, 55, 40, 29, 38, -36, 26, -20, 28, -24, -16, 6, -68, 15, 36, -35, -51, 39, -37, 64, 65, 17, -4, -64, 61, 28, 45, 14, 3, 32, 67, -50, 56, 18, -69, -31, 8, 72, -62, 7, -22, -13, 43, 60, 57, 45, -34, 72, -43, 40, -11, 58, 34, -14, 73, -60, -29, -34, -49, 3, -27, 59, 64, -60, 40, -48, -1, 54, 48, -49, -20, -32, -55, -63, 32, -71, -63, 67, 57, -28, 61, 25, -57, 12, 56, -31, 23, 28, -62, 28, 66, 25, 27, -14, -44, 0, -11, 0, -28, -29, -48, -55, 64, -70, 21, 33, -42, -5, -27, 44, -25, -72, -2, -55, -27, -67, 62, 35, -27, 13, -21, -24, -67, -15, 13, 29, -70, -72, -65, -61, -28, -8, 61, -24, -48, -24, -3, -27, 32, -31, 6, 26, 60, -44, 34, 29, 11, 13, 26, 53, -66, -10, 59, 60, -53, -54, 73, 20, 32, -56, 67, -19, -27, -30, 35, -27, 52, -41, 38, 3, -52, -8, -42, 12, 1, -58, 50, -13, -32, -52, 25, -68, -31, 11, -16, -31, 45, 18, 46, -7, -3, 30, -1, 52, -70, 52, -31, 25, -53, -18, -73, -22, -45, 60, -18, 18, -51, 3, 56, 47, 43, -17, 46, -32, -54, -19, 55, 64, -67, -15, 46, -55, -15, -57, 40, -44, 39, 30, 46, -34, -1, 21, -67, 73, 22, -53, -54, -9, 63, 11, 28, -8, 33, 15, 1, 14, 19, -5, 29, 34, -31, 46, -2, 18, -1, 60, 64, -60, 48, 27, -71, -69, -42, 24, -9, -27, -66, -30, -56, -68, 53, -51, -24, -16, -61, 50, -15, -70, 59, 2, 48, -17, -52, -39, -24, 62, -21, 61, 69, -37, -53, 57, -51, 54, -66, 39, 5, 29, -73, -33, 46, 23, -64, 9, 34, 61, -43, 43, -60, -22, 37, -45, -24, 41, 12, -47, -28, -51, 70, 47, -7, 43, 50, 17, -32, 38, -53, -9, -6, 64, 30, 54, -70, -64, -55, -36, 65, 68, 68, -35, 40, 44, -4, -49, 63, 20, 4, 45, 9, 38, -4, 66, -23, -36, -11, 9, 35, -37, 36, -49, -10, 50, -73, -48, -5, 73, 68, 60, 56, -44, 41, 52, 38, 58, -35, -3, 24, 21, 14, -74, 45, 68, -27, 24, -48, -37, -54, -61, 45, 3, -15, 21, 35, -73, 30, -72, 30, -11, 29, 60, -26, 24, -1, 30, 63, -24, -53, -73, 19, -30, -61, -40, -26, -49, 60, -37, 37, 3, -70, 23, 36, -64, 55, -59, 7, -68, -32, 74, 45, 8, 12, -41, -23, -44, 55, 38, 72, 27, 49, 28, -1, -45, 26, -42, -53, -60, 0, -32, 50, -57, -5, -65, 55, -9, -41, 9, -50, -5, 28, 25, 41, -40, 1, 32, 54, 40, 31, -28, 27, -8, 38, -72, -23, 16, -37, 29, 4, -62, 35, -58, 69, 17, -25, 53, 47, -13, 2, -12, -22, -64, 73, -28, -6, -33, 1, 39, -37, -32, -65, 2, 60, -55, -62, 55, 3, -48, -21, -4, 73, 35, 72, 60, -4, -28, -2, 47, 12, 36, 66, 59, -2, -29, 59, 19, 45, 67, -45, 61, -65, 31, -25, -4, -34, 6, -45, 7, 24, -39, -21, -48, -40, 61, 55, -20, 22, -30, -41, 20, 28, -37, 48, 42, 70, -53, 48, -48, -26, 68, 19, 70, -27, 54, -27, -6, 70, -41, 3, 42, -19, 52, -67, -29, 8, 6, -47, -11, -47, 68, -69, 29, 44, 10, -4, -35, 4, -5, -66, 51, -31, 52, 49, 34, 34, 40, -3, -56, 10, 50, -65, 37, -15, 62, -18, 50, 12, 55, -64, 23, 38, 72, 56, 66, -36, -9, 68, 63, 72, 0, -1, -59, -65, 60, -37, -26, -55, 6, 21, -31, 30, -42, -28, 59, 29, 29, 33, -67, 54, -23, -52, 69, 41, 34, 49, -19, 36, 3, -31, -56, -22, 68, 29, 63, -68, -63, -49, -28, 73, -32, -64, 31, -44, -32, -8, -15, 17, 62, -15, 47, -34, 43, -66, 48, 47, -38, -45, -4, 68, -50, -16, -70, 2, -37, 55, -62, 1, -37, 52, 60, -43, 61, -66, 33, -57, 67, -14, 29, 50, 39, -70, -34, -73, -71, -15, -18, -65, 67, -18, -31, 6, 11, -56, 4, 13, -66, -52, 23, 65, -31, -18, 11, 60, -62, -11, -41, 70, 14, 32, 61, 12, 43, 70, -64, -12, 28, -60, -43, -30, -41, -6, 73, -71, -59, -57, -7, -25, -18, 56, 13, -7, 67, -63, 72, -72, 40, -16, -39, 65, -56, -38, 66, -57, -46, 11, 69, -29, -52, -17, 3, 62, 55, 54, 2, -6, -36, -46, 60, 55, -20, -72, 10, 62, 60, 42, -12, -9, 68, 71, -42, -18, 37, 10, -17, -35, -2, 48, 51, -64, 63, -16, -63, 33, -49, 42, -20, -28, -35, 58}

#define ADD_CONV2D_KERNEL_0_SHIFT (9)

#define ADD_CONV2D_BIAS_0 {-35, -20, 86, -37, -93, -92, -14, 84, 63, -85, 71, -35, 16, -38, -68, -66}

#define ADD_CONV2D_BIAS_0_SHIFT (8)

#define BATCH_NORMALIZATION_KERNEL_0 {101, 101, 101, 103, 101, 103, 102, 101, 102, 101, 103, 101, 103, 102, 102, 102}

#define BATCH_NORMALIZATION_KERNEL_0_SHIFT (7)

#define BATCH_NORMALIZATION_BIAS_0 {85, 84, 84, 85, 84, 84, 82, 84, 85, 85, 83, 84, 84, 84, 84, 85}

#define BATCH_NORMALIZATION_BIAS_0_SHIFT (7)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0
#define BATCH_NORMALIZATION_OUTPUT_SHIFT 0

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif
#define BATCH_NORMALIZATION_OUTPUT_RSHIFT (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_OUTPUT_SHIFT)
#define BATCH_NORMALIZATION_BIAS_LSHIFT   (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_BIAS_0_SHIFT)
#if BATCH_NORMALIZATION_OUTPUT_RSHIFT < 0
#error BATCH_NORMALIZATION_OUTPUT_RSHIFT must be bigger than 0
#endif
#if BATCH_NORMALIZATION_BIAS_LSHIFT < 0
#error BATCH_NORMALIZATION_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};
static const int8_t batch_normalization_weights[] = BATCH_NORMALIZATION_KERNEL_0;
static const nnom_weight_t batch_normalization_w = { (const void*)batch_normalization_weights, BATCH_NORMALIZATION_OUTPUT_RSHIFT};
static const int8_t batch_normalization_bias[] = BATCH_NORMALIZATION_BIAS_0;
static const nnom_bias_t batch_normalization_b = { (const void*)batch_normalization_bias, BATCH_NORMALIZATION_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[16384];
static int8_t nnom_output_data[16384];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[4];

	new_model(&model);

	layer[0] = Input(shape(32, 32, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(BatchNormalization(16, &batch_normalization_w, &batch_normalization_b), layer[1]);
	layer[3] = model.hook(Output(shape(32, 32, 16), nnom_output_data), layer[2]);
	model_compile(&model, layer[0], layer[3]);
	return &model;
}
