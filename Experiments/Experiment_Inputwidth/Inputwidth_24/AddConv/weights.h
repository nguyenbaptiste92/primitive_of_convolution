#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {-57, 35, -66, -45, 36, 0, 30, -65, 13, 0, 66, -35, -5, 3, 28, -12, -67, 37, -67, 6, -12, 55, 25, 20, 37, -59, 38, 17, -34, -40, -11, 52, -4, 68, -66, -61, 26, -3, 50, 38, 17, 5, -52, 65, -50, 43, 56, 28, 5, 9, 56, 26, 1, -1, 3, -60, -36, -62, -15, 7, -32, 41, 59, 65, -67, -19, 14, 44, -15, 38, 65, 45, -27, 52, -5, 34, -44, 21, -73, 0, -52, -43, -46, -47, -67, 39, -12, 1, -27, 17, 58, -53, -62, -66, 68, 47, 32, -57, -51, -6, 17, 35, -27, -54, 65, -74, -2, 29, 40, -37, 44, 20, 74, -42, -56, -27, 17, -1, -6, 17, -74, -62, 43, -51, 72, -16, -19, -4, -2, -51, 55, -56, -38, 67, 20, -33, -49, 47, -45, 71, -16, 71, 39, -17, 12, -28, 49, -37, -23, 11, -56, -31, -50, 9, 16, 24, 39, 37, 12, -64, -22, 58, 15, -28, 48, -30, 40, -44, 4, -68, 18, -66, 21, -10, -35, 25, -6, -48, -43, 68, -45, 47, -66, 10, 63, 6, -23, 13, 15, -18, -66, 37, -4, 10, 47, -54, 52, 66, -20, -73, -4, -63, -60, 6, 35, -58, 33, -41, 47, 27, 29, 25, 20, -39, -28, 70, 66, 3, -49, -28, -13, -17, 20, -24, -68, 62, 14, 10, -16, -27, -65, -20, 40, 36, 19, -17, -53, -53, 12, 68, 13, -67, -11, 10, -5, 4, 36, -8, -70, 4, 3, -4, -55, 24, 22, 0, 22, -28, 59, -22, -11, 4, -40, -59, -63, 69, 59, -16, 24, 19, -67, 27, -6, -66, -54, 0, -26, 62, -6, -58, 13, -21, 57, -30, -68, -23, 0, 53, -7, -1, 46, -2, 17, 8, 26, -59, -50, 15, 21, 71, -37, -22, -63, 64, -22, -3, 25, -27, 55, -26, 68, -57, 65, 48, 69, 67, -74, -47, -57, -49, 18, -74, -43, 22, 42, -3, -15, 54, 19, 74, -45, 53, -65, -47, 57, -34, -36, -14, -33, -30, 70, -4, 33, -3, 59, -32, 72, -59, -4, -19, 34, -50, 56, 28, 23, 48, 16, -28, -53, 10, 1, -35, 65, -10, 31, -63, 60, 59, -17, -46, -65, 45, 35, 41, -43, 55, -70, -25, 26, 57, -25, -59, 38, 3, -33, -70, 31, 17, -22, -70, 35, -53, -33, 48, 61, 8, -57, -68, 74, -53, -46, 16, 16, 45, -42, 63, 67, 40, -57, 44, -23, -4, 53, 30, 10, 67, 38, -23, -6, 36, 52, 54, 51, 20, -15, -12, -13, 26, -68, -3, 3, 49, -57, 52, 50, 42, -62, -63, -72, 73, 68, -35, 21, 68, 66, 5, 57, -49, 41, 62, 14, 56, 73, -17, 54, 71, 20, -29, 48, 68, -53, 27, -72, -37, -51, -2, 34, 73, -62, -25, -26, 66, 51, 49, 26, -58, -30, -2, -69, -35, -20, -26, -3, -22, -22, -45, -69, 72, 56, 1, 66, -37, 7, -45, -51, -16, 22, -15, 37, -34, -17, 72, 35, -70, 69, 51, 61, -37, -13, -43, 73, -9, 36, -13, -9, 40, 33, -42, 36, -61, -41, 40, -51, -54, 63, 14, 2, 33, 11, -31, 51, -19, 52, -44, -35, -57, 27, -59, -50, -14, 1, 58, 19, 48, -7, 37, -27, -16, 15, -17, -33, -29, 43, 15, -66, 11, -58, -31, 11, -3, -62, 41, 0, 58, 43, 72, 20, -55, 52, 32, -18, -64, -45, 60, 0, 33, -57, 12, 70, -53, 10, 68, -57, -51, -16, 59, -35, -35, 34, 23, -24, 0, 5, -9, 48, -14, 70, 5, 25, 1, -11, -51, 1, 32, 39, 69, -7, -24, -37, -41, 64, -60, -59, -20, 50, 56, -1, -3, 41, -50, -23, -41, -56, -69, 16, -13, -22, -54, -67, -71, -42, -64, -69, -19, 50, 26, 55, 42, -8, -44, 71, 12, 12, 64, 68, 69, 11, 40, -8, 60, -74, 57, -60, -49, 68, 71, 68, 71, 55, 62, 36, 21, -57, 27, 19, -63, 6, -50, -10, 43, 68, 18, 55, 41, 19, -47, -52, 53, -73, 39, -35, 7, 29, 53, 57, -37, -4, 0, -36, 46, 4, -39, 68, 72, -54, 70, 0, -17, 6, -33, -16, -72, 51, -7, -19, -20, 47, -26, -18, -41, -31, 16, -11, 67, 1, -44, -56, -5, -59, 17, 3, -16, 29, -49, -58, -45, 6, 62, -55, -14, 25, 2, -15, 55, -30, 30, 29, 0, 41, 35, -42, 18, -42, -29, -36, -56, 67, -39, 55, 1, -6, -34, 33, 71, -50, 18, -23, 43, 59, 48, -8, 56, 44, -34, -14, 57, 4, 26, -24, 14, -69, 35, -61, 7, 71, 26, -7, 17, -57, 45, -64, 49, -7, 6, 26, 60, -39, -10, 68, -12, 34, -57, -27, 33, -57, 46, -24, 29, 15, -1, 38, 21, 11, 4, -37, -36, 1, -34, 23, 21, -19, -34, -32, 28, -11, 27, 61, -32, 51, -3, 60, 23, -13, -73, 42, -57, -58, -40, 73, -29, 73, -70, 60, -60, -3, 40, -73, 67, 5, -36, 69, 52, 62, -10, 53, -54, 44, -40, -39, 68, 27, 38, 70, 23, 49, -66, -68, -23, -41, 14, 73, -31, 35, 72, 45, 20, 40, -8, -36, -19, -3, 32, 37, -55, -72, 12, -72, -28, -62, 12, -51, 56, 19, -34, 21, -54, 44, -47, -18, -54, -23, -63, -55, -58, -37, 56, -72, 44, 37, -65, 25, 28, 33, -53, 52, 68, -69, -24, 9, 35, 62, -34, -26, -8, 18, 42, 66, -24, -39, 37, -46, -10, -21, -3, -4, 14, 2, 58, 49, 14, 71, 38, -16, -15, 36, 28, 48, -40, -36, 3, -12, 24, 59, -7, 26, -65, 6, 15, -34, -69, -29, 52, -32, 74, -73, -48, 20, 65, -10, 19, -7, 65, 49, 0, 59, 26, -16, -62, 63, -66, -37, 29, -10, -25, 55, 63, 67, -52, 22, -47, -22, 19, -3, -36, -13, 50, -42, 27, 52, 36, -72, -64, -6, -69, -10, 6, 60, 59, -5, 22, 65, -56, 27, -46, 32, -53, -20, 30, -44, -57, 44, -69, -48, 56, 50, -26, -5, -51, -22, 4, -52, 13, -72, 55, -30, 7, -29, 6, -12, -65, 41, -14, 70, -23, 47, -6, 41, 14, -9, 22, -23, -39, 62, -70, -47, -70, -26, 23, 41, 37, 8, 73, 45, 60, -22, 6, -70, 68, 57, 55, 55, -23, -16, -24, -66, 4, -63, -12, -67, 14, 43, 16, 38, -49, -30, 72, -32, -43, -40, 43, -64, 48, -18, -43, -27, 50, 65, -66, 4, 39, -45, 29, -67, 46, 14, 13, 47, 32, -50, -73, -8, -14, 52, -31, -15, -58, 51, 19, 35, 58, 65, -73, 28, 36, 10, 12, -22, 9, 54, 11, -71, 12, -17, 35, -12, 13, 14, -61, 38, 46, -65, -70, -12, 28, 70, 41, -8, 13, 5, 19, -41, 50, -47, -64, -59, 43, -8, 46, -35, 24, 74, -7, 65, 4, -65, -34, 28, 51, 23, 71, -57, -47, -53, 31, -38, 10, -11, -28, -28, -28, -62, -16, -67, -28, 9, 66, 62, 65, 64, -73, 30, 50, 47, 1, 7, -66, 68, -36, 60, 22, -3, 15, -45, 53, 19, 37, 18, 59, 29, -24, 45, -1, -1, 35, -13, -13, -62, -34, -56, 23, 56, -30, 65, -54, -44, 38, -13, 2, -32, 41, 0, -48, 61, -51, 44, 45, 43, -42, -2, -3, 31, 68, 44, -35, -55, -70, -33, 53, -30, 28, 7, -69, 47, 74, 28, -72, -71, 55, 47, -56, -74, 60, 9, -53, 70, 5, 33, 23, 46, 43, 44, -43, -33, 2, 63, 42, -38, -36, -43, -35, -56, 20, -13, -36, 63, 4, 22, 39, -53, -49, 10, 18, -57, -45, -52, 29, 4, -58, 2, -1, -15, 35, -38, -72, -48, 4, 56, -63, 0, 14, 54, 33, 51, -15, -43, 11, 25, -67, -8, 29, -35, -46, -40, -52, 3, 17, 62, 47, -65, 23, 70, -60, -65, 29, -26, -16, 14, -5, 62, 45, -54, 50, 38, 71, 38, -49, -64, 1, -27, -20, -1, -71, 34, -62, -19, -9, -40, 50, 38, -63, 67, 40, 57, 29, -26, 20, 67, 44, -60, 31, -39, 55, -15, 31, -67, 67, -65, -56, 40, 17, -23, -37, -66, 61, 10, -57, -4, -70, -58, 27, -23, 6, -25, 61, 52, 50, 3, -32, -17, 42, -66, -38, -65, 12, -16, -69, 25, 62, -25, 10, -22, 55, 67, 48, -5, 34, 14, 39, -4, 65, -47, 20, -37, 3, 7, -7, -70, -72, -11, 28, -6, 19, -23, 51, 0, 27, -72, 22, -39, -42, -31, -67, 52, 10, 52, -53, -36, -41, 16, 66, -20, 28, 69, -8, -33, -13, -6, 46, -1, -56, 29, -48, 18, 74, -19, 13, 40, -38, 46, 8, 10, -47, -49, 3, -23, 61, -26, 51, -71, 30, -7, -21, -69, -19, -53, -22, 53, 65, -53, -51, -64, 17, 7, 39, -17, 31, -28, -27, 61, 37, 28, 70, 56, 63, 47, 38, 62, -57, 49, 5, -18, 12, -53, -25, -3, -3, 17, 11, 11, -8, 24, -63, -37, -51, 61, -50, 63, -39, 18, -47, -21, 32, -51, 41, -47, 35, -21, -67, -14, 47, -73, -15, -43, -34, -26, -74, -39, -43, 22, -10, -53, 23, -21, 52, 42, 72, 30, -28, -37, -42, 19, 14, 29, -48, 66, -65, -21, 66, -9, 27, 13, -25, 29, -53, -64, 64, 15, -8, -12, -3, 34, 43, -25, -26, 27, 0, 4, 6, 38, 17, -7, -12, 22, -71, 68, -73, -22, -67, -16, -55, 24, 65, 10, 55, -28, -68, -10, -36, 63, -30, 23, -6, -14, 44, 17, 3, 47, -8, 58, 73, 15, -8, 54, 73, 23, -37, -74, 33, 36, -5, -25, 15, 25, -2, 37, 43, -29, 44, -51, 72, -59, 68, -8, -18, -26, 62, 23, 55, 64, 15, 26, -14, 73, 59, -1, -7, -10, 24, 50, 28, 60, -14, 54, -10, 24, -37, 33, 35, 16, -53, 0, -17, -45, -31, 73, -52, -31, 71, 36, 59, -58, 60, 45, -57, 14, -9, -33, 11, -29, -6, -39, 61, -34, -5, -46, 21, 48, 17, -69, -66, -26, -42, 14, 53, 31, 0, -60, 1, 1, 45, -36, -56, -66, 16, -7, 44, 26, 3, 39, 64, 30, -59, -36, 32, -29, 5, -11, -31, -65, -2, -41, 44, -30, -39, 2, 40, 38, 8, 9, -6, 9, 65, 42, -5, 71, 6, 61, -6, -44, 38, -54, -15, 36, -34, 71, -41, 19, -42, -44, 70, 10, 33, 26, 8, -49, -44, -44, 17, 36, 19, 69, -52, -56, 51, -8, 52, -30, -53, 26, 47, 44, 31, 20, -68, 45, -22, -1, -58, -66, 52, -25, -35, 52, -56, -15, -3, 49, -57, -69, 49, -44, -39, -72, -45, 10, 71, -6, 21, 47, -31, -60, 19, -57, 1, -59, 72, 17, 17, 21, -31, -71, -53, 40, -58, -15, -37, 69, -60, 27, -63, -15, -4, 15, -67, -48, 62, 61, 25, 62, 64, 41, 60, 19, -70, 4, 64, 15, 68, 27, 28, -29, -54, 2, -23, 45, 51, -63, 72, -16, 22, 73, -22, 48, -70, -35, -5, 48, -67, 10, 64, -40, -38, -7, -13, 73, 31, -33, -13, 18, -24, -5, 51, -12, 24, -25, -40, 62, 4, 17, 13, -10, 51, -59, 45, 28, -17, -46, 30, -30, 71, 72, -26, 7, 24, 6, -8, 51, -16, -27, 67, -3, -62, 42, -66, -51, 10, 66, -20, -63, 70, 37, 50, -17, -50, -54, 64, 46, 22, 70, -58, 47, 17, 72, 48, -58, -8, -35, 72, 33, 46, -31, 63, 47, -60, -74, -30, -5, 73, -40, -56, 17, 30, 4, -51, -39, 70, -60, 27, -12, 62, -40, -41, 18, 7, 50, -21, -73, 31, -65, -25, 21, -65, -61, 43, -43, -67, -31, -43, -44, -68, -47, -32, 57, 18, 16, -32, -36, 70, 38, 36, -61, -39, -10, -32, 44, -67, 68, -72, -11, 32, 16, -20, -32, 2, -13, -4, -14, -8, 54, 7, 23, 6, -16, -53, -17, 11, -36, 37, 15, 33, -52, -47, -3, 37, -45, -68, -35, -9, 43, 72, 56, 51, -39, -22, 4, -5, -43, 67, 62, 26, -54, -46, -7, 24, 47, 62, 59, 50, -64, 3, 42, -26, 2, 47, -17, -58, 22, -2, -8, -38, -25, 26, 18, 35, -48, -24, 53, 32, -68, -15, -3, 38, -42, -41, -61, -56, -29, -1, -18, 37, 47, 30, -47, 5, 59, 69, -61, -58, -65, -58, -9, -71, -39, -28, -56, 35, -66, -45, 64, 1, 8, 32, -7, -35, -33, -62, 64, -52, -73, -57, -33, 5, -7, 66, 10, -56, 24, 69, -47, 66, 25, 63, 53, 2, -20, 27, -66, -27, -57, 38, -62, 22, 8, 6, -42, 23, 68, -41, 20, 6, -72, 69, 8, 37, -9, -59, 53, 3, 24, 62, 68, 22, 10, 21, 53, 30, 69, -50, 34, -51, -32, -65, 42, -72, -53, 12, -27, -61, 17, 17, -59, 59, -61, -42, 35, -64, 68, 55, 25, 40, -52, 27, -62, 45, 35, -8, 19, 41, -2, -37, -64, -51, -34, 53, -68, -70, -33, 18, 10, -26, -70, 66, -13, -56, -40, -51, -52, -61, 15, 11, 35, -15, 56, -64, 53, 10, -20, 23, 17, 68, 58, -25, -60, -29, -63, -72, -10, 57, 69, -51, -2, 42, 32, 5, 15, 65, 14, 65, 53, 66, 29, 66, 13, 1, 50, -17, -34, 31, 59, -31, -36, -44, -18, -18, 63, 16, -53, 27, 46, 59, -29, 23, 30, 21, 12, 21, 8, 34, -48, 68, 6, -51, -72, -17, -25, 68, -6, -45, -22, -62, 19, -31, -25, 57, -42, -38, -55, -1, -12, -3, 29, -57, 29, 26, 17, -8, -3, 4, -35, 37, -8, 66, -39, -30, -32, -68, 41, 68, 7, -36, 64, 38, -1, -61}

#define ADD_CONV2D_KERNEL_0_SHIFT (9)

#define ADD_CONV2D_BIAS_0 {89, -12, 52, -102, -3, -21, -97, -100, 9, 79, 69, 94, -104, -101, -26, 65}

#define ADD_CONV2D_BIAS_0_SHIFT (8)

#define BATCH_NORMALIZATION_KERNEL_0 {98, 96, 98, 98, 97, 99, 98, 98, 98, 98, 97, 98, 99, 97, 98, 97}

#define BATCH_NORMALIZATION_KERNEL_0_SHIFT (7)

#define BATCH_NORMALIZATION_BIAS_0 {80, 80, 80, 81, 79, 80, 81, 81, 80, 80, 80, 79, 81, 81, 81, 80}

#define BATCH_NORMALIZATION_BIAS_0_SHIFT (7)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0
#define BATCH_NORMALIZATION_OUTPUT_SHIFT 0

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif
#define BATCH_NORMALIZATION_OUTPUT_RSHIFT (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_OUTPUT_SHIFT)
#define BATCH_NORMALIZATION_BIAS_LSHIFT   (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_BIAS_0_SHIFT)
#if BATCH_NORMALIZATION_OUTPUT_RSHIFT < 0
#error BATCH_NORMALIZATION_OUTPUT_RSHIFT must be bigger than 0
#endif
#if BATCH_NORMALIZATION_BIAS_LSHIFT < 0
#error BATCH_NORMALIZATION_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};
static const int8_t batch_normalization_weights[] = BATCH_NORMALIZATION_KERNEL_0;
static const nnom_weight_t batch_normalization_w = { (const void*)batch_normalization_weights, BATCH_NORMALIZATION_OUTPUT_RSHIFT};
static const int8_t batch_normalization_bias[] = BATCH_NORMALIZATION_BIAS_0;
static const nnom_bias_t batch_normalization_b = { (const void*)batch_normalization_bias, BATCH_NORMALIZATION_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[9216];
static int8_t nnom_output_data[9216];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[4];

	new_model(&model);

	layer[0] = Input(shape(24, 24, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(BatchNormalization(16, &batch_normalization_w, &batch_normalization_b), layer[1]);
	layer[3] = model.hook(Output(shape(24, 24, 16), nnom_output_data), layer[2]);
	model_compile(&model, layer[0], layer[3]);
	return &model;
}
