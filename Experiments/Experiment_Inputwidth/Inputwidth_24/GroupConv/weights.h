#include "nnom.h"

#define GROUP_CONV2D_KERNEL_0 {25, -22, -65, -77, 20, -41, 25, -10, 70, -44, -68, -34, 8, 47, 65, -28, 65, -39, -42, 57, -8, -46, 84, 55, -27, 61, -16, -39, -81, -52, 73, 29, 2, -4, 64, -4, 45, -72, -63, 50, -64, -31, -72, -18, -55, -72, -54, 11, 24, 37, 19, -54, -18, -83, -35, 36, 12, -20, 56, -13, 64, 29, 81, -69, -72, 64, 75, -41, 85, -83, -81, -58, 42, 35, -27, -78, -74, -6, 60, -48, -47, 32, -9, 77, 72, -24, 16, 85, 73, -35, 30, -44, -24, -63, -67, 10, -6, -75, 83, 24, 21, -17, 51, 78, -56, 81, -79, 6, 47, 30, 59, 25, 34, 79, -47, -65, 62, -59, 13, 49, 7, -74, 84, 68, -41, -37, -13, 40, 21, 17, -80, 84, 40, 30, 33, 84, -63, 47, -1, 56, 19, 8, -21, -11, -14, -25, -81, 64, 43, -69, -6, 16, 43, 59, -83, -74, -46, -25, -48, 39, -8, -35, 55, 53, 54, -79, -48, 26, 7, 17, -2, 23, 29, 71, 82, 17, 19, 59, 50, -8, 25, -63, -57, -82, 83, -43, -32, -45, 37, -6, -40, -48, -74, -25, -3, -51, -16, 74, -35, 69, -85, 10, 57, -83, 43, 8, 37, 65, 24, -63, 83, 56, 30, 53, -85, 6, -73, -13, 16, -14, -29, 82, 36, 14, 27, 24, -29, 12, -13, -26, 16, -46, 10, -14, -83, -21, 8, 19, -48, 51, -6, -53, -68, 78, 58, -3, 71, -62, -34, 19, -45, -56, 33, 29, -62, 67, 5, -52, 17, 2, -79, -80, -27, 35, -24, 46, -85, -59, 29, 40, 68, -47, 48, 8, 12, 24, -78, 37, -4, 47, 0, -82, 29, -8, 44, 66, -39, -42, -58, -63, -20, 36, 17, -56, -29, 10, 5, 79, -14, 66, -36, -15, -80, -54, -51, -51, -46, -32, -5, 0, 67, 45, -43, 2, -56, 47, 68, -75, 81, 32, 31, -19, -31, 14, -43, -12, 6, 63, 29, 12, 42, 19, 42, 71, 32, -64, 39, -28, 30, -52, -35, 54, -54, 37, 30, 78, -72, -55, -76, -33, 23, 19, 45, -38, -44, -68, -50, -30, -8, 1, -67, 2, -14, 51, -27, -21, 54, 2, 5, -14, -30, 74, -15, -49, -4, -9, -18, 18, -84, 7, 74, -66, 19, 19, 75, 52, -53, 18, -9, -74, 25, -11, 39, -3, -10, -82, -42, 70, -21, 30, -65, 19, 13, 11, 69, 74, -64, -7, 3, -24, -71, 46, -20, -53, -71, 30, -2, 41, -67, 70, -15, -36, 39, -31, 72, -19, 44, 84, 64, 25, 17, -13, 10, -41, -53, -59, 79, 53, -20, 17, -66, -33, 36, -23, -82, -34, 44, -54, -74, 73, -83, 65, -11, 9, 56, -81, 33, 11, 43, 80, -79, -61, 2, -7, -50, -29, 75, 35, -5, 75, 12, 54, 29, 37, 84, 19, -1, -21, 26, 16, 20, 82, -54, 74, -48, 24, 48, 11, 55, -53, -85, -23, -26, 80, -34, -43, 36, 26, -7, 83, 77, -53, -12, 11, -46, -26, -48, 52, 62, 22, -5, 40, 81, -64, 49, -33, -61, -33, -44, 44, 64, -51, 5, 59, 63, 43, -59, -62, 51, -68, -58, -31, -51, 73, -50, 68, 3, -16, -83, 63, 39, 59, 30, -51, -9, 49, -47, -58, 12, -77, -68, -8, -53, -49, 60, -19, 66, -68, -22, 83, 25, 37, -24, -55, 62, -42, 21, 50, -61, -53, 62, 61, 3, -35, -51, 22, -44, 33, -15, 1, 24, 50, -26, 13, -60, 28, 12, 34, 13, 36, -9, -42, -83, 84, -10, -64, 51, -4, 10, 19, 4, -38, 31, -78, -1, 70, -44, 42, 1, -47, -46, 56, -75, -37, 17, 85, 36, -11, -69, -75, 81, 25, -25, -9, 27, 56, -32, -67, -81, 58, 53, -17, -76, -54, -57, 81, -84, -8, -78, -17, -9, -74, -21, -64, -82, 40, 48, -43, 13, 23, -10, -17, 37, 30, 66, 5, 62, -23, -10, 33, -52, -59, -47, -44, -78, -59, 45, 72, -9, 60, -70, 22, -58, 52, 11, 34, -51, 18, 53, -85, 14, 50, 84, 42, 74, -53, -52, 79, -74, -47, 51, 57, 84, -13, 47, -82, 31, -13, -27, 56, -57, 55, -26, -59, 53, -22, 84, -26, -21, -11, 33, -74, -35, 80, 77, -59, 76, 77, -26, -80, -76, -14, 52, 0, -62, 4, -30, -13, -84, -58, 76, 83, 36, 39, 49, 58, -57, 7, 65, -76, -48, 22, 74, 26, 30, 21, -37, -1, 71, -15, 66, -8, 62, 48, 43, 20, -60, -47, 75, 42, 74, -33, -65, 80, 55, -30, -16, 3, -66, -15, 0, 59, -53, 73, 33, -34, -23, 51, -32, 31, 46, 84, 75, -82, 69, -69, 59, 18, -73, 53, -1, -17, -28, 83, -22, -55, -28, -8, 67, -19, -63, 9, 61, 36, -9, 1, -76, 85, 4, -18, -44, -20, 7, -80, 50, 59, 53, -43, 72, 12, 70, -37, 28, -84, -31, 83, -10, 80, 28, -81, 10, -18, -51, -10, 53, 4, -67, 9, 36, 41, 41, 41, -1, -25, -2, 15, 23, 55, 21, 74, -21, -28, 61, -68, -44, 3, 60, 10, -18, -62, 43, 2, -77, -20, -49, 81, 7, 54, 32, 27, -18, -17, -76, 35, -55, -13, -46, 7, 20, 68, 18, -44, -39, 48, -57, 1, 40, -10, -39, 22, -48, 16, -9, 67, -39, 76, 64, -13, 80, 74, -35, -41, -3, 80, 64, 9, 5, -70, 58, -46, 58, 58, 0, 53, -78, 18, -2, -9, -48, -83, 20, 52, -83, -71, 19, 76, 76, -29, -49, -30, -24, 74, -10, -66, 12, -25, 56, 65, -4, -33, 56, 39, -22, -15, 31, -54, -35, 34, -67, 24, -42, -60, 0, 20, 33, 43, 22, 47, 1, -59, -28, 55, -33, 76, -64, -70, 21, -36, 7, 18, -3, 14, 28, -19, 25, 43, -21, 17, -72, 27, 25, 24, -59, -42, 32, -63, -80, 18, -30, -84, -38, -53, -26, -22, -46, 11, 74, -67, -72, 63, -48, 35, -20, -1, 85, -12, -42, 44, -17, -51, -24, -65, 15, 10, 83, -58, 29, 51, -79, -38, 26, -20, 2, -68, -31, 43, -71, 24, -76, 64, 41, 76, 52, -20, -65, -43, 6, 63, 78, -2, 19, 9, -35, 72, 6, 6, -74, 61, 20, 57, 80, 9, 16, -16, -33, 13, 47, 78, -25, -39, -11, 64, -39, -37, -57, 38, 68, -78, 67, -28, -76, 62, 78, -22, 21, -11, 32, -11, 83, -24, -83, -48, 67, -5, 35, 12, -24, -37, 0, -14, 58, 70, -32, -13, 73, -38, -59, -47, -57, -50, -61, 10, 71, -2, -50, 30, -64, -58, -64, 49, -60, 27, -39, 71, -40, -30, -30, -28, -31, -38, -5, 56, 66, -36, -24, -75, -13, 27, -62, 84, 49, 61, -29, 43, 58, 64, 25, -82, -54, 43, -35, -63, 76, 29, -39, -61, -82, 25, -79, -75, -38, -16}

#define GROUP_CONV2D_KERNEL_0_SHIFT (9)

#define GROUP_CONV2D_BIAS_0 {74, -9, 55, 60, -90, 54, 16, -74, -77, 23, -70, -8, 79, 24, 6, 81}

#define GROUP_CONV2D_BIAS_0_SHIFT (8)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define GROUP_CONV2D_OUTPUT_SHIFT 6

/* bias shift and output shift for each layer */
#define GROUP_CONV2D_OUTPUT_RSHIFT (INPUT_1_OUTPUT_SHIFT+GROUP_CONV2D_KERNEL_0_SHIFT-GROUP_CONV2D_OUTPUT_SHIFT)
#define GROUP_CONV2D_BIAS_LSHIFT   (INPUT_1_OUTPUT_SHIFT+GROUP_CONV2D_KERNEL_0_SHIFT-GROUP_CONV2D_BIAS_0_SHIFT)
#if GROUP_CONV2D_OUTPUT_RSHIFT < 0
#error GROUP_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if GROUP_CONV2D_BIAS_LSHIFT < 0
#error GROUP_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t group_conv2d_weights[] = GROUP_CONV2D_KERNEL_0;
static const nnom_weight_t group_conv2d_w = { (const void*)group_conv2d_weights, GROUP_CONV2D_OUTPUT_RSHIFT};
static const int8_t group_conv2d_bias[] = GROUP_CONV2D_BIAS_0;
static const nnom_bias_t group_conv2d_b = { (const void*)group_conv2d_bias, GROUP_CONV2D_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[9216];
static int8_t nnom_output_data[9216];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[3];

	new_model(&model);

	layer[0] = Input(shape(24, 24, 16), nnom_input_data);
	layer[1] = model.hook(GroupConv2D(16, 2, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &group_conv2d_w, &group_conv2d_b), layer[0]);
	layer[2] = model.hook(Output(shape(24, 24, 16), nnom_output_data), layer[1]);
	model_compile(&model, layer[0], layer[2]);
	return &model;
}
