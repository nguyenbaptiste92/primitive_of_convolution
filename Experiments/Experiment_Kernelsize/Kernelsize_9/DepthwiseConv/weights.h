#include "nnom.h"

#define DEPTHWISE_CONV2D_DEPTHWISE_KERNEL_0 {-56, 21, -39, 15, -7, -1, -14, 15, -21, 35, -1, 57, -32, -35, -33, -47, 65, -54, 17, -45, 15, 39, 32, 22, 57, 13, -54, 31, 38, 65, -57, 4, 32, -16, -48, 0, 64, 33, -32, -18, 30, 36, 17, 28, -40, 41, -57, -53, -46, -43, 67, -7, -59, 9, 40, 54, -7, 46, -52, -21, 52, -65, 37, 16, 39, 48, 39, -21, -36, 45, 38, 14, -1, -11, 42, 51, -49, -45, -47, -48, -30, -22, -16, -50, 10, 63, -23, 43, -20, -52, 28, 11, 6, 10, 39, -55, 35, 26, -15, 63, 13, 6, -19, 5, 9, 5, 68, -43, 55, -52, -54, -35, 31, 16, -40, -65, -67, -10, -18, 11, -60, 36, 10, 49, -32, 65, 22, 53, -41, -30, -47, 1, -62, -65, -7, 39, -25, 61, -19, -9, 6, 67, -29, -30, -12, 28, -57, -18, -1, -34, 8, 17, -33, 40, -45, 3, -35, 40, -58, -32, 52, 24, -4, -2, -61, -19, 67, -53, 6, -4, 31, -62, 28, 47, -43, -6, -51, -46, 8, 62, 19, -48, -66, 31, 33, -27, 54, -16, -66, 42, 63, -34, -20, 14, 64, 59, -66, -28, -36, -2, 34, -7, -7, -10, -55, 53, 13, -61, 14, -40, 1, 61, 51, -41, -20, 23, 63, -1, -27, 52, -21, 65, -28, -56, 35, -27, 17, -27, 13, -42, 43, -22, -34, 15, 24, 58, 42, -20, -16, 45, 55, 30, -15, -10, -41, 30, 14, 53, 59, 14, -26, -27, -47, 1, -12, 66, 55, 7, -24, 17, -57, 20, -16, 27, 42, 65, -40, 35, 65, 48, 60, -38, 52, -40, -67, -9, 33, 41, 9, -35, 32, -56, 33, -42, 11, -56, 19, 19, 55, 7, -55, 54, -54, -57, 23, -34, -65, -30, -33, 21, -8, 25, 44, 22, -6, 4, 5, -38, -18, 54, 2, -53, 38, 59, 58, 28, -17, -45, 40, -7, -38, 21, -7, 11, -28, -46, -29, -64, -63, -3, -4, 39, 19, 7, -13, 47, 5, 43, -6, -36, -34, 65, -45, 56, -1, 40, -41, -19, -7, -35, -66, 54, 1, 3, -42, 36, 41, -39, -53, 11, -18, 63, -22, -8, -22, -31, 11, 0, -60, -21, -1, 26, -23, 26, -1, 66, 17, -62, -11, 17, -12, -54, 6, 49, -46, 27, -55, -38, -1, -39, 41, 67, 49, -44, 29, -26, 6, -61, 14, 46, 51, -1, -59, 50, -7, 20, -31, -58, -56, -24, -32, 2, 21, 1, -66, 26, -33, -1, 13, 10, -62, -13, -64, -3, 66, -59, -46, 29, 64, -61, -23, -2, -44, -43, -35, 25, -22, 35, 18, 31, -18, -52, 6, 9, 51, 20, 25, -52, -14, 41, -6, -12, 1, 52, -55, 27, -48, -6, 57, -19, -54, 32, -57, 67, -56, 21, 27, -21, 3, 48, -55, 22, 10, 18, -18, 48, -59, -15, -60, 0, -31, 24, -27, -55, -1, 29, -48, -53, -60, 46, -38, -32, -11, 10, 53, 3, 43, 1, 60, 48, 49, 12, -24, -38, 11, 0, -47, 38, -31, 51, -21, 1, -10, 6, 54, -58, -9, -7, -44, -36, 13, -48, 14, 7, 4, 34, 14, -58, 34, 5, -35, 47, -39, 59, 37, 7, 54, -53, 23, -50, 8, -55, -40, 19, 34, 36, -42, 7, -64, 60, 45, 45, 56, 6, 66, -10, 27, -59, 59, -43, -35, -63, -41, 18, -53, 49, -51, 23, 25, 10, -15, 51, -18, -30, -37, -20, 16, 61, 31, -59, -53, 10, 67, 23, -11, 6, 52, 58, 6, -41, 64, 50, 2, -41, 40, -7, -16, -2, 39, 16, 62, -52, -28, 28, -18, 53, -7, 56, -56, -40, 13, -3, -28, 11, -66, 67, -36, -18, -3, -28, -35, 6, -17, 43, -51, -32, 43, -57, -11, -36, 61, 61, -44, 26, -64, 30, 61, 6, -64, 53, 6, 14, -68, -36, -18, 11, 55, 25, 41, 26, 49, 25, -60, 30, -44, -36, -50, -63, -67, -24, -9, -6, 28, 2, 20, -1, 2, 61, -67, 30, 23, 50, 33, -3, -67, 42, 63, 28, -36, -66, -41, -65, -23, -34, -48, 37, 52, 17, -47, -46, -11, -31, -48, -3, 48, 26, -58, 42, 26, 60, -64, -18, 30, -23, 38, -50, 16, -35, 15, -20, 35, -4, 38, -23, 20, -59, 66, 55, -62, 55, -40, -2, 45, 17, 62, 30, -52, -17, 21, -41, 54, -7, 3, 23, 22, -23, -14, 31, -26, -43, -57, 17, -32, -59, -16, 58, 67, -17, 52, -12, 7, -40, -28, -25, -36, -27, 65, 32, -42, -50, 54, -10, -67, 12, 14, -16, 19, -22, 10, 17, -11, -52, -65, 29, 21, -2, 52, 12, 22, -43, -44, -23, 8, 46, 17, 11, 11, 64, 19, -62, 10, 8, -6, 32, -52, 40, 57, -54, -8, -25, -36, -43, 29, -13, -7, 44, 49, 52, -31, -31, 66, -37, -5, -31, 19, -57, 51, 38, 40, -45, -15, -66, -19, 62, -3, 11, 19, 67, -2, 65, -59, -42, -56, -23, -20, 41, -7, -50, 13, 61, -39, -42, 9, 10, 40, 23, 41, -2, -42, 47, 12, 50, -22, 3, -67, 59, -41, 67, -63, -63, 27, 48, 48, -25, -58, 58, 15, -36, 43, -27, 46, 61, 52, 38, 3, -8, 25, 20, 3, -62, -41, 29, -26, -40, 58, -64, 66, -28, -8, 3, -12, 65, 5, -61, 19, 28, 2, -58, -44, 2, 26, 3, -23, 22, -45, 13, -6, 15, 13, 39, 36, -56, 24, 49, 42, 48, 36, 40, -6, -6, -15, -25, 62, 4, 61, 42, 57, 40, 26, -40, 47, 24, 7, 49, 34, -34, 53, 6, 21, 9, 41, 48, -59, -64, -64, 63, 51, 63, 56, -30, 7, -55, 9, 48, -65, -32, 24, 66, 42, 47, 28, 68, 23, 21, 43, 32, -18, 55, -23, 63, 1, -29, -63, 34, -56, 40, 24, 22, 26, -46, 61, 59, -53, 28, 55, -53, 55, -13, -50, -52, -18, -50, -13, -16, 11, -15, -30, -8, 62, -1, -54, -18, -48, 26, -51, 35, 41, -9, -11, 41, -37, 34, 64, -22, 66, -15, -3, -42, -13, -14, 67, -34, 39, 2, 0, 2, -25, 46, -51, -39, -32, 53, 24, 2, -53, 50, 57, 15, 59, -16, 33, -18, 20, 6, 25, -29, -32, -28, -60, 39, 64, 62, 10, -14, 64, -32, 40, -30, -56, 18, -55, -25, 43, -48, 41, 25, -55, 9, -66, -18, -38, -39, -15, 68, -57, -34, -48, 56, -51, -17, -30, -12, 53, 31, 43, -15, -21, 31, -8, 15, 35, -40, -48, 53, 50, 61, -50, 19, -38, 17, 33, 31, 26, 36, 34, -29, -42, 51, -43, -65, 43, 59, 2, 65, -45, -61, 39, 46, -7, -50, 41, -61, 30, 58, -38, 22, -38, -53, -34, -20, -52, -41, 50, 25, -58, -62, 59, -33, -53, -67, -24, 53, 12, 44, 23, 28, 3, -32, -51, 52, -19, -51, 24, -32, 44, 64, 43, 8, 16, -12, -3, 44, -23, 24, 9, -15, -22, -33, -48, 51, 41, -40, -21, 64, 58, 29, 32, 66, -8, -58, 55, -39, -62, -7, 27, -38, -53, -21, 21, -26, -38, 62, -53, -54, -56, 55, 40, 49, -21, 38, -10, -49, -64, -35, -5, -38, -43, 17, -15, -16, -9, -18, 34, 28, -32, 43, -49, -35, -46, -61, -55, -59, -65, -24, -45, -66, 48, -25, 65, -37, 9, 31, 8, -31, 33, -18, 27, -31, 11, 47, -8, 13, 42, -31, -34, -19, 57, 30, 42, 15, -61, -67, -1, -32, 13, 9, 5, -42, -32, -4, -41, 62, -20, 40, 35, -4, 61, 50, 50, -11, 47, 47, -40, 35, -47, 28, 48, -62, -37, -11, -46, 23, -5, 16, 37, -56, -64, 39, 22, 4, 18, -42, -25, 6, 18, 41}

#define DEPTHWISE_CONV2D_DEPTHWISE_KERNEL_0_SHIFT (10)

#define DEPTHWISE_CONV2D_BIAS_0 {42, -12, -106, 0, -69, -108, -4, 106, -2, 98, 40, -11, -37, 65, -61, -14}

#define DEPTHWISE_CONV2D_BIAS_0_SHIFT (8)

#define CONV2D_KERNEL_0 {64, -48, 99, 1, -20, 73, 104, -103, -90, 15, -3, 86, 98, 107, -80, -57, -34, 51, -86, -65, -30, 94, -31, 98, 34, -32, -23, 36, -99, -3, -106, 104, -93, 3, -82, -96, 97, -39, -33, -67, 83, 82, 16, 22, 53, 32, -1, -90, 45, -61, 29, 21, -36, 36, -82, -75, -25, -51, 64, 54, -40, 50, -87, 87, -82, -31, -7, -90, -20, -74, 66, 102, -60, 57, 82, -58, -94, 73, -76, -104, -99, 92, -58, -13, -44, -68, 87, 103, -92, 14, -89, 73, 84, -27, -6, -29, 14, -85, -107, -20, 4, 68, -19, -105, 26, 78, -36, 13, 76, -53, -12, -22, 98, 48, 77, -8, -8, 3, 14, -54, 93, 51, 107, 109, 12, 83, 10, 6, 43, 70, 10, 103, 82, 15, -77, -33, 43, 66, -86, -51, -33, 36, 70, -89, 27, 55, 86, 1, -3, 97, -34, 20, -80, 28, -27, 28, -30, 103, 43, -88, 92, 50, -80, -28, -84, 7, 6, 107, 81, 55, 60, -39, 96, -109, -38, 40, -50, 94, -2, 52, 56, 44, -40, -47, -20, -106, 51, -43, -27, 51, 90, 56, 89, 96, -106, 78, -33, -79, 73, 71, -106, 3, -28, 23, 29, -21, -37, -101, 86, 65, 100, -63, -47, 85, 68, 5, 25, 3, -79, -56, -96, -74, -18, 51, 97, -18, -42, -2, 54, -96, 47, 94, 35, 17, -72, 81, 73, 90, 47, -109, 21, -13, 20, 107, 35, 60, 39, 60, -81, 35, 62, -11, -92, -14, -54, 34}

#define CONV2D_KERNEL_0_SHIFT (8)

#define CONV2D_BIAS_0 {-94, 14, 68, -56, -26, 101, 111, 94, 91, -37, -60, -44, 47, -62, -70, -65}

#define CONV2D_BIAS_0_SHIFT (8)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define DEPTHWISE_CONV2D_OUTPUT_SHIFT 6
#define CONV2D_OUTPUT_SHIFT 6

/* bias shift and output shift for each layer */
#define DEPTHWISE_CONV2D_OUTPUT_RSHIFT (INPUT_1_OUTPUT_SHIFT+DEPTHWISE_CONV2D_DEPTHWISE_KERNEL_0_SHIFT-DEPTHWISE_CONV2D_OUTPUT_SHIFT)
#define DEPTHWISE_CONV2D_BIAS_LSHIFT   (INPUT_1_OUTPUT_SHIFT+DEPTHWISE_CONV2D_DEPTHWISE_KERNEL_0_SHIFT-DEPTHWISE_CONV2D_BIAS_0_SHIFT)
#if DEPTHWISE_CONV2D_OUTPUT_RSHIFT < 0
#error DEPTHWISE_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if DEPTHWISE_CONV2D_BIAS_LSHIFT < 0
#error DEPTHWISE_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif
#define CONV2D_OUTPUT_RSHIFT (DEPTHWISE_CONV2D_OUTPUT_SHIFT+CONV2D_KERNEL_0_SHIFT-CONV2D_OUTPUT_SHIFT)
#define CONV2D_BIAS_LSHIFT   (DEPTHWISE_CONV2D_OUTPUT_SHIFT+CONV2D_KERNEL_0_SHIFT-CONV2D_BIAS_0_SHIFT)
#if CONV2D_OUTPUT_RSHIFT < 0
#error CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if CONV2D_BIAS_LSHIFT < 0
#error CONV2D_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t depthwise_conv2d_weights[] = DEPTHWISE_CONV2D_DEPTHWISE_KERNEL_0;
static const nnom_weight_t depthwise_conv2d_w = { (const void*)depthwise_conv2d_weights, DEPTHWISE_CONV2D_OUTPUT_RSHIFT};
static const int8_t depthwise_conv2d_bias[] = DEPTHWISE_CONV2D_BIAS_0;
static const nnom_bias_t depthwise_conv2d_b = { (const void*)depthwise_conv2d_bias, DEPTHWISE_CONV2D_BIAS_LSHIFT};
static const int8_t conv2d_weights[] = CONV2D_KERNEL_0;
static const nnom_weight_t conv2d_w = { (const void*)conv2d_weights, CONV2D_OUTPUT_RSHIFT};
static const int8_t conv2d_bias[] = CONV2D_BIAS_0;
static const nnom_bias_t conv2d_b = { (const void*)conv2d_bias, CONV2D_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[16384];
static int8_t nnom_output_data[16384];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[4];

	new_model(&model);

	layer[0] = Input(shape(32, 32, 16), nnom_input_data);
	layer[1] = model.hook(DW_Conv2D(1, kernel(9, 9), stride(1, 1), dilation(1, 1), PADDING_SAME, &depthwise_conv2d_w, &depthwise_conv2d_b), layer[0]);
	layer[2] = model.hook(Conv2D(16, kernel(1, 1), stride(1, 1), dilation(1, 1), PADDING_SAME, &conv2d_w, &conv2d_b), layer[1]);
	layer[3] = model.hook(Output(shape(32, 32, 16), nnom_output_data), layer[2]);
	model_compile(&model, layer[0], layer[3]);
	return &model;
}
