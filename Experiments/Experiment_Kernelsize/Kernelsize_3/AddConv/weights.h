#include "nnom.h"

#define ADD_CONV2D_KERNEL_0 {23, 24, 47, 64, 27, -68, -69, 0, 15, -57, 14, -25, 25, -39, -35, -30, -42, 14, -63, -41, -53, 37, 14, -10, -10, 59, 59, -9, 48, 6, 18, 43, 56, -61, 41, 17, -35, 61, -49, -31, 47, 65, 40, 60, -52, 47, 23, 58, -31, -31, -54, 30, -14, -11, 12, 35, 28, -5, 5, -57, 28, -69, -46, -28, 44, -12, 29, -63, 18, 14, 24, 20, -67, 63, -45, 30, -64, 26, -32, 14, 9, 20, -31, -37, -12, -19, 3, 2, -60, -12, -47, 14, -56, -12, 48, 23, 53, -29, 16, -23, -25, 42, 10, -48, -2, -3, -53, -1, -69, 15, -62, -70, -19, 46, -6, 26, 31, 32, 42, -19, -61, -26, 32, -39, -74, 72, -21, 58, -3, 24, -51, 34, 71, -19, -26, 29, 8, 2, -28, 32, 43, -64, -10, -29, -12, -62, -22, -15, 11, -21, -53, -28, 4, 46, -36, 40, 60, 48, 2, -73, -9, 28, 0, 28, 14, -56, -8, -61, -33, -2, -36, -27, 5, 18, 55, 35, 22, -20, 1, -41, 50, 7, 73, 8, 5, -26, -36, 65, 69, -62, 34, 33, -27, 34, 48, -48, 70, -31, -62, -73, -26, 32, 18, 28, -20, -15, -13, 28, -35, 49, -10, 0, -57, 39, -56, -4, 60, -14, 15, -57, -32, 66, 60, 54, -56, 12, -36, -71, -17, -44, -51, 67, -35, 64, 47, 60, 64, -48, -38, 37, -40, -34, 5, -26, 5, -36, 36, 49, -7, 53, 40, 46, 73, 42, -51, 37, -69, 6, 23, 28, -70, -32, 20, -15, -26, 68, 1, -42, 6, 36, -73, 55, 55, -36, 60, -52, -70, 60, -21, 65, -37, 64, 45, 58, -2, 62, -26, -55, 6, -63, -12, 46, 19, 55, 38, -63, 69, 69, 12, 16, 20, 60, 35, 73, -64, 20, -32, -69, 52, -4, 12, -3, 4, -31, 28, 14, 30, 15, -61, 9, -28, -18, -59, 29, 70, 69, -61, 48, 3, -44, 15, 12, 24, -33, 57, 58, -45, -73, -53, 5, -70, 37, -49, -23, 64, -60, -22, 2, 67, 73, 58, -27, -69, 21, 31, -19, -8, -67, -10, -14, 28, 33, -61, 18, -19, 73, 1, -3, -25, -71, -66, -38, -46, 50, 28, -22, 25, -51, 5, 24, 32, -39, -29, 3, -41, 43, -53, 64, 0, -5, -62, 39, 50, 74, -9, -27, 18, 0, -46, -12, 49, -9, 5, 67, -11, -42, 4, -56, 21, 5, -45, 59, -66, 48, 25, 61, -42, -55, 9, -25, -12, -14, -23, -47, 61, -46, 29, -73, -47, 23, -68, 56, 54, -44, -58, -49, -56, 70, 65, 51, -36, 44, 62, 54, -63, -33, -63, 42, 68, -54, -20, 28, -17, 68, -36, 59, 33, -17, -34, 65, -4, 22, 37, 31, 29, 62, -16, 66, 0, -20, 52, -17, -61, 8, -18, 56, 58, -73, -36, -68, -38, 36, -27, -2, -42, 46, 14, 65, -17, 64, -57, -28, -52, -72, -14, -66, -55, -39, -55, 69, -14, 74, -65, 31, -73, 60, 25, -15, -14, 22, 1, 59, -9, 28, 68, -62, -8, -20, 5, -20, -64, 55, -72, 31, 73, 71, -52, 61, 43, 32, 22, 3, -35, -72, 26, -39, 40, -46, -55, -45, 24, 42, 13, -6, -27, -67, -64, -32, -55, -10, -55, 44, 42, -19, 43, -52, -33, 67, -25, -68, -14, 23, -57, -18, 49, 31, -54, -5, 28, 18, 63, -66, -72, -35, -70, -46, 62, 6, 43, -60, -3, 31, 38, 48, 33, 68, -4, -33, -57, -41, 66, -37, -11, 7, -29, 71, -13, 17, -31, -62, 40, 11, 49, -26, 9, 70, 3, 45, 34, 54, -41, -44, -20, -26, -66, 15, -8, -62, 0, -19, 63, -58, 27, -11, 65, 71, 66, -64, -29, -38, 12, -2, 16, -14, -40, 28, -50, -4, -28, 26, 4, 60, 0, 70, 16, -53, -37, 1, -11, -37, 72, 56, 21, 15, -22, -62, 68, -64, -13, 8, 37, -55, 24, 31, -33, 34, 40, 36, 0, -7, -1, -47, -57, 47, -36, -49, 10, 1, -59, 7, -70, 54, -49, -49, -55, 70, 70, 67, -40, 35, 65, -45, 71, -33, 66, -72, 60, -49, -28, 47, 35, 26, -53, 51, -1, 67, 27, -16, 14, -71, -31, 11, -62, -51, -40, 58, -35, -15, -34, 46, -34, 70, 59, 45, 67, -16, 12, -61, 23, 26, -3, -27, 13, 35, -3, -67, 40, -24, 18, 65, -61, 71, -15, 52, 10, 55, -23, 25, 70, 68, 24, -5, 56, 49, 69, 17, 29, -60, -43, -13, 50, -57, -28, -67, 58, 1, 18, -1, -71, -5, -28, -20, 46, -31, -36, -46, -20, 65, -59, -51, 51, 64, -23, 18, 8, -71, 3, 0, 24, -35, 52, 4, -29, -63, 45, -56, -46, -37, 60, -11, 18, 22, -33, 61, 65, -60, 23, -70, -39, -25, 26, 52, -43, -2, 62, 32, -54, -24, 10, 46, 42, 49, 33, -22, 24, 52, 48, -39, 19, -1, -73, -60, 1, -54, -4, -69, -48, 52, -34, 35, 31, 64, -73, 60, 13, 45, 17, -63, 73, 67, 18, 51, 57, -47, -39, 11, -18, 7, -61, 3, 21, 8, 32, 4, -35, 55, -12, 23, -52, -34, 5, 60, -55, 20, -6, 4, 20, 64, -1, 43, 12, -7, -33, -56, -55, -12, 67, 30, -46, 56, 4, -34, -10, -20, 12, -4, -13, -28, -73, -2, -66, 12, -51, -38, 40, -74, -36, -44, -18, 35, 23, -59, 54, -37, -39, 37, 17, 13, 42, 55, 0, -40, 33, 27, 51, 41, 23, 5, -12, 4, 31, 4, -26, 43, 24, -16, -48, 49, -61, 18, -67, 39, -46, -41, -21, 46, -70, -63, -29, 21, 46, 67, 28, -41, 22, 43, -13, -73, -11, -3, 12, -4, 18, -5, 56, -49, -10, -55, -23, 68, -4, 11, 71, -46, -53, -49, 59, 53, -63, -49, -12, 2, -27, -24, 50, 47, -8, 10, 30, -22, -47, 5, 73, 30, -6, 21, -54, 36, -1, -68, -32, -49, -16, -56, 57, 54, -26, -62, -15, 7, -69, -54, -32, -32, 34, 59, -56, 22, 12, -52, -35, 71, 6, -15, 47, -18, -23, -64, 72, -58, 19, -68, 43, -57, -30, 9, -16, 71, -46, -37, -50, 31, 6, -32, -36, -10, 35, -2, -46, -57, 3, -41, 12, -1, 32, 73, 63, -57, 27, -42, 68, -41, 9, -19, -67, 6, -2, 39, 38, 35, 46, -15, -37, 1, -21, 34, -52, -21, 14, -56, -68, -16, 7, 26, 16, -23, -16, -22, -65, 14, 19, 37, -13, -32, -40, -21, -73, -63, -53, -23, -29, 11, 66, 59, -5, -60, -16, 11, 40, 7, 8, 24, -28, 7, -73, 54, 33, -6, -62, -71, 69, -55, 13, 24, -72, -70, -37, -29, 61, 56, 19, -48, 11, -7, 45, 30, 60, 28, 74, -8, -69, 58, -38, -70, 63, 22, 43, -60, 2, 7, -19, -65, -4, 13, -71, 49, 20, 57, -19, -47, 13, 66, 29, -7, 34, -58, 53, -72, -7, -2, -18, -14, -69, -37, -17, 25, 27, 74, -15, -42, -42, 59, 55, 11, -54, 4, 2, 60, 0, 11, -40, 33, -31, -9, -45, -20, 29, 25, -71, -26, 2, 34, -33, 2, -51, -58, -56, 34, 22, 52, -16, 1, -5, 54, -47, 43, 25, 24, 56, 11, 45, -60, -25, 68, -42, -25, -40, -59, 25, -19, 35, 65, 40, 9, 31, 57, -58, -4, 52, 33, -6, -33, 44, 22, -54, -8, 41, -31, 24, -1, 68, 6, -24, 22, 47, -33, 65, -20, 48, 48, -65, -60, 31, -54, -63, -71, 37, 52, 59, 18, -59, -57, 45, 53, 61, 16, 14, 5, 71, 43, 28, -39, -4, 0, -33, -73, -60, -60, -35, 64, -21, -1, 36, -13, 66, -55, -29, -38, 3, -63, 24, -31, 60, 9, -19, 61, 72, -61, -55, -69, 23, -29, 57, -35, -35, 22, 0, -62, 40, 44, -66, 57, 43, 40, -7, -58, -43, -55, -62, 32, 5, 27, -5, 22, -13, -10, -36, -21, 22, 29, 2, -5, -22, -48, 45, -71, 34, 48, 60, -30, -6, 18, -1, 42, 40, 15, 19, -15, -63, -7, -62, 35, -22, 56, -61, 15, -31, 13, -41, -71, 0, -55, 17, -18, -19, 2, -69, -69, 44, 71, -56, 68, 60, 7, 33, 64, -43, -50, -21, -1, -11, -10, 65, 40, -16, -33, -48, 8, -53, -61, 68, 16, 63, -60, 73, 28, 36, 25, -24, 16, 54, -5, -10, 40, 41, -54, 20, -40, 45, -43, 49, -41, 13, 18, -4, 0, -16, 8, -16, -56, -67, -11, 22, 55, 35, -70, 64, -15, -59, 36, -46, 31, -67, -28, -17, 46, 60, 64, 3, -45, -63, 50, 73, 65, -45, 44, 26, 52, 18, 21, -24, 30, 63, -45, -30, 60, -9, -20, -69, 54, -15, 71, 58, 27, -42, -34, 60, -56, 66, 6, -32, -33, 28, -27, -14, -70, 68, 17, 42, -65, 44, 34, -27, 33, -70, 36, -16, 65, -49, 21, -7, -19, -3, 66, -50, -28, -50, -72, -48, -11, -45, -48, -45, -42, -10, -39, -29, -44, 5, 44, -51, -25, 52, 42, 29, 36, -11, -40, -46, 50, 57, -5, -59, -12, 13, 33, -67, 26, -55, -57, 31, -34, 16, 71, 11, 56, 8, 67, 59, -4, 7, 56, 55, 66, -6, 62, -1, 64, -43, 42, 44, -29, -50, -1, 41, 0, 28, 55, -17, -30, -32, 50, -37, 70, -55, -57, -30, 71, 69, 14, -10, 36, 15, -35, -8, -6, 14, -71, 34, -43, 15, 17, 53, -61, 33, 17, 12, 22, -67, -18, -67, -49, 56, 42, 19, 70, 9, -27, -16, 29, -69, -49, -10, 19, -7, 71, 2, -25, -73, -44, -74, -48, -41, -36, 5, -48, -34, -72, 56, -67, 17, -13, 45, 60, 24, -54, -10, -2, -55, 8, 43, 67, 7, -19, -35, -11, 25, -72, -71, 39, -17, 49, 7, 0, -20, 24, -71, 59, -3, -55, 23, 49, -27, 70, -14, -17, 58, -65, -13, 29, -14, 61, 10, -61, 22, -36, -42, -32, 26, 50, 74, -37, -5, 60, -24, 55, -62, -19, -37, -24, -68, -35, -51, 12, 42, 15, -57, -39, -19, -64, -39, 69, -55, -50, 1, -38, -56, -9, -63, 33, 20, -33, 41, -69, -23, 36, -59, -20, -60, -60, -45, 70, -3, 1, 45, -53, 17, -5, -39, 31, -55, -17, -10, 55, -40, 12, 67, 23, -19, 7, -26, 16, -74, 29, -18, 25, 70, 71, -52, -34, -43, 42, -62, -41, 27, 50, -57, 58, 1, -36, 57, 15, 15, 27, -72, 46, -4, 40, -41, -1, -58, 20, 24, -10, -30, -21, 18, -11, -27, -49, 61, -46, -45, -7, -5, -10, 32, 11, -32, 11, 34, -25, -50, -25, -6, -52, 37, -54, 31, -56, -13, -25, 11, -53, 49, 21, -22, -36, -45, -1, 66, 37, 65, 25, -66, -38, -16, 73, 5, 65, -68, -1, 38, 6, 1, 70, 29, 65, 13, -27, 51, -72, -44, 16, 57, 56, 42, -51, -27, -10, -39, 50, 59, -40, 16, 22, 38, 7, 53, 21, -6, 58, -56, 18, -20, 59, 21, -37, 65, 59, 40, -30, 16, 49, -8, 26, -29, 59, 28, -38, -52, -51, -54, -65, 66, 23, 36, -31, 10, -29, -35, -7, 65, -68, 16, -65, 54, -57, -46, -8, 27, -64, -72, -24, 5, -57, -18, 35, 72, 72, -31, 16, 12, -47, 32, 62, 4, -7, -32, 57, 32, -8, -13, -73, -62, 56, -33, 9, 1, 56, 30, -37, -25, -23, 4, 70, 66, 30, 55, -17, -10, -40, -34, -41, -1, 28, 4, -55, -69, -58, -14, 43, 56, -14, -19, 5, -71, -66, 15, 56, 48, -30, 16, -10, -61, 29, -35, 44, -23, 38, 32, 48, 63, -54, 16, 40, 70, 41, -15, -19, -20, 5, -62, -47, -41, -10, -63, 73, 24, -44, -24, -45, 17, -47, -40, -39, 15, -15, 62, -15, 44, 67, 6, -2, 41, -3, 0, -7, -6, -37, -60, 55, -60, -57, -61, -72, 34, 51, 23, 25, -37, 45, 73, -7, 16, -22, -58, 59, -34, -5, 19, -61, 46, 12, -12, -10, -70, -54, 68, 44, -68, 0, -55, 33, 68, 0, -34, 34, -38, -20, -59, -11, 28, 21, -45, 57, 54, 71, -42, 12, -16, -22, -35, -9, 15, -41, 42, -48, 62, 4, -13, 21, -32, -67, 27, 56, 20, 23, -69, -15, -28, -64, 38, -57, 10, 2, 52, 56, -24, 24, 56, -66, 72, 38, 37, -19, 26, -2, -7, -28, 45, -68, 19, -53, -45, 35, 24, -65, -21, -71, -32, -18, 25, 33, 13, -66, -40, -16, 50, -2, 27, -26, -17, -37, -71, -26, -15, -53, 46, 40, -67, 73, 67, 33, 48, 45, -65, 59, -62, 5, -18, 38, 70, -73, 4, 24, -4, 59, -11, -17, -58, -62, 62, -32, -39, -20, -30, 46, -7, 71, -24, 47, 16, -36, -12, 62, 29, 19, -36, 52, 49, 35, -70, -69, 66, 9, 58, -33, 50, 22, 72, -60, -12, 65, -52, -64, -62, -63, 41, 50, 34, 51, -6, -2, 32, -59, -52, -69, 66, 33, -65, -43, -60, 14, -72, 67, 20, 45, -29, -30, 59, 7, 45, 68, -49, -7, -65, 59, 27, 48, 42, 51, -57, 4, 73, -50, 17, -18, -36, -51, 5, 5, -4, -47, 73, 8, -15, 27, -2, -15, 42, -6, -16, 1, -18, 11, -42, -37, -44, -24, 35, -71, -15, 33, -66, -50, 9, 55, 44, -32, 54, 46, 17, -27, 2, -64, -4, 20, 41, -26, -33, -36, -41, 46, -46, -28, 2, 7, -24, 4, 2, 71, -43, -41, -43, 53, 35, 37, -41, 48, 59, -16, -64, -63, -21, -73, 44, 3, 25, -1, 49, -41, 58, 61, 31, 66, -39, 48, -50, -58, -50, -7, 69, -47}

#define ADD_CONV2D_KERNEL_0_SHIFT (9)

#define ADD_CONV2D_BIAS_0 {-83, 105, -91, 68, -29, 91, 82, -41, -36, -13, -38, -110, 66, 55, -82, 66}

#define ADD_CONV2D_BIAS_0_SHIFT (8)

#define BATCH_NORMALIZATION_KERNEL_0 {101, 102, 102, 102, 102, 103, 101, 101, 101, 101, 103, 100, 102, 101, 102, 102}

#define BATCH_NORMALIZATION_KERNEL_0_SHIFT (7)

#define BATCH_NORMALIZATION_BIAS_0 {84, 83, 85, 85, 84, 83, 84, 85, 83, 84, 84, 85, 83, 84, 84, 84}

#define BATCH_NORMALIZATION_BIAS_0_SHIFT (7)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define ADD_CONV2D_OUTPUT_SHIFT 0
#define BATCH_NORMALIZATION_OUTPUT_SHIFT 0

/* bias shift and output shift for each layer */
#define ADD_CONV2D_INPUT_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#if ADD_CONV2D_INPUT_LSHIFT > 0
#define ADD_CONV2D_MODE 1
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (ADD_CONV2D_KERNEL_0_SHIFT-INPUT_1_OUTPUT_SHIFT)
#elif ADD_CONV2D_INPUT_LSHIFT < 0
#define ADD_CONV2D_MODE 2
#define ADD_CONV2D_INTER_SHIFT INPUT_1_OUTPUT_SHIFT
#define ADD_CONV2D_INTER_LSHIFT (INPUT_1_OUTPUT_SHIFT-ADD_CONV2D_KERNEL_0_SHIFT)
#else
#define ADD_CONV2D_MODE 0
#define ADD_CONV2D_INTER_SHIFT ADD_CONV2D_KERNEL_0_SHIFT
#define ADD_CONV2D_INTER_LSHIFT 0
#endif
#define ADD_CONV2D_OUTPUT_RSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_OUTPUT_SHIFT)
#define ADD_CONV2D_BIAS_LSHIFT   (ADD_CONV2D_INTER_SHIFT-ADD_CONV2D_BIAS_0_SHIFT)
#if ADD_CONV2D_OUTPUT_RSHIFT < 0
#error ADD_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if ADD_CONV2D_BIAS_LSHIFT < 0
#error ADD_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif
#define BATCH_NORMALIZATION_OUTPUT_RSHIFT (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_OUTPUT_SHIFT)
#define BATCH_NORMALIZATION_BIAS_LSHIFT   (ADD_CONV2D_OUTPUT_SHIFT+BATCH_NORMALIZATION_KERNEL_0_SHIFT-BATCH_NORMALIZATION_BIAS_0_SHIFT)
#if BATCH_NORMALIZATION_OUTPUT_RSHIFT < 0
#error BATCH_NORMALIZATION_OUTPUT_RSHIFT must be bigger than 0
#endif
#if BATCH_NORMALIZATION_BIAS_LSHIFT < 0
#error BATCH_NORMALIZATION_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t add_conv2d_weights[] = ADD_CONV2D_KERNEL_0;
static const nnom_weight_t add_conv2d_w = { (const void*)add_conv2d_weights, ADD_CONV2D_OUTPUT_RSHIFT};
static const int8_t add_conv2d_bias[] = ADD_CONV2D_BIAS_0;
static const nnom_bias_t add_conv2d_b = { (const void*)add_conv2d_bias, ADD_CONV2D_BIAS_LSHIFT};
static const nnom_addconv_parameter_t add_conv2d_parameter = { (const void*)NULL, ADD_CONV2D_MODE, ADD_CONV2D_INTER_LSHIFT};
static const int8_t batch_normalization_weights[] = BATCH_NORMALIZATION_KERNEL_0;
static const nnom_weight_t batch_normalization_w = { (const void*)batch_normalization_weights, BATCH_NORMALIZATION_OUTPUT_RSHIFT};
static const int8_t batch_normalization_bias[] = BATCH_NORMALIZATION_BIAS_0;
static const nnom_bias_t batch_normalization_b = { (const void*)batch_normalization_bias, BATCH_NORMALIZATION_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[16384];
static int8_t nnom_output_data[16384];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[4];

	new_model(&model);

	layer[0] = Input(shape(32, 32, 16), nnom_input_data);
	layer[1] = model.hook(AddConv2D(16, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &add_conv2d_w, &add_conv2d_b, &add_conv2d_parameter), layer[0]);
	layer[2] = model.hook(BatchNormalization(16, &batch_normalization_w, &batch_normalization_b), layer[1]);
	layer[3] = model.hook(Output(shape(32, 32, 16), nnom_output_data), layer[2]);
	model_compile(&model, layer[0], layer[3]);
	return &model;
}
