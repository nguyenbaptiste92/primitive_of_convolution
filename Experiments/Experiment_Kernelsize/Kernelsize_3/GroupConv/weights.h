#include "nnom.h"

#define GROUP_CONV2D_KERNEL_0 {40, -38, -68, 32, -65, -19, 49, 13, 74, 62, 84, -67, 81, -20, 6, -11, -62, 55, -37, -33, -46, -46, -27, -66, 1, -25, 44, -6, -56, -27, -25, -77, -35, 44, -37, 67, 58, -13, 54, 27, -49, 48, -6, -56, -58, -2, -4, 77, 75, -85, -74, -59, 63, 39, 33, 68, 42, 50, -64, 66, -19, -8, 10, -37, -72, -82, -85, 54, -24, -63, -77, -77, 24, -21, -44, 23, -16, 24, 28, -32, -20, 64, 42, 25, -61, 75, -33, 62, -49, 7, -41, 0, 49, -77, 64, -72, -38, 23, -32, -32, -2, 9, 6, -4, -40, -70, -20, -42, -20, 17, 36, -42, -68, 54, 56, -32, 81, 58, -5, -39, 25, 67, 84, -54, -29, 48, -13, 84, 20, -77, -3, -60, 43, -14, 39, 46, -82, 52, -64, 52, -47, 79, 42, 40, -26, 24, 0, 54, 1, -60, 15, 55, 66, 36, -62, 24, 46, 49, 6, 44, -18, 47, -74, -65, 27, -75, 50, -63, -52, 48, 75, -47, -64, -22, 23, 21, 72, 13, -82, -12, 24, 13, -69, 65, -53, 72, -81, 41, 54, -24, -3, -33, 46, -65, -53, 19, 54, -25, -52, -50, -61, 66, 5, -16, -47, -74, -2, 83, -81, 8, 13, 29, 25, -55, 33, 13, 47, 36, 83, -85, 69, -5, -81, 24, -61, -10, 47, -1, -30, -77, -12, -41, -79, -9, -19, 59, 81, 20, 46, -38, -48, -75, -83, 68, 71, -31, 73, 60, 5, -40, 68, 29, 19, 19, 62, -57, 43, -79, -58, 73, -24, 29, 32, -71, -82, -22, -54, -49, 57, -48, 43, 53, -43, 47, -31, -9, 4, 22, 12, 3, 28, -18, -74, -28, 57, -39, 77, 14, -73, 40, -47, 33, -79, -44, -4, -76, 30, 35, 49, -20, -85, 81, 32, 7, -38, 41, -38, 68, 28, -83, 7, 74, 49, 57, 81, 25, -77, 69, 54, -57, -63, -31, 7, 20, 69, 13, -30, 75, 51, -48, 65, 17, 3, 17, -42, 24, -27, 1, 67, -50, -34, -50, -73, -75, 6, 45, -64, 47, -2, -34, 63, 16, 32, -12, 84, 62, -78, 3, 57, -48, -47, -10, 46, 69, -17, -55, -14, 75, 2, -36, 80, -18, -26, -38, 15, -18, 43, 83, -85, -28, 0, 68, -16, 3, -8, 66, -38, 13, -12, -77, 0, -64, 19, -57, -7, 5, 44, 69, -18, -29, 33, 17, 38, -19, -41, -43, -46, 27, 34, -2, -22, -67, 11, -67, 80, -70, -40, 53, -75, -45, 10, 69, -7, -57, -57, -58, 53, -6, 60, 67, -2, 37, -14, 70, 73, -9, 74, 32, 57, -74, -18, -53, -18, 22, 5, 30, -36, 26, -32, -27, 6, 54, 60, -82, -7, -15, -11, 41, -10, -83, 19, 78, -42, 76, -63, -48, -46, -28, -32, -15, -34, 43, 80, 21, 35, -70, 64, -71, 80, -60, -36, 42, 28, 28, 83, -12, 63, -30, 77, 36, -18, -12, 28, -11, 2, -8, -24, -49, 25, 67, 35, 76, -84, -42, -24, -38, -33, 51, -5, 28, 23, 58, 44, 63, -81, 78, 70, -15, 62, -54, -68, 47, 20, -51, -85, -83, -3, -68, 45, 55, -83, -14, -50, -74, -72, 7, 43, 0, 18, -78, 50, 21, 19, 24, -40, -51, -39, -9, -70, 38, -71, 16, -56, -30, 40, -16, -22, -12, 85, 46, 25, -47, 60, 28, 60, -83, -65, 25, 80, 76, 83, 22, 20, -68, 8, 14, -61, 43, -18, -60, -81, -17, -48, -41, -52, -46, -67, 68, 11, 50, -54, -16, -30, -38, 80, -11, 69, -44, 47, 81, 61, -73, -28, 44, -63, -22, 1, 69, -4, -25, 34, -1, 25, -44, 66, 15, -81, -9, -33, -71, -16, 37, 65, 22, -39, -51, -55, 70, 26, -1, 28, 79, -72, -36, 27, 42, 48, -11, -71, 83, -85, -14, 28, 9, -36, 21, 29, -69, -1, 37, 41, -72, 63, 29, 25, -76, -80, -3, 76, 2, -75, -18, -17, -25, 45, 82, 56, -14, 37, 20, 62, 61, 38, 83, 59, 83, 38, 34, -25, 3, -57, -51, 39, -45, -24, 29, 9, 31, -68, 84, -15, 67, -75, -43, 18, -34, 70, 7, -75, -35, 40, 15, -48, 11, -77, 54, 15, 60, 17, 33, -5, 9, -24, -43, 13, -40, 17, 66, -73, -75, -42, 17, 56, 71, -10, 62, -52, -38, 41, -55, 49, -28, 41, -8, 15, 39, 44, 3, -61, 19, -85, 8, 17, 70, -68, -68, -48, 67, 15, -29, -81, -53, -17, -85, 8, 23, 76, -29, -72, 44, -71, -35, 14, 16, 21, 1, 10, 46, -32, 32, -34, -54, -55, 83, 9, 25, 54, -29, 34, -75, -50, -58, -38, 32, -2, 44, -82, 70, 61, 16, -15, -78, 74, -29, -22, 85, 47, 79, 21, 2, -80, -27, -30, 77, 75, 2, -70, 48, 74, -71, -78, -23, 48, 50, -25, 48, -62, -80, -84, -18, -74, -78, 44, 54, -35, 76, -51, -3, -4, -57, -77, -18, -22, 6, 20, 8, -21, -3, -53, 39, -53, 61, -36, 35, -21, -33, 11, 14, 11, -40, 38, 3, -16, 52, 66, -11, -39, 42, 64, -53, 39, 50, -62, 12, 55, 4, -22, -58, 54, 30, -59, 60, -11, 79, 32, -80, -74, -13, -62, -34, 75, 33, 7, -10, 18, 80, 80, 30, 76, 50, -55, -82, 69, 61, 61, -6, 54, 71, -10, 51, -12, -11, 17, 13, 50, 37, -34, -64, 58, 23, -30, -69, -42, -51, 83, 4, -64, 20, -56, -85, 30, 39, 84, 14, 43, 42, 22, -36, -77, 58, 64, -29, -44, -38, -15, -46, -48, -43, -35, -73, -68, -79, -55, 68, 27, 60, 30, -10, 71, -29, 70, 75, -53, 24, -25, -17, 75, 15, -6, 23, 22, 14, 46, 7, -83, -44, 41, -46, -54, 31, 40, -31, 78, 16, -55, -35, -13, -81, 80, -77, -23, -54, 8, -80, -59, -42, -58, -8, -5, -54, -2, -63, 66, 16, -31, -46, -62, -30, -14, -73, -58, 72, -61, -57, 80, -32, 56, -5, 3, 60, -33, -63, 79, -85, 71, 80, 83, -84, 37, -85, 46, 29, 35, -65, 8, -70, -52, 72, 82, -61, 62, 37, 32, -33, -9, 81, 51, 10, 67, 79, -33, -66, -1, 65, -73, 67, 4, 7, 83, -8, -71, -14, -68, 64, 11, -7, 50, -82, -2, 8, -52, 34, -32, -20, -34, -58, -12, -39, -1, -7, 81, 38, -53, -34, 9, 85, -40, -39, -18, 72, -17, 0, 47, 74, 77, 12, -50, 49, -29, -39, 2, -66, -61, -56, 39, -36, -73, 41, 48, 55, -34, -25, -3, -81, -12, -18, -2, 77, 21, -50, 69, 28, 36, -42, -43, -51, -37, -1, -8, 66, -70, -53, 19, 9, 26, -23, -49, 6, -77, 44, 50, -26, -54, -38, -67, -33, 46, -19, -83, 78, 11, -9, 75, 6, -72, 16, -49, -21, 71, -36, -46, 57}

#define GROUP_CONV2D_KERNEL_0_SHIFT (9)

#define GROUP_CONV2D_BIAS_0 {57, 63, -85, -35, -97, 93, 42, -26, -23, 40, -82, -79, 60, -9, 81, 73}

#define GROUP_CONV2D_BIAS_0_SHIFT (8)


/* output enconding for each layer */
#define INPUT_1_OUTPUT_SHIFT 7
#define GROUP_CONV2D_OUTPUT_SHIFT 6

/* bias shift and output shift for each layer */
#define GROUP_CONV2D_OUTPUT_RSHIFT (INPUT_1_OUTPUT_SHIFT+GROUP_CONV2D_KERNEL_0_SHIFT-GROUP_CONV2D_OUTPUT_SHIFT)
#define GROUP_CONV2D_BIAS_LSHIFT   (INPUT_1_OUTPUT_SHIFT+GROUP_CONV2D_KERNEL_0_SHIFT-GROUP_CONV2D_BIAS_0_SHIFT)
#if GROUP_CONV2D_OUTPUT_RSHIFT < 0
#error GROUP_CONV2D_OUTPUT_RSHIFT must be bigger than 0
#endif
#if GROUP_CONV2D_BIAS_LSHIFT < 0
#error GROUP_CONV2D_BIAS_LSHIFT must be bigger than 0
#endif

/* weights for each layer */
static const int8_t group_conv2d_weights[] = GROUP_CONV2D_KERNEL_0;
static const nnom_weight_t group_conv2d_w = { (const void*)group_conv2d_weights, GROUP_CONV2D_OUTPUT_RSHIFT};
static const int8_t group_conv2d_bias[] = GROUP_CONV2D_BIAS_0;
static const nnom_bias_t group_conv2d_b = { (const void*)group_conv2d_bias, GROUP_CONV2D_BIAS_LSHIFT};

/* nnom model */
static int8_t nnom_input_data[16384];
static int8_t nnom_output_data[16384];
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[3];

	new_model(&model);

	layer[0] = Input(shape(32, 32, 16), nnom_input_data);
	layer[1] = model.hook(GroupConv2D(16, 2, kernel(3, 3), stride(1, 1), dilation(1, 1), PADDING_SAME, &group_conv2d_w, &group_conv2d_b), layer[0]);
	layer[2] = model.hook(Output(shape(32, 32, 16), nnom_output_data), layer[1]);
	model_compile(&model, layer[0], layer[2]);
	return &model;
}
